' Gambas class file

'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publiés par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'----------------------------------------------------------------------------
'################################################
'# nom du fichier           : FRestore.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 01/11/2004
'# Restauration de la base Laurux
'################################################
'
Private son As Integer = Start.Son
Private Content As String
Private Compb As Boolean

Public Sub _New()

  Try SauveB.Text = Settings["/Rep_Sauv"]
  Try Compb = Settings["/Compression"]

  Music.Load(Start.Musique)
  Me.Center

End

Public Sub Button3_Click()

  Me.close

End

Public Sub Button2_Click()

  Dim Uncp As New Uncompress
  Dim txterror As String
  Dim Utilisateur As String
  Dim Date_Sauve As String
  Dim Heure_Sauve As String
  Dim x, n As Integer
  Dim Lig As String
  Dim cle As String
  Dim iPos As Integer
  Dim lg As Integer
  Dim Hnew As File
  Dim filename As String
  Dim Tactive As String
  Dim sversion As String[]
  Dim $version As String
  Dim bmariadb As Boolean = False

  Tactive = "Fiches_Docactif"
  filename = User.Home & "/tmp/resultat"
  hnew = Open filename For Create
  Uncp.type = "zlib"
  Me.Mouse = Mouse.Wait
  Utilisateur = Recup.Utilisateur()
  Shell "mysql -h " & Settings["/dbase/Host"] & " -u " & Utils.db.login & " -p" & Utils.db.Password & " -e " & "\"" & "show variables Like " & "\\" & "\"" & "version" & "\\" & "\"" & ";\"" & "> " & User.home & "/tmp/resultat 2>&1 " Wait
  $version = File.Load(User.Home & "/tmp/resultat")
  sversion = Split($version, "\n")
  If sversion.Count >= 2 Then
    If InStr(sversion[1], "MariaDB") = 17 Then bmariadb = True
  Endif
  If Compb Then Try uncp.File(SauveB.Text & "/" & Utils.db.Name & ".sql.gz", SauveB.Text & "/" & Utils.db.Name & ".sql")
  If Error Then Compb = False
  If Not Exist(SauveB.Text & "/" & Utils.db.Name & ".sql") Then
    Me.Mouse = Mouse.Arrow
    If son Then
      Music.Play
    Endif
    Message.Error("La base " & Utils.db.Name & ".sql" & " ne peut pas être restaurée ! \n Veuillez verifier le chemin de la base à restaurer\n ou vérifier le support de sauvegarde.")
  Else
    If Compb = False Then
      Shell "ls -1 -g " & SauveB.text & "/" & Utils.db.Name & ".sql >" & User.Home & "/tmp/resultat 2>&1" Wait
    Else
      Shell "ls -1 -g " & SauveB.text & "/" & Utils.db.Name & ".sql.gz >" & User.Home & "/tmp/resultat 2>&1" Wait
    Endif
    If Exist(User.Home & "/tmp/resultat") Then txterror = File.Load(User.Home & "/tmp/resultat")
    Lig = Trim$(txterror)
    For x = 1 To 8
      iPos = InStr(Lig, " ")
      cle = Left$(Lig, iPos - 1)
      For n = 1 To 2
        If cle = "" Then
          iPos = InStr(Lig, " ")
          Lig = Mid$(Lig, iPos + 1)
          iPos = InStr(Lig, " ")
          cle = Left$(Lig, iPos - 1)
          If n = 2 Then Lig = Mid$(Lig, iPos + 1)
        Else
          Lig = Mid$(Lig, iPos + 1)
          Break
        Endif
      Next
      Select Case x
        Case 3
          Utilisateur = cle
        Case 5
          Date_Sauve = cle
        Case 6
          Date_Sauve = cle & " " & Date_Sauve
        Case 7
          Heure_Sauve = cle
      End Select
    Next
    hnew = Open filename For Create 'On vide le fichier
    Me.Mouse = Mouse.Default
    lg = Mmysql.Process_List(0)
    If lg = 0 Then
      Message.Error("Mot de passe invalide !")
      Me.Mouse = Mouse.Default
    Else
      If lg > 7 Then
        Me.Mouse = Mouse.Default
        Panel1.Visible = True
      Else
        hnew = Open filename For Create 'On vide le fichier
        Syntheses.Message("Attention ! Vous allez effectuer une restauration.")
        If Message.Question("Vous allez restaurer la base " & Utils.db.Name & ".sql" & " sauvegardée par " & Utilisateur & " le " & Date_Sauve & " à " & Heure_Sauve & " heures ! ", "Oui", "Non") = 1 Then
          Me.Mouse = Mouse.Wait
          Shell "mysql -h " & Settings["/dbase/Host"] & " -u " & Utils.db.login & " -p" & Utils.db.Password & " -e \"Drop database " & Utils.db.Name & ";\" " Wait
          Shell "mysql -h " & Settings["/dbase/Host"] & " -u " & Utils.db.login & " -p" & Utils.db.Password & " -e \"Create database " & Utils.db.Name & ";\" " Wait
          If IsNull(Utils.db.Password) Then  'Gère l'absence de mot de passe
            Shell "mysql -h " & Settings["/dbase/Host"] & " -u " & Utils.db.login & " " & Utils.db.Name & " < " & SauveB.Text & "/" & Utils.db.Name & ".sql > " & User.home & "/tmp/resultat 2>&1" Wait
          Else
            Shell "mysql -h " & Settings["/dbase/Host"] & " -u " & Utils.db.login & " -p" & Utils.db.Password & " " & Utils.db.Name & " < " & SauveB.Text & "/" & Utils.db.Name & ".sql >  " & User.home & "/tmp/resultat 2>&1" Wait
          Endif
          Shell "mysql -h " & Settings["/dbase/Host"] & " " & " -u " & Utils.db.Login & " -p" & Utils.db.Password & " -e \"use " & Utils.db.Name & ";" & "SET @@global.sql_mode= NO_ENGINE_SUBSTITUTION " & "; \"" Wait
          If Exist(User.Home & "/tmp/resultat") Then txterror = File.Load(User.Home & "/tmp/resultat")
          If InStr(txterror, "Using a password") <> 18 And Not bmariadb Or If Not IsNull(txterror) And bmariadb Then
            If son Then
              Music.Play
            Endif
            Me.Mouse = Mouse.Default
            If son Then Music.play
            Message.Error(Txterror & "La base " & Utils.db.Name & ".sql" & " n'a pas pu être restaurée ! \n Veuillez verifier l'utilisateur utilisé ainsi que ses droits d'accés.")
          Else
            If son Then Music.Play
            Try Utils.db.Exec("Truncate " & Tactive & "")
            Me.Mouse = Mouse.Default
            Message.Info("La base " & Utils.db.Name & ".sql" & "  a été correctement restaurée.")
            Verif_Version()
          Endif
        Endif
      Endif
    Endif
  Endif

End

Public Sub Process_Read()

  Dim hFile As File

  hFile = Open User.Home & "/tmp/resultat" For Read

  While Not Eof(hFile)
    Line Input #hFile, content
  Wend

End

Public Sub Svs_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.home
  If Not Dialog.SelectDirectory() Then
    SauveB.Text = Dialog.Path
  Else
    SauveB.Text = User.home
  Endif

End

Public Sub Verif_Version()

  Dim rResult As Result
  Dim Version As String
  Dim AppVersion As String
  Dim AppVersionArr As String[]

  rResult = Utils.db.Exec("SELECT * FROM Fiches_Parametres ")
  AppVersionArr = Split(Application.Version, ".")
  AppVersion = AppVersionArr[0] & "." & AppVersionArr[1]
  Try Version = rResult!version
  If Error Then
    Message.Warning("La version de la base restaurée est tres ancienne!\nVeuillez modifier le champ Version du fichier ~/.config/gambas3/Laurux3.conf et relancer Laurux SVP !")
    Quit
  Else If AppVersion <> rResult!version Then
    Message.Warning("La version de la base restaurée est différente de celle de l'exécutable !\nVeuillez relancer Laurux SVP !")
    Quit
  Endif
  
End

Public Sub Button4_Click()

  Editeur.Prog_Editeur(User.Home & "/tmp/resultat")

End

Public Sub Button5_Click()

  Me.mouse = mouse.Wait
  Mmysql.Init()
  Button2_Click()
  Panel1.Visible = False
  Me.mouse = mouse.DEFAULT

End

Public Sub Button6_Click()

  Panel1.Visible = False

End

Public Sub Button1_Click()

  Exec ["xdg-open", Application.Path &/ "Ecrans/Restauration.html"]

End
