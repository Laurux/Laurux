' Gambas class file



'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publiés par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'----------------------------------------------------------------------------
'################################################
'# nom du fichier           : Prefs.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 15/06/2006
'# Gestion des preferences
'################################################

Private Tab As String
Private Fontes As String
Private hImage As Image
Private hImage2 As Image
Private ipos As Integer
Private $check As New CheckBox[]
Private $ipr As New Integer[]           'ou sont les points de rupture familles
Private global As Boolean
Private cursettings As Settings


Public Sub _new(Current_Settings As Settings, Optional IsGlobal As Boolean = False)
  
  Dim globalpath As String
  
  global = IsGlobal
  
  If global = False Then
    TextLabel2.Text = "Préférences Locales : \n" & Current_Settings.Path
  Else
    TextLabel2.Text = "Préférences Globales (Database)"
    TextLabel2.Background = &HFFEFBF
    If IsNull(Current_Settings) Then
      If Message.Warning("Attention etes-vous sur de vouloir creer des préférences globales?\n Cette fonction est expérimentale!", "Annuler", "Continuer") = 1 Then Return
      globalpath = Temp$("global_" & Application.Name & ".conf")
      Try Kill globalpath
      'on devrait initialiser les preferences globales si NULL uniquement a partir des paramètres locaux existant en mode global
      'Copy Start.LocalSettings.Path To globalpath 'copier tout ne marche pas
      Current_Settings = New Settings(globalpath)
      Current_Settings.Save()
      Current_Settings.Reload()
    Endif
  Endif
  
  cursettings = Current_Settings
  
End

Public Sub ReadSettings() As Settings
  
  Return cursettings
  
End



Public Sub ReadGlobal() As Settings
  
  Dim rResult As Result
  Dim Global_Settings As Settings
  Dim globalpath As String
  
  globalpath = Temp$("global_" & Application.Name & ".conf")
  rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabParam"))
  If IsNull(rResult) Then Return Null
  If rResult.Available And (rResult!conf).Length <> 0
    File.Save(globalpath, rResult!conf)
    Global_Settings = New Settings(globalpath)
    Return Global_Settings
  Else
    Return Null
  Endif
  
End

Public Sub ApplyGlobal(Global_Settings As Settings)

  Dim lsetting As String
  Dim setting As String
  Dim setting3 As String
  
  If Global_Settings = Null Or cursettings = Null Then Return
  For Each lsetting In Global_Settings.Keys
    For Each setting In Global_Settings.Keys[lsetting]
    If cursettings["/" & lsetting & "/" & setting] = Null Or cursettings["/" & lsetting & "/" & setting] <> Global_Settings["/" & lsetting & "/" & setting] Then
      'Try Print "/" & lsetting & "/" & setting & " : " & cursettings["/" & lsetting & "/" & setting] & " => " & Global_Settings["/" & lsetting & "/" & setting]
      cursettings["/" & lsetting & "/" & setting] = Global_Settings["/" & lsetting & "/" & setting]
    Endif
    Next
  Next
  
  cursettings.Save()

End

Public Sub Form_Open()

  Dim sVer As String
  Dim rResult As Result
  
  If global = False
    ApplyGlobal(ReadGlobal())
    Supprime.Visible = False
  Else
    'parametres globaux en couleurs
    Mdp2G.Background = &HFFEFBF
    AdminG.Background = &HFFEFBF
    Mdp2.Background = &HFFEFBF
    Admin.Background = &HFFEFBF
    Entete.Background = &HFFEFBF
    Conditions.Background = &HFFEFBF
    Tva550.Background = &HFFEFBF
    codetva.Background = &HFFEFBF
    Taxe.Background = &HFFEFBF
    Prefixe.Background = &HFFEFBF
    Lcr.Background = &HFFEFBF
    Materiel.Background = &HFFEFBF
    Depots.Background = &HFFEFBF
    Ged.Background = &HFFEFBF
    Taches.Background = &HFFEFBF
    AutoEnt.Background = &HFFEFBF
    Franchise.Background = &HFFEFBF
    Pvconseille.Background = &HFFEFBF
    Analytique.Background = &HFFEFBF
    Lettrage.Background = &HFFEFBF
    Carte.Background = &HFFEFBF
    Cheque.Background = &HFFEFBF
    Pays.Background = &HFFEFBF
    Expfact.Background = &HFFEFBF
    Ech.Background = &HFFEFBF
    Typec.Background = &HFFEFBF
    Caisse.Background = &HFFEFBF
    Tp1.Background = &HFFEFBF
    Tg1.Background = &HFFEFBF
    Siret.Background = &HFFEFBF
    Prxdec.Background = &HFFEFBF
    Numdossier.Background = &HFFEFBF
    Nomdossier.Background = &HFFEFBF
    Cof.Background = &HFFEFBF
    Tq.Background = &HFFEFBF
    Recap.Background = &HFFEFBF
    Impttc.Background = &HFFEFBF
    FacA.Background = &HFFEFBF
    PxRecpt.Background = &HFFEFBF
    Rcptman.Background = &HFFEFBF
    NumBr.Background = &HFFEFBF
    Depannage.Background = &HFFEFBF
    Valdevis.Background = &HFFEFBF
    Libdevis.Background = &HFFEFBF
    Valdevis2.Background = &HFFEFBF
    Valdevis.Background = &HFFEFBF
    Libdevis.Background = &HFFEFBF
    Valdevis2.Background = &HFFEFBF
    Rglt.Background = &HFFEFBF
    Poids.Background = &HFFEFBF
    Marge.Background = &HFFEFBF
    MO.Background = &HFFEFBF
    Codemo.Background = &HFFEFBF
  Endif
  
  Utils.Observers(Me)
  Me.center
  NmBr_pays()
  Echeances()
  Typeclient()
  Tab = "Fiches_Tvaav"
  Shell "gbx" & System.Version & " -V" To sVer
  'Version = Trim(Mid$(sVer, InStr(sVer, "-") + 1))
  If Application.Path = "/usr/bin/" & Application.Name Then Majver.Visible = False
  Try rResult = Utils.db.Exec("SELECT * FROM " & Tab & " ")
  If Not Error Then
    If rResult.Available Then
      Do
        codetva.Add(rResult!code_tva & " - " & rResult!taux_tva, rResult.index)
      Loop Until rResult.MoveNext()
    Endif
  Endif
  Try rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabTxmo") & " ")
  If Not Error Then
    If rResult.Available Then
      Do
        CodeMO.Add(rResult!code_txtmo & " - " & Format$(Val(Utils.cpoint(rResult!tx_txtmo)), "0.00"), rResult.index)
      Loop Until rResult.MoveNext()
    Endif
  Endif
  Try son.Value = cursettings["/son"]
  Try son2.Value = cursettings["/son2"]
  Try Tip.Value = cursettings["/Tips"]
  Try Conditions.Value = cursettings["/Soc" & Start.Societe & "/Conditions"]
  Try Tva550.Value = cursettings["/Soc" & Start.Societe & "/Tva550"]
  If Tva550.Value Then
    codetva.Visible = True
    Try codetva.Text = cursettings["/Soc" & Start.Societe & "/Codetva"]
  Else
    codetva.Visible = False
  Endif
  
  ' Gestion des mots de passe
  If global = True Then
    Try AdminG.value = cursettings["/Soc" & Start.Societe & "/AdminG"]
      If AdminG.value Then
      Mdp2G.Text = hexdblKey.crypt("de", cursettings["/Soc" & Start.Societe & "/MdpPrefsG"], "Laurux")
      Mdp2G.Visible = True
    Endif
  Else
    AdminG.Visible = False
    Mdp2G.Visible = False
  Endif
  
  Try Admin.value = cursettings["/Soc" & Start.Societe & "/Admin"]
    If admin.value Then
    Mdp2.Text = hexdblKey.crypt("de", cursettings["/Soc" & Start.Societe & "/MdpPrefs"], "Laurux")
    Mdp2.Visible = True
  Endif
  
  Try Slide.value = cursettings["/Soc" & Start.Societe & "/Slide"]
  Try Tme.value = cursettings["/Soc" & Start.Societe & "/Tme"]
  Try Taxe.Text = cursettings["/Soc" & Start.Societe & "/Taxe"]
  If IsNull(Taxe.text) Then Taxe.text = "Tva"
  Try Sauves.Text = cursettings["/Rep_Sauv"]
  Try Chemin10.Text = cursettings["/Soc" & Start.Societe & "/Fichiers"]
  Try Entete.Value = cursettings["/Soc" & Start.Societe & "/Entete"]
  Try cpt.Value = cursettings["/Soc" & Start.Societe & "/Compta"]
  Try Fac.Value = cursettings["/Soc" & Start.Societe & "/Gestion"]
  Try CptFac.Value = cursettings["/Soc" & Start.Societe & "/CptFac"]
  Try Prefixe.Value = cursettings["/Soc" & Start.Societe & "/Prefixe"]
  Try Lcr.Value = cursettings["/Soc" & Start.Societe & "/Lcr"]
  Try Valdevis.Text = cursettings["/Soc" & Start.Societe & "/Devis"]
  Try Libdevis.Value = cursettings["/Soc" & Start.Societe & "/Libdevis"]
  Try Valdevis2.Text = cursettings["/Soc" & Start.Societe & "/Devis2"]
  Try Recap.Value = cursettings["/Soc" & Start.Societe & "/Recap"]
  Try Impttc.Value = cursettings["/Soc" & Start.Societe & "/Impttc"]
  Try FacA.Value = cursettings["/Soc" & Start.Societe & "/Faca"]
  Try Exp.Value = cursettings["/Soc" & Start.Societe & "/Exp"]
  Try Expmail.Value = cursettings["/Soc" & Start.Societe & "/Expmail"]
  Try Imp.Value = cursettings["/Soc" & Start.Societe & "/Imp"]
  Try Adrexport.Text = cursettings["/Soc" & Start.Societe & "/Adr-export"]
  Try Chmimp.Text = cursettings["/Soc" & Start.Societe & "/Chemin-import"]
  Try Chmexport.Text = cursettings["/Soc" & Start.Societe & "/Chemin-export"]
  Try Qt1.Value = cursettings["/Soc" & Start.Societe & "/Qt1"]
  Try Cqte.Value = cursettings["/Soc" & Start.Societe & "/Cqte"]
  Try Adrbase.Text = cursettings["/Soc" & Start.Societe & "/Adr-base"]
  Try Cof.value = cursettings["/Soc" & Start.Societe & "/Coef"]
  Try Tq.value = cursettings["/Soc" & Start.Societe & "/Tmq"]
  Try Gcf.value = cursettings["/Soc" & Start.Societe & "/Coul_fen"]
  Try Infob.value = cursettings["/Soc" & Start.Societe & "/Infob"]
  Try Lgo.Value = cursettings["/Soc" & Start.Societe & "/glogo"]
  Try Lgo3.Value = cursettings["/Soc" & Start.Societe & "/glogo3"]
  Try Lgo5.Value = cursettings["/Soc" & Start.Societe & "/glogo5"]
  Try Lgo6.Value = cursettings["/Soc" & Start.Societe & "/glogo6"]
  'If Lgo.Value Then Panlogo.Visible = True
  'If Lgo3.Value Then Panlogo2.Visible = True
  Try Logo.Text = cursettings["/Soc" & Start.Societe & "/Logo"]
  Try Logo2.Text = cursettings["/Soc" & Start.Societe & "/Logo2"]
  Try Rglt.Value = cursettings["/Soc" & Start.Societe & "/Rglt"]
  Try Majver.Value = cursettings["/Majver"]
  Try Kgl.Value = cursettings["/Soc" & Start.Societe & "/Kgl"]
  Try Ctrlstk.Value = cursettings["/Soc" & Start.Societe & "/Ctrlstk"]
  Try Btq.Value = cursettings["/Soc" & Start.Societe & "/Btq"]
  'IF Btq.value = TRUE THEN Btq2.Visible = TRUE
  'TRY Btq2.Value = cursettings["/Soc" & Start.Societe & "/Btq2"]
  Try Adrbtq.Text = cursettings["/Soc" & Start.Societe & "/Adrbtq"]
  Try Identifiant.Text = cursettings["/Soc" & Start.Societe & "/Identifiant"]
  Try Adradminart.Text = cursettings["/Soc" & Start.Societe & "/Adradminart"]
  Try Adradminphot.Text = cursettings["/Soc" & Start.Societe & "/Adradminphot"]
  Try Mdpadmin.Text = cursettings["/Soc" & Start.Societe & "/Mdpadmin"]
  Try Photart.Text = cursettings["/Soc" & Start.Societe & "/Photart"]
  Try AutoEnt.Value = cursettings["/Soc" & Start.Societe & "/AutoEnt"]
  Try Franchise.Value = cursettings["/Soc" & Start.Societe & "/Franchise"]
  Try Pvconseille.Value = cursettings["/Soc" & Start.Societe & "/Pvcons"]
  If Exp.Value Then
    Panexp.Visible = True
    Panimp.Visible = False
    Expmail.Visible = True
  Else
    Panimp.Visible = True
    Panexp.Visible = False
    Expmail.Visible = False
  Endif
  Try Smtp.Text = cursettings["/Smtp"]
  Try Adrmail.Text = cursettings["/Adrmail"]
  Try Port.Text = cursettings["/Port"]
  Try Utilisateur.Text = cursettings["/Utilisateur"]
  Try MdpStmp.Text = hexdblKey.crypt("de", cursettings["/MdpStmp"], "Laurux")
  If IsNull(Port.Text) Then Port.text = "25"
  Try Poids.Value = cursettings["/Soc" & Start.Societe & "/Poids"]
  Try Materiel.Value = cursettings["/Soc" & Start.Societe & "/Materiel"]
  Try Depots.value = cursettings["/Soc" & Start.Societe & "/Depots"]
  Try Ged.value = cursettings["/Soc" & Start.Societe & "/Ged"]
  Try Taches.value = cursettings["/Soc" & Start.Societe & "/Taches"]
  Try Ecran.Text = cursettings["/Soc" & Start.Societe & "/Fecran"]
  aff_logo()
  aff_logo2()
  Try Fontes = cursettings["/Soc" & Start.Societe & "/Font"]
  If IsNull(fontes) Then
    FontChooser1.SelectedFont = "Serif,9"
  Else
    FontChooser1.SelectedFont = Fontes
  Endif
  Try Coupon.Value = cursettings["/Soc" & Start.Societe & "/Coupon"]
  Try Chemin.Text = cursettings["/Soc" & Start.Societe & "/Factchemin"]
  Try Chemin2.Text = cursettings["/Soc" & Start.Societe & "/FactcheminF"]
  Try Chemin4.Text = cursettings["/Soc" & Start.Societe & "/FactcheminP"]
  Try Chemin3.Text = cursettings["/Soc" & Start.Societe & "/FactcheminV"]
  Try Chemin5.Text = cursettings["/Soc" & Start.Societe & "/FactcheminA"]
  Try Chemin6.Text = cursettings["/Soc" & Start.Societe & "/FactcheminC"]
  Try Chemin7.Text = cursettings["/Soc" & Start.Societe & "/Pdfchemin"]
  Try Chemin8.Text = cursettings["/Soc" & Start.Societe & "/Bexpchemin"]
  Try Chemin9.Text = cursettings["/Soc" & Start.Societe & "/Bexpcheminpj"]
  Try Pdf.Value = cursettings["/Soc" & Start.Societe & "/Pdf"]
  Try Pdf2.Value = cursettings["/Soc" & Start.Societe & "/Pdf2"]
  Try Pdf3.Value = cursettings["/Soc" & Start.Societe & "/Pdf3"]
  Try Pdf4.Value = cursettings["/Soc" & Start.Societe & "/Pdf4"]
  Try Pdf5.Value = cursettings["/Soc" & Start.Societe & "/Pdf5"]
  Try Pdf6.Value = cursettings["/Soc" & Start.Societe & "/Pdf6"]
  Try Factdef.Value = cursettings["/Soc" & Start.Societe & "/Factdef"]
  Try Bldef.Value = cursettings["/Soc" & Start.Societe & "/Bldef"]
  Try Devisdef.Value = cursettings["/Soc" & Start.Societe & "/Devisdef"]
  Try Prodef.Value = cursettings["/Soc" & Start.Societe & "/Prodef"]
  Try Siret.Text = cursettings["/Soc" & Start.Societe & "/Siret"]
  If IsNull(Siret.Text) Then Siret.text = "Siret"
  Try Prxdec.Value = cursettings["/Soc" & Start.Societe & "/Prxdec"]
  Try Totstring.Value = cursettings["/Soc" & Start.Societe & "/Totstring"]
  Try Pays.text = cursettings["/Soc" & Start.Societe & "/Pays"]
  Try Expfact.text = cursettings["/Soc" & Start.Societe & "/Expfact"]
  Try Ech.text = cursettings["/Soc" & Start.Societe & "/Ech"]
  Try Typec.text = cursettings["/Soc" & Start.Societe & "/Typec"]
  Try Caisse.Value = cursettings["/Soc" & Start.Societe & "/Caisse"]
  Try Tp1.Text = cursettings["/Soc" & Start.Societe & "/Tp1"]
  Try Tg1.Text = cursettings["/Soc" & Start.Societe & "/Tg1"]
  Try Numdossier.Text = cursettings["/Soc" & Start.Societe & "/Numdossier"]
  Try Nomdossier.text = cursettings["/Soc" & Start.Societe & "/Nomdossier"]
  Try sFht.Value = cursettings["/Soc" & Start.Societe & "/Fht"]
  Try TxtF.Value = cursettings["/Soc" & Start.Societe & "/TxtF"]
  Try LTxtF.Text = cursettings["/Soc" & Start.Societe & "/LTxtF"]
  If TxtF.Value = True Then LTxtF.Visible = True
  Try Marge.Value = cursettings["/Soc" & Start.Societe & "/Marge"]
  Try MO.Value = cursettings["/Soc" & Start.Societe & "/MO"]
  If MO.Value Then
    codeMO.Visible = True
    Try codeMO.Text = cursettings["/Soc" & Start.Societe & "/CodeMO"]
  Else
    codeMO.Visible = False
  Endif
  Try Refl.Value = cursettings["/Soc" & Start.Societe & "/Refl"]
  Try Impbl.Value = cursettings["/Soc" & Start.Societe & "/Impbl"]
  Try Affaire.Value = cursettings["/Soc" & Start.Societe & "/Affaire"]
  Try Art.Value = cursettings["/Soc" & Start.Societe & "/Art"]
  Try MoArt.Value = cursettings["/Soc" & Start.Societe & "/MoArt"]
  Try Com.Value = cursettings["/Soc" & Start.Societe & "/ComArt"]
  Try Tmail.Text = cursettings["/Soc" & Start.Societe & "/Tmail"]
  Try Tmail2.Text = cursettings["/Soc" & Start.Societe & "/Tmail2"]
  Try Vendeurs.Value = cursettings["/Soc" & Start.Societe & "/Vendeurs"]
  Try Casier.Value = cursettings["/Soc" & Start.Societe & "/Casier"]
  Try Analytique.Value = cursettings["/Soc" & Start.Societe & "/Analytique"]
  Try Lettrage.Value = cursettings["/Soc" & Start.Societe & "/Lettrage"]
  Try Carte.Value = cursettings["/Soc" & Start.Societe & "/Carte"]
  Try Cheque.Value = cursettings["/Soc" & Start.Societe & "/Cheque"]
  Try Sage.Value = cursettings["/Soc" & Start.Societe & "/Sage"]
  Try Sauvauto.Value = cursettings["/Soc" & Start.Societe & "/Sauvauto"]
  Try Envoiftp.Value = cursettings["/Soc" & Start.Societe & "/Envoiftp"]
  Try Adrbase2.Text = cursettings["/Soc" & Start.Societe & "/Adrbase"]
  Try IdFTP.Text = cursettings["/Soc" & Start.Societe & "/Idftp"]
  Try PrgMail.Text = cursettings["/Soc" & Start.Societe & "/Prgmail"]
  Try MdpFTP.Text = hexdblKey.crypt("de", cursettings["/Soc" & Start.Societe & "/MdpFTP"], "Laurux")
  Try Adrbase3.Text = cursettings["/Soc" & Start.Societe & "/Adrbase3"]
  Try IdFTP3.Text = cursettings["/Soc" & Start.Societe & "/Idftp3"]
  Try MdpFTP3.Text = hexdblKey.crypt("de", cursettings["/Soc" & Start.Societe & "/MdpFTP3"], "Laurux")
  Try Cnomade.Value = cursettings["/Soc" & Start.Societe & "/Cnomade"]
  Try Chmcsv.Text = cursettings["/Soc" & Start.Societe & "/Chmcsv"]
  Try Depannage.Value = cursettings["/Soc" & Start.Societe & "/Depannage"]
  Try Afour.Value = cursettings["/Soc" & Start.Societe & "/Afour"]
  Try AffArt.Value = cursettings["/Soc" & Start.Societe & "/AffArt"]
  Try MasqueMarge.Value = cursettings["/Soc" & Start.Societe & "/AffMarge"]
  Try AffClient.Value = cursettings["/Soc" & Start.Societe & "/AffClient"]
  Try PxRecpt.Value = cursettings["/Soc" & Start.Societe & "/prixRecpt"]
  Try Rcptman.Value = cursettings["/Soc" & Start.Societe & "/Rcptman"]
  Try NumBr.Value = cursettings["/Soc" & Start.Societe & "/NumBr"]
  Try Sms.Value = cursettings["/Soc" & Start.Societe & "/Sms"]
  If Sms.value Then
    Support.Text = cursettings["/Soc" & Start.Societe & "/Support"]
    Api.Text = cursettings["/Soc" & Start.Societe & "/Api"]
    Type.Text = cursettings["/Soc" & Start.Societe & "/Type"]
    Expediteur.Text = cursettings["/Soc" & Start.Societe & "/Expediteur"]
    'Api2.Text = cursettings["/Soc" & Start.Societe & "/Hidentifiant"]
    'Api3.Text = cursettings["/Soc" & Start.Societe & "/Hmdp"]
  Endif
  Try Checkbox2.Value = cursettings["/Soc" & Start.Societe & "/Sprix"]
  If CheckBox2.value Then Panel4.visible = True
  Try MajArt.Value = cursettings["/Soc" & Start.Societe & "/SMajArt"]
  Try MajFour.Value = cursettings["/Soc" & Start.Societe & "/SMajFour"]
  Try MajCli.Value = cursettings["/Soc" & Start.Societe & "/SMajCli"]
  Try Import.Value = cursettings["/Soc" & Start.Societe & "/Simport"]
  Try Export.Value = cursettings["/Soc" & Start.Societe & "/Sexport"]
  Try Chmprix.Text = cursettings["/Soc" & Start.Societe & "/Schmprix"]
  Try Replique.Value = cursettings["/Soc" & Start.Societe & "/Replique"]
  Try Breplique.Value = cursettings["/Soc" & Start.Societe & "/Breplique"]

  'Try Zebra.Value = cursettings["/Soc" & Start.Societe & "/Zebra"]
  'If Zebra.value Then
  'Label27.Visible = True
  'IpZebra.Visible = True
  'Endif
  Try Impetiq.text = cursettings["/Soc" & Start.Societe & "/Impetiq"]
  If Impetiq.text = "2- Zebra" Then
    Label27.Visible = True
    IpZebra.Visible = True
    Try IpZebra.Text = cursettings["/Soc" & Start.Societe & "/IpZebra"]
  Endif
  Try Textfam.Text = cursettings["/Soc" & Start.Societe & "/nbfam"]
  If Error Or Utils.totobs([Textfam.Text]) = 0 Then Textfam.Text = "5"
  Try $ipr = cursettings["/Soc" & Start.Societe & "/ipr"]
  afffam

  Try pp.Value = cursettings["/Soc" & Start.Societe & "/pp"]
  Try bois.Value = cursettings["/Soc" & Start.Societe & "/bois"]
   
  Try ServerLogIP.Value = cursettings["/Soc" & Start.Societe & "/ServerLogIP"]
  If ServerLogIP.Value = "" Then ServerLogIP.Value = "127.0.0.1"
  Try ServerLogPort.Value = cursettings["/Soc" & Start.Societe & "/ServerLogPort"]
  If ServerLogPort.Value = 0 Then ServerLogPort.Value = 6556

End

'*******************************************************
'*          On gère le mot de passe admin               *
'*******************************************************
Public Sub Mdp_KeyPress()

  If Key.code = Key.enter Or Key.code = Key.RETURN Or Key.code = Key.Tab Then Mdp_LF()

End

Public Sub Mdp_LF()

  Dim admn As Integer
  Dim mdpadm As String

  mdpadm = hexdblKey.crypt("de", cursettings["/Soc" & Start.Societe & "/MdpPrefs"], "Laurux")
  If mdpadm = Mdp.Text Then admn = 1
  If admn = 0 Then
    If Start.son Then
      Music.Play
    Endif
    Message.Error("Le mot de passe n'est pas valable ! Vérifiez votre saisie SVP !")
    Mdp.Select
  Endif
  If admn = 1 Then
    Mdp.Clear
    Hbox20.visible = False
    TabStrip1.Enabled = True
    TabStrip1.index = 0
    Admin.SetFocus
  Endif

End

Public Sub AdminG_Click()

  If AdminG.value Then
    Mdp2G.visible = True
    Mdp2G.SetFocus
    Mdp2G.Select
  Else
    Mdp2G.visible = False
  Endif

End

Public Sub Admin_Click()

  If admin.value Then
    mdp2.visible = True
    mdp2.SetFocus
    mdp2.Select
  Else
    mdp2.visible = False
  Endif

End

Public Sub Button2_Click()

  Me.close

End

Public Sub form_close()

  Dim Exprt As String
  Dim Mat As String
  Dim Cai As String
  Dim $mdp As String
  Dim i As Integer
  Dim conf As String 'use for global conf
  
  If IsNull(cursettings) Then Return
  
  'Parametre sauvegarde en Global et en Local (cas ou on utilise pas le mode global)
  'Les paramètres globaux sont prioritaire aucun risque en cas de sauvegarde dans le fichier
  'Local
  $mdp = hexdblKey.crypt("en", Mdp2G.text, "Laurux")
  If global = True Then
    cursettings["/Soc" & Start.Societe & "/MdpPrefsG"] = $mdp
    cursettings["/Soc" & Start.Societe & "/AdminG"] = AdminG.value
  Endif
  
  $mdp = hexdblKey.crypt("en", Mdp2.text, "Laurux")
  cursettings["/Soc" & Start.Societe & "/MdpPrefs"] = $mdp
  cursettings["/Soc" & Start.Societe & "/Admin"] = Admin.value
  
  cursettings["/Soc" & Start.Societe & "/Entete"] = Entete.Value
  cursettings["/Soc" & Start.Societe & "/Conditions"] = Conditions.Value
  cursettings["/Soc" & Start.Societe & "/Tva550"] = Tva550.Value
  cursettings["/Soc" & Start.Societe & "/Codetva"] = Left$(codetva.Text, 1)
  cursettings["/Soc" & Start.Societe & "/Taxe"] = Taxe.text
  cursettings["/Soc" & Start.Societe & "/Prefixe"] = Prefixe.Value
  cursettings["/Soc" & Start.Societe & "/Lcr"] = Lcr.Value
  cursettings["/Soc" & Start.Societe & "/Materiel"] = Materiel.Value
  cursettings["/Soc" & Start.Societe & "/Depots"] = Depots.value
  cursettings["/Soc" & Start.Societe & "/Ged"] = Ged.value
  cursettings["/Soc" & Start.Societe & "/Taches"] = Taches.value
  cursettings["/Soc" & Start.Societe & "/AutoEnt"] = AutoEnt.Value
  cursettings["/Soc" & Start.Societe & "/Franchise"] = Franchise.Value
  cursettings["/Soc" & Start.Societe & "/Pvcons"] = Pvconseille.Value
  cursettings["/Soc" & Start.Societe & "/Analytique"] = Analytique.Value
  cursettings["/Soc" & Start.Societe & "/Lettrage"] = Lettrage.Value
  cursettings["/Soc" & Start.Societe & "/Carte"] = Carte.Value
  cursettings["/Soc" & Start.Societe & "/Cheque"] = Cheque.Value
  cursettings["/Soc" & Start.Societe & "/Pays"] = Pays.text
  cursettings["/Soc" & Start.Societe & "/Expfact"] = Expfact.text
  cursettings["/Soc" & Start.Societe & "/Ech"] = Ech.Text
  cursettings["/Soc" & Start.Societe & "/Typec"] = Typec.Text
  cursettings["/Soc" & Start.Societe & "/Caisse"] = Caisse.Value
  cursettings["/Soc" & Start.Societe & "/Tp1"] = Tp1.Text
  cursettings["/Soc" & Start.Societe & "/Tg1"] = Tg1.Text
  cursettings["/Soc" & Start.Societe & "/Siret"] = Siret.Text
  cursettings["/Soc" & Start.Societe & "/Prxdec"] = Prxdec.Value
  cursettings["/Soc" & Start.Societe & "/Numdossier"] = Numdossier.Text
  cursettings["/Soc" & Start.Societe & "/Nomdossier"] = Nomdossier.Text
  cursettings["/Soc" & Start.Societe & "/Coef"] = Cof.Value
  cursettings["/Soc" & Start.Societe & "/Tmq"] = Tq.Value
  cursettings["/Soc" & Start.Societe & "/Recap"] = Recap.Value
  cursettings["/Soc" & Start.Societe & "/Impttc"] = Impttc.Value
  cursettings["/Soc" & Start.Societe & "/Faca"] = FacA.Value
  cursettings["/Soc" & Start.Societe & "/prixRecpt"] = PxRecpt.Value
  cursettings["/Soc" & Start.Societe & "/Rcptman"] = Rcptman.Value
  cursettings["/Soc" & Start.Societe & "/NumBr"] = NumBr.Value
  cursettings["/Soc" & Start.Societe & "/Depannage"] = Depannage.Value
  cursettings["/Soc" & Start.Societe & "/Devis"] = Valdevis.Text
  cursettings["/Soc" & Start.Societe & "/Libdevis"] = Libdevis.Value
  cursettings["/Soc" & Start.Societe & "/Devis2"] = Valdevis2.Text
  cursettings["/Soc" & Start.Societe & "/Devis"] = Valdevis.Text
  cursettings["/Soc" & Start.Societe & "/Libdevis"] = Libdevis.Value
  cursettings["/Soc" & Start.Societe & "/Devis2"] = Valdevis2.Text
  cursettings["/Soc" & Start.Societe & "/Rglt"] = Rglt.Value
  cursettings["/Soc" & Start.Societe & "/Ctrlstk"] = Ctrlstk.Value
  cursettings["/Soc" & Start.Societe & "/Poids"] = Poids.Value
  cursettings["/Soc" & Start.Societe & "/Marge"] = Marge.Value
  cursettings["/Soc" & Start.Societe & "/MO"] = MO.Value
  cursettings["/Soc" & Start.Societe & "/Refl"] = Refl.Value

  ipos = InStr(Codemo.Text, "-")
  cursettings["/Soc" & Start.Societe & "/CodeMO"] = Left$(Codemo.Text, iPos - 1)
  cursettings["/Soc" & Start.Societe & "/ServerLogIP"] = ServerLogIP.Value
  cursettings["/Soc" & Start.Societe & "/ServerLogPort"] = ServerLogPort.Value

  cursettings["/Soc" & Start.Societe & "/nbfam"] = Textfam.Text
  $ipr.Clear
  For i = 0 To $check.Max
    If $check[i].Value Then $ipr.Add(i + 1)
  Next
  cursettings["/Soc" & Start.Societe & "/ipr"] = $ipr
  cursettings["/Soc" & Start.Societe & "/pp"] = pp.Value
  cursettings["/Soc" & Start.Societe & "/bois"] = bois.Value


  'Les paramètres ci-dessous ne sont que des paramètres locaux
  If global = False
  cursettings["/Soc" & Start.Societe & "/Tme"] = Tme.value
  cursettings["/Soc" & Start.Societe & "/Slide"] = Slide.value
  cursettings["/son"] = son.Value
  cursettings["/son2"] = son2.Value
  cursettings["/Tips"] = Tip.Value
  cursettings["/Rep_Sauv"] = Sauves.text
  cursettings["/Soc" & Start.Societe & "/Fichiers"] = Chemin10.Text
  cursettings["/Soc" & Start.Societe & "/Compta"] = cpt.Value
  cursettings["/Soc" & Start.Societe & "/Gestion"] = Fac.Value
  cursettings["/Soc" & Start.Societe & "/CptFac"] = CptFac.Value
  cursettings["/Soc" & Start.Societe & "/Exp"] = Exp.Value
  cursettings["/Soc" & Start.Societe & "/Expmail"] = Expmail.Value
  cursettings["/Soc" & Start.Societe & "/Imp"] = Imp.Value
  cursettings["/Soc" & Start.Societe & "/Chemin-export"] = Chmexport.Text
  cursettings["/Soc" & Start.Societe & "/Adr-export"] = Adrexport.Text
  cursettings["/Soc" & Start.Societe & "/Chemin-import"] = Chmimp.Text
  cursettings["/Soc" & Start.Societe & "/Qt1"] = Qt1.Value
  cursettings["/Soc" & Start.Societe & "/Cqte"] = Cqte.Value

  cursettings["/Soc" & Start.Societe & "/Coul_fen"] = Gcf.value
  cursettings["/Soc" & Start.Societe & "/Infob"] = Infob.value
  cursettings["/Smtp"] = Smtp.Text
  cursettings["/Port"] = Port.Text
  cursettings["/Adrmail"] = Adrmail.Text
  cursettings["/Utilisateur"] = Utilisateur.Text
  cursettings["/MdpStmp"] = hexdblKey.crypt("en", MdpStmp.Text, "Laurux")
  cursettings["/Soc" & Start.Societe & "/Fecran"] = Ecran.Text
  cursettings["/Soc" & Start.Societe & "/glogo"] = Lgo.Value
  cursettings["/Soc" & Start.Societe & "/glogo3"] = Lgo3.Value
  cursettings["/Soc" & Start.Societe & "/glogo5"] = Lgo5.Value
  cursettings["/Soc" & Start.Societe & "/glogo6"] = Lgo6.Value
  cursettings["/Soc" & Start.Societe & "/Logo"] = Logo.Text
  cursettings["/Soc" & Start.Societe & "/Logo2"] = Logo2.Text
  cursettings["/Soc" & Start.Societe & "/Adr-base"] = Adrbase.Text

  cursettings["/Majver"] = Majver.Value

  cursettings["/Soc" & Start.Societe & "/Btq"] = Btq.Value
  'cursettings["/Soc" & Start.Societe & "/Btq2"] = Btq2.Value
  cursettings["/Soc" & Start.Societe & "/Adrbtq"] = Adrbtq.Text
  cursettings["/Soc" & Start.Societe & "/Identifiant"] = Identifiant.Text
  cursettings["/Soc" & Start.Societe & "/Adradminart"] = Adradminart.Text
  cursettings["/Soc" & Start.Societe & "/Adradminphot"] = Adradminphot.Text
  cursettings["/Soc" & Start.Societe & "/Mdpadmin"] = Mdpadmin.Text
  cursettings["/Soc" & Start.Societe & "/Photart"] = Photart.Text
  cursettings["/Soc" & Start.Societe & "/Font"] = FontChooser1.SelectedFont
  cursettings["/Soc" & Start.Societe & "/Coupon"] = Coupon.Value
  cursettings["/Soc" & Start.Societe & "/Factchemin"] = Chemin.Text
  cursettings["/Soc" & Start.Societe & "/FactcheminF"] = Chemin2.Text
  cursettings["/Soc" & Start.Societe & "/FactcheminP"] = Chemin4.Text
  cursettings["/Soc" & Start.Societe & "/FactcheminV"] = Chemin3.Text
  cursettings["/Soc" & Start.Societe & "/FactcheminA"] = Chemin5.Text
  cursettings["/Soc" & Start.Societe & "/FactcheminC"] = Chemin6.Text
  cursettings["/Soc" & Start.Societe & "/Pdfchemin"] = Chemin7.Text
  cursettings["/Soc" & Start.Societe & "/Bexpchemin"] = Chemin8.Text
  cursettings["/Soc" & Start.Societe & "/Bexpcheminpj"] = Chemin9.Text
  cursettings["/Soc" & Start.Societe & "/Pdf"] = Pdf.Value
  cursettings["/Soc" & Start.Societe & "/Pdf2"] = Pdf2.Value
  cursettings["/Soc" & Start.Societe & "/Pdf3"] = Pdf3.Value
  cursettings["/Soc" & Start.Societe & "/Pdf4"] = Pdf4.Value
  cursettings["/Soc" & Start.Societe & "/Pdf5"] = Pdf5.Value
  cursettings["/Soc" & Start.Societe & "/Pdf6"] = Pdf6.Value
  cursettings["/Soc" & Start.Societe & "/Factdef"] = Factdef.Value
  cursettings["/Soc" & Start.Societe & "/Bldef"] = Bldef.Value
  cursettings["/Soc" & Start.Societe & "/Devisdef"] = Devisdef.Value
  cursettings["/Soc" & Start.Societe & "/Prodef"] = Prodef.Value
  cursettings["/Soc" & Start.Societe & "/Totstring"] = Totstring.Value
  cursettings["/Soc" & Start.Societe & "/Fht"] = sFht.Value
  cursettings["/Soc" & Start.Societe & "/TxtF"] = TxtF.Value
  cursettings["/Soc" & Start.Societe & "/LTxtF"] = LTxtF.Text
  cursettings["/Soc" & Start.Societe & "/Impbl"] = Impbl.value
  cursettings["/Soc" & Start.Societe & "/Affaire"] = Affaire.Value
  cursettings["/Soc" & Start.Societe & "/Art"] = Art.Value
  cursettings["/Soc" & Start.Societe & "/MoArt"] = MoArt.Value
  cursettings["/Soc" & Start.Societe & "/ComArt"] = Com.Value
  cursettings["/Soc" & Start.Societe & "/Tmail"] = Tmail.Text
  cursettings["/Soc" & Start.Societe & "/Tmail2"] = Tmail2.Text
  cursettings["/Soc" & Start.Societe & "/Vendeurs"] = Vendeurs.Value
  cursettings["/Soc" & Start.Societe & "/Casier"] = Casier.Value
  'cursettings["/Soc" & Start.Societe & "/Zebra"] = Zebra.Value
  cursettings["/Soc" & Start.Societe & "/Impetiq"] = Impetiq.text
  cursettings["/Soc" & Start.Societe & "/IpZebra"] = IpZebra.Text
  cursettings["/Soc" & Start.Societe & "/Sage"] = Sage.Value
  cursettings["/Soc" & Start.Societe & "/Sauvauto"] = Sauvauto.Value
  cursettings["/Soc" & Start.Societe & "/Envoiftp"] = Envoiftp.Value
  cursettings["/Soc" & Start.Societe & "/Adrbase"] = Adrbase2.Text
  cursettings["/Soc" & Start.Societe & "/MdpFTP"] = hexdblKey.crypt("en", MdpFTP.Text, "Laurux")
  cursettings["/Soc" & Start.Societe & "/Idftp"] = IdFTP.Text
  cursettings["/Soc" & Start.Societe & "/Adrbase3"] = Adrbase3.Text
  cursettings["/Soc" & Start.Societe & "/MdpFTP3"] = hexdblKey.crypt("en", MdpFTP3.Text, "Laurux")
  cursettings["/Soc" & Start.Societe & "/Idftp3"] = IdFTP3.Text
  cursettings["/Soc" & Start.Societe & "/Prgmail"] = PrgMail.Text
  cursettings["/Soc" & Start.Societe & "/Cnomade"] = Cnomade.Value
  cursettings["/Soc" & Start.Societe & "/Chmcsv"] = Chmcsv.Text
  cursettings["/Soc" & Start.Societe & "/AffArt"] = AffArt.Value
  cursettings["/Soc" & Start.Societe & "/AffMarge"] = MasqueMarge.Value
  cursettings["/Soc" & Start.Societe & "/AffClient"] = AffClient.Value
  cursettings["/Soc" & Start.Societe & "/Afour"] = Afour.Value
  cursettings["/Soc" & Start.Societe & "/Sms"] = Sms.Value
  cursettings["/Soc" & Start.Societe & "/Support"] = Support.Text
  cursettings["/Soc" & Start.Societe & "/Api"] = Api.Text
  cursettings["/Soc" & Start.Societe & "/Type"] = Type.Text
  cursettings["/Soc" & Start.Societe & "/Expediteur"] = Expediteur.Text
  cursettings["/Soc" & Start.Societe & "/Sprix"] = Checkbox2.Value
  cursettings["/Soc" & Start.Societe & "/Simport"] = Import.Value
  cursettings["/Soc" & Start.Societe & "/Sexport"] = Export.Value
  cursettings["/Soc" & Start.Societe & "/Schmprix"] = Chmprix.Text
  cursettings["/Soc" & Start.Societe & "/SMajArt"] = MajArt.Value
  cursettings["/Soc" & Start.Societe & "/SMajFour"] = MajFour.Value
  cursettings["/Soc" & Start.Societe & "/SMajCli"] = MajCli.Value
  cursettings["/Soc" & Start.Societe & "/Replique"] = Replique.Value
  cursettings["/Soc" & Start.Societe & "/Breplique"] = Breplique.Value
  'cursettings["/Soc" & Start.Societe & "/Hidentifiant"] = Api2.Text
  ' cursettings["/Soc" & Start.Societe & "/Hmdp"] = Api3.Text
  If Exp.Value = True Then
    Exprt = "1"
  Else
    Exprt = "0"
  Endif
  If cursettings["/Soc" & Start.Societe & "/CptFac"] Then Fmenu.Menushowhide(Exprt)
  If Btq.Value = True Then
    Exprt = "1"
  Else
    Exprt = "0"
  Endif
  If cursettings["/Soc" & Start.Societe & "/Gestion"] = True Then
    Fmenuf.Menu2showhide(Exprt)
  Else
    If cursettings["/Soc" & Start.Societe & "/CptFac"] = True Then
      Fmenu.Menu2showhide(Exprt)
    Endif
  Endif
  If Materiel.Value = True Then
    Mat = "1"
  Else
    Mat = "0"
  Endif
  Fmenu.Menu3showhide(Mat)
  Fmenuf.Menu3showhide(Mat)
  If Caisse.Value = True Then
    Cai = "1"
  Else
    Cai = "0"
  Endif
  Fmenu.Menu4showhide(Cai)
  Fmenuf.Menu4showhide(Cai)
  
  Endif 'Local Parameters Only
  
  If global = True Then
    'on met a jour les paramètres globaux, les paramètres loxaux sont rechargé par Prl.ApplyGlobal() dans le Menu
    cursettings.Save()
    conf = File.Load(cursettings.path)
    Utils.db.Exec("UPDATE " & Cbase.Table("TabParam") & " set conf = &1", conf)
  Else
    ' on reapplique les paramétres globaux puis on sauvegarde et recharge
    ApplyGlobal(ReadGlobal())
    cursettings.Save()
    cursettings.Reload()
  Endif

End

Public Sub Cmpt_keypress()

  If InStr("0123456789,.", Key.Text) = 0 Then
    If key.code <> key.BackSpace And Key.Code <> Key.tab And Key.Code <> Key.Delete And Key.code <> Key.enter And Key.code <> Key.return Then
      Stop Event
    Endif
  Endif

End

Public Sub Cmpt_Lostfocus()

  Select Case Last.tag
    Case 1
      Try Tp1.Text = Format$(Val(Utils.cpoint(Tp1.Text)), "0.00")

    Case 2
      Try Tg1.Text = Format$(Val(Utils.cpoint(Tg1.Text)), "0.00")

  End Select

End

Public Sub NmBr_pays()

  Dim hfil As File
  Dim Lig As String

  HFil = Open "Pays.txt" For Read
  Pays.Clear
  While Not Eof(hFil)
    Line Input #hFil, Lig
    Pays.Add(Lig)
  Wend

End

Public Sub Echeances()

  Dim rech As Result

  Try rech = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabEch") & " order by num")
  If Not Error Then
    If rech.Available Then
      Repeat
        Ech.Add(rech!num & " - " & rech!libell)
      Until rech.MoveNext()
    Endif
  Endif

End

Public Sub Typeclient()

  Dim rcli As Result

  Try rcli = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabTypec") & " order by code")
  If Not Error Then
    If rcli.Available Then
      Repeat
        Typec.Add(rcli!code & " - " & rcli!libelle)
      Until rcli.MoveNext()
    Endif
  Endif

End

Public Sub Cpt_Click()

  If Fac.Value Then
    Fac.value = False
  Endif

End

Public Sub Fac_Click()

  If Cpt.Value Then
    Cpt.value = False
  Endif

End

Public Sub Tva550_Click()

  If Tva550.Value Then
    codetva.Visible = True
  Else
    codetva.Visible = False
  Endif

End

Public Sub MO_Click()

  If MO.Value Then
    codemo.Visible = True
  Else
    codemo.Visible = False
  Endif

End

Public Sub Exp_Click()

  Panexp.Visible = True
  Panimp.Visible = False
  Sage.visible = True

End

Public Sub Imp_Click()

  Panexp.Visible = False
  Panimp.Visible = True
  Sage.visible = False

End

Public Sub Libdevis_Click()

  If Libdevis.Value = True Then
    Valdevis2.visible = True
  Else
    Valdevis2.visible = False
  Endif

End

Public Sub TxtF_Click()

  If TxtF.value = True Then
    LtxtF.Visible = True
    LtxtF.SetFocus
  Else
    LtxtF.Visible = False
  Endif

End

Public Sub Bchemin10_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Chemin10.Text = Dialog.Path
  Else
    Chemin10.Text = User.Home
  Endif

End

Public Sub Svs_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Sauves.Text = Dialog.Path
  Else
    Sauves.Text = User.Home
  Endif

End

Public Sub Svs2_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.home
  If Not Dialog.SelectDirectory() Then
    Chmexport.Text = Dialog.Path
  Else
    Chmexport.Text = User.Home
  Endif

End

Public Sub Svs3_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.home
  If Not Dialog.SelectDirectory() Then
    Chmimp.Text = Dialog.Path
  Else
    Chmexport.Text = User.Home
  Endif

End

Public Sub Svs4_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Chmprix.Text = Dialog.Path
  Else
    Chmprix.Text = User.Home
  Endif

End

Public Sub codeTva_Click()

  codeTva.Text = Left$(codeTva.Text)

End

Public Sub Zebra_Click()

  If Zebra.value Then
    Label31.Visible = True
    IpZebra.Visible = True
  Else
    Label31.Visible = False
    IpZebra.Visible = False
  Endif

End

Public Sub Ecr_Click()

  Dim NmFic As String[]
  Dim ific As Integer
  'Dialog.Filter = FileFilter(True)
  Dialog.Path = User.home
  Dialog.Title = "Choix du fond d'écran"
  If Dialog.OpenFile() Then Return
  Ecran.Text = Dialog.Path
Catch
  Message.Warning(ERROR.Text)

End

Public Sub Lgo2_Click()

  Dialog.Filter = FileFilter(True)
  Dialog.Path = User.home
  Dialog.Title = "Sélection du logo"
  If Dialog.OpenFile() Then Return
  Logo.Text = Dialog.Path
  If Not IsNull(Logo.Text) Then
    dwgImage.show
    aff_logo()
  Else
    dwgImage.Hide
  Endif
Catch
  Message.Warning(ERROR.Text)

End

Public Sub Phot_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Photart.Text = Dialog.Path
  Else
    Photart.Text = User.Home
  Endif

End

Private Function FileFilter(Optional All As Boolean = False) As String[]

  Dim filter As New String[]

  filter.Add("*.jpg")
  filter.Add("Joint Photographic Group")
  Return filter

End

Public Sub aff_logo()

  Try hImage = Image.Load(Logo.Text)
  If Not Error Then
    dwgImage.Width = hImage.Width
    dwgImage.Height = himage.Height
    dwgImage.X = (Frame12.Width - dwgImage.Width) / 2
  Endif

End

Public Sub dwgImage_Draw()

  Try Draw.Image(hImage, 0, 0, dwgImage.Width, dwgImage.Height)

End

Public Sub Copie_Click()

  If Copie.value = True Then
    Panchemin.Visible = True
  Else
    Panchemin.Visible = False
  Endif

End

Public Sub Bchemin_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Chemin.Text = Dialog.Path
  Else
    Chemin.Text = User.Home
  Endif

End

'********************
'* On lance la doc  *
'********************
Public Sub Button3_Click()

  Doc.Open("Prefs")

End

Public Sub Btq_Click()

  'IF Btq.value = TRUE THEN
  'Btq2.Visible = TRUE
  'ELSE
  'Btq2.visible = FALSE
  'Btq2.value = FALSE
  'ENDIF

End

Public Sub Button1_Click()

  Dim msg As String = "Ceci est un message vocal de votre logiciel de gestion, Laurux"

  Try Exec ["pico2wave", "-l", "fr-FR", "-w", "msg.wav", msg] Wait
  If Not Error Then
    Shell "pico2wave ; aplay msg.wav"
    If Message.Question("Avez-vous entendu le message vocal de Laurux ?", "Oui", "Non") = 1 Then
      Message.Info("Félicitation ! La synthèse vocale est opérationnelle.")
    Else
      Message.Warning("Vérifiez que les bibliothèques soient bien installées \n(voir documentation ci-dessous) et que vos hauts-parleurs fonctionnent correctement !")
    Endif
  Else
    Message.Warning("Vérifiez que les bibliothèques soient bien installées \n(voir documentation ci-dessous) !")
  Endif

End

Public Sub sauvauto_Click()

  If Sauvauto.value = True Then
    Envoiftp.visible = True
    If Envoiftp.Value = True Then
      Affichage()
    Else
      Masquage()
    Endif
  Else
    Envoiftp.visible = False
    Masquage()
  Endif

End

Public Sub Envoiftp_Click()

  If Envoiftp.Value = True Then
    Affichage()
  Else
    Masquage()
  Endif

End

Public Sub Affichage()

  Label27.Visible = True
  Adrbase2.Visible = True
  Label28.Visible = True
  MdpFTP.Visible = True
  Label29.Visible = True
  IdFTP.Visible = True

End

Public Sub Masquage()

  Label27.Visible = False
  Adrbase2.Visible = False
  Label28.Visible = False
  MdpFTP.Visible = False
  Label29.Visible = False
  IdFTP.Visible = False

End

Public Sub Bchemin2_Click()

  Dialog.Title = "Choisir un fichier"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Chemin2.Text = Dialog.Path
  Else
    Chemin2.Text = User.Home
  Endif

End

Public Sub Bchemin3_Click()

  'Dialog.Filter = FileFilter2(True)
  Dialog.Title = "Choisir un fichier"
  Dialog.Path = User.Home
  If Dialog.OpenFile() Then Return
  Chemin3.Text = Dialog.Path

End

Public Sub Bchemin4_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Chemin4.Text = Dialog.Path
  Else
    Chemin4.Text = User.Home
  Endif

End

Public Sub Bchemin5_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Chemin5.Text = Dialog.Path
  Else
    Chemin5.Text = User.Home
  Endif

End

Public Sub Bchemin6_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.Home
  If Not Dialog.SelectDirectory() Then
    Chemin6.Text = Dialog.Path
  Else
    Chemin6.Text = User.Home
  Endif

End

Public Sub Bchemin7_Click()

  Dialog.Title = "Choisir un fichier"
  Dialog.Path = User.Home
  If Dialog.OpenFile() Then Return
  Chemin7.Text = Dialog.Path

End

Public Sub Bchemin8_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.home
  If Not Dialog.SelectDirectory() Then
    Chemin8.Text = Dialog.Path
  Else
    Chemin8.Text = User.Home
  Endif

End

Public Sub Bchemin9_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.home
  If Not Dialog.SelectDirectory() Then
    Chemin9.Text = Dialog.Path
  Else
    Chemin9.Text = User.Home
  Endif

End

Public Sub chm_Click()

  Dialog.Title = "Choisir un repertoire"
  Dialog.Path = User.home
  If Not Dialog.SelectDirectory() Then
    Chmcsv.Text = Dialog.Path
  Else
    Chmcsv.Text = User.Home
  Endif

End

Public Sub Impetiq_Click()

  If Impetiq.text = "2- Zebra" Then
    Label31.Visible = True
    IpZebra.Visible = True
  Else
    Label31.Visible = False
    IpZebra.Visible = False
  Endif

End

Public Sub Sms_Click()

  If Sms.value Then
    Label47.Visible = True
    Label48.visible = True
    Label53.visible = True
    Label54.visible = True
    Support.visible = True
    Api.visible = True
    Type.visible = True
    Expediteur.visible = True
  Else
    Label47.Visible = False
    Label48.visible = False
    Label53.visible = False
    Label54.visible = False
    Support.visible = False
    Api.visible = False
    Type.visible = False
    Expediteur.visible = False
  Endif

End

Public Sub Lgo4_Click()

  Dialog.Filter = FileFilter(True)
  Dialog.Path = User.home
  Dialog.Title = "Sélection du logo de l'adresse"
  If Dialog.OpenFile() Then Return
  Logo2.Text = Dialog.Path
  If Not IsNull(Logo2.Text) Then
    dwgImage2.show
    aff_logo2()
  Else
    dwgImage2.Hide
  Endif
Catch
  Message.Warning(ERROR.Text)

End

Public Sub aff_logo2()

  Dim iFormat As Single

  Try hImage2 = Image.Load(Logo2.Text)
  iFormat = dwgImage2.Width / dwgImage2.Height
  dwgImage2.Width = dwgImage2.Width * iFormat
  If dwgImage2.Width > Frame26.Width Then
    dwgImage2.Width = Frame26.Width
    dwgImage2.Height = Frame26.Width / iFormat
  Endif
  dwgImage2.X = (Frame26.Width - dwgImage2.Width) / 2

End

Public Sub slide_click()

  If Slide.value = False Then Ecran.Clear

End

Public Sub dwgImage2_Draw()

  Try Draw.Image(hImage2, 0, 0, dwgImage2.Width, dwgImage2.Height)

End

Public Sub api_LostFocus()

  Dim $txt As String

  If Not IsNull(Api.Text) Then
    If Exist(User.Home & "/tmp/sms.txt") Then Kill User.Home & "/tmp/sms.txt"
    Shell "curl " & "\"http://www.spot-hit.fr/api/credits/?key=" & Api.text & "\"" & " >" & User.Home & "/tmp/sms.txt 2>&1" Wait
    If Exist(User.Home & "/tmp/sms.txt") Then
      $txt = Trim$(File.Load(User.Home & "/tmp/sms.txt"))
      If InStr($txt, "erreur") <> 0 Then
        Message.Error("Votre clé est mauvaise ! Veuillez refaire votre saisie SVP")
        Api.Select
        Api.SetFocus
      Endif
    Endif
  Endif

End

Public Sub pp_Click()


  If pp.Value Then
    modfichier.fichiercarbu
    modfichier.supf
  Endif

End

Public Sub bois_Click()


  If bois.Value Then
    modfichier.fichierboisson
    modfichier.supf
  Endif

End

Public Sub Textfam_LostFocus()

  Textfam.Text = Format(Utils.totobs([Textfam.Text]), "0")
  If Val(Textfam.Text) = 0 Or Val(Textfam.Text) > 20 Then
    Textfam.Clear
    Textfam.SetFocus
  Endif
  afffam
End

Public Sub Textfam_KeyPress()

  If Key.Code = Key.Enter Or Key.Code = Key.Return Or Key.Code = Key.Tab Then
    Taxe.SetFocus
    Taxe.Select
    Stop Event
  Endif

End

Public Sub afffam()

  Dim i, sup As Integer
  
  $check.Resize(Utils.totobs([Textfam.Text]))
  Panelfam.Children.Clear
  For i = 0 To Val(Textfam.Text) - 1
    $check[i] = New CheckBox(Panelfam)
    $check[i].Height = 20
    $check[i].Width = 20
  Next
  Try i = $ipr.Count
  If Error Then
    $ipr = New Integer[]
    $ipr.Add(5)
  Endif
  sup = $ipr.Max
  If $ipr.Max > $check.Max Then sup = $check.Max
  For i = 0 To sup
    If $ipr[i] <= $check.Count Then $check[$ipr[i] - 1].Value = True
  Next

End

Public Sub CheckBox2_Click()

  If CheckBox2.value Then
    Panel4.visible = True
  Else
    Panel4.visible = False
  Endif

End

Public Sub Support_Change()

  Select Case Left$(Support.Text, 1)
    Case 3
      Label48.Text = "Identifiant"
      Label53.Text = "Mot de passe"
      Api2.Visible = True
      Api3.visible = True

    Case 2
      Label48.Text = "Cle API"
      Label53.Text = "Type"
      Api2.Visible = False
      Api3.visible = False

  End Select

End


Public Sub Supprime_Click()

  If global = True Then
    If Message.Warning("Etes-vous sur de vouloir Supprimer vos parametres globaux?\nChaque poste pourrait alors avoir des configurations potentiellement incompatibles", "Annuler", "OK") = 1 Then Return
    Utils.db.Exec("UPDATE " & Cbase.Table("TabParam") & " set conf = &1", Null)
    Try Kill cursettings.Path 'Try car on peut tenter de supprimer au premier appel de prefs global
    cursettings.Clear()
    cursettings = Null
    'On ne devrait pas reinitialiser la variable globale ici
    Start.GlobalSettings = Null
  Endif
  
  Me.Close

End
