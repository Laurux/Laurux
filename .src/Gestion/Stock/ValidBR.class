' Gambas class file

'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publi  és par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'################################################
'# nom du fichier           : ValidBR.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 01/09/2014
'# Validations des bons de réceptions
'################################################
'

son As Integer = Start.Son
b As Integer
Tab As String
Tab2 As String
Tab3 As String
Tab4 As String
rResult As Result
CblRslt As Result
numbl As Result
Jnl As String
cpt As String
Intit As String
numecr As String
numr As Integer
numr2 As Integer ' numero ecriture définitif
cptRem As String
Ctva As String
cpttva As String
IntitTva As String
Remmo As String
Remart As String
Ttva As Float
Filename As String
Totalrem As String
totalht As String
Totht As String
Totalttc As String
Txconv As Float
typeL As String
Fam As String
Ardi As String
nbdec As String
Totttc As String
Brutht As String
TotEuros As String = "0"
nom As String
Mttc As String
Bonl As Result
dtex As String
dte As String
Devises As String
Coulfond As New String[]
sclient As String
sclient2 As String
Public Exo As Boolean = True
Private Ccli As String
Private libel As String
Private dateech2 As String
Private hnew As File
Private chkfam As Boolean = False
Private bchktva As Boolean = False
Private Famachat As String
Private NmFic As String
Private skey As String
Private $soption As String
Private $bvign As Boolean

'**********************************************************
'*initialisation écrans et gestion onglet client          *
'**********************************************************
Public Sub _New()

  Dim FamResult As Result

  Tab = "Fiches_Parametres"
  rResult = Utils.db.Exec("SELECT * FROM " & tab & "")
  If rResult.Available Then
    devises = rResult!devise
    If IsNull(devises) Then devises = "Euros"
  Endif
  Coulfond = Utils.Coulfd()
  Utils.Observers(Me)
  $soption = utils.Option()
  
  Music.Load(Start.Musique)
  Me.Center
  Balloon.Delay = 1500
  Colbl.Columns.count = 5
  Colbl.Columns[0].Width = 80
  Colbl.Columns[1].Width = 240
  Colbl.Columns[2].Width = 100
  Colbl.Columns[3].Width = 100
  Colbl.Columns[4].Width = 10
  Colbl.Columns[0].Text = "Code"
  Colbl.Columns[0].Alignment = 1
  Colbl.Columns[1].Text = "Nom"
  Colbl.Columns[1].Alignment = 1
  Colbl.Columns[2].Text = "Total ht"
  Colbl.Columns[2].Alignment = 2
  Colbl.Columns[3].Text = "Total ttc"
  Colbl.Columns[3].Alignment = 2
  Colbl.Columns[4].Text = "A"
  Colbl.Columns[4].Alignment = 3

  Coldetail.Columns.count = 5
  Coldetail.Columns[0].Width = 180
  Coldetail.Columns[2].Alignment = Align.Left
  Coldetail.Columns[1].Width = 144
  Coldetail.Columns[2].Width = 144
  Coldetail.Columns[3].Width = 144
  Coldetail.Columns[4].Width = 10
  Coldetail.Columns[0].Text = "N° BR"
  Coldetail.Columns[1].Text = "Date BR"
  Coldetail.Columns[2].Text = "montant HT"
  Coldetail.Columns[2].Alignment = 2
  Coldetail.Columns[3].Alignment = 2
  Coldetail.Columns[3].Text = "montant TTC"
  Coldetail.Columns[4].Alignment = 3
  Coldetail.Columns[4].Text = "A"
  datej.Text = Format$(Now, "dd.mm.yyyy")
  FamResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabFam") & " WHERE isnull(compt3_fam)")
  If FamResult.Available Then
    chkfam = True
    Famachat = FamResult!code_fam
  Endif

End

'**************************
'*  On récupère les BR    *
'**************************
Public Sub recup_bl()

  Dim Tab1 As String
  Dim Tab3 As String
  Dim Tab4 As String
  Dim Client As Result
  Dim totf As Result
  Dim Total As String
  Dim Totalttc As String
  Dim dteN, An As String

  Tab = "Fiches_Entrecpt"
  Tab1 = "Fiches_Ligrecpt"
  Tab3 = "BRfm"
  Tab4 = "Br"
  Total = "0"
  Utils.db.Exec("drop Table IF exists " & Tab3 & "")
  Utils.db.Exec("CREATE TABLE " & Tab3 &
    "(code Char(8) NOT NULL," &
    "nom Char(35)," &
    "cp Char(5)," &
    "ville Char(35)," &
    "totf Char(12)," &
    "tottc Char(12)," &
    "anomalie TINYINT(1), " &
    "PRIMARY KEY (code))" & Utils.db.Engine())
  Utils.db.Exec("drop Table IF exists " & Tab4 & "")
  Utils.db.Exec("CREATE TABLE " & Tab4 &
    "(num Char(12) NOT NULL," &
    "code Char(10)," &
    "date date," &
    "ht Char(12)," &
    "ttc Char(12)," &
    "anomalie TINYINT(1), " &
    "PRIMARY KEY (num, code))" & Utils.db.Engine())
  Colbl.Clear
  Coldetail.clear
  dteN = Right$(datej.Text, 4) & Mid$(datej.Text, 4, 2) & Left$(datej.Text, 2)
  If Radiobutton1.Value = True Then
    CodeFour.Background = &HD4D0C8& '&HF9F9BD&
    Client = Utils.db.Exec("SELECT * FROM " & Tab & " left join " & Cbase.Table("TabFour") & " on fo_code = four where montant <> &1 and ddate <= &2 and validee <> &3  order by four", 0, dteN, True)
  Else
    Client = Utils.db.Exec("SELECT * FROM " & Tab & "  left join " & Cbase.Table("TabFour") & " on fo_code = four  where four = &1 and montant <> &2 and ddate <= &3  and validee <> &4 order by four", CodeFour.Text, 0, dteN, True)
  Endif
  If Client.Available Then
    Repeat
      An = False
      Exo = Client!fo_exo
      If Client!anomalie Then An = True
      totf = Utils.db.Exec("SELECT * FROM " & Tab3 & " WHERE code = &1", Client!four)
      If totf.Available Then
        Try Total = Val(Utils.cpoint(totf!totf)) + Val(Utils.cpoint(Client!montant))
        If Exo = False Then
          Try Totalttc = Val(Utils.cpoint(totf!tottc)) + Val(Utils.cpoint(Client!mttc))
        Else
          Totalttc = Total
        Endif
        If Error Then
          Totalttc = "0,00"
        Endif
        If An Then
          Utils.db.Exec("UPdate " & Tab3 & " SET totf = &1, tottc = &2, anomalie = &4 WHERE code = &3", total, Totalttc, Client!four, Utils.convBool(An))
        Else
          Utils.db.Exec("UPdate " & Tab3 & " SET totf = &1, tottc = &2 WHERE code = &3", Format$(Val(Utils.cpoint(total)), "0.00"), Format$(Val(Utils.cpoint(Totalttc)), "0.00"), Client!four)
        Endif
      Else
        Try Total = Format$(Val(Utils.cpoint(Client!montant)), "0.00")
        If Exo = False Then
          Try Totalttc = Format$(Val(Utils.cpoint(Client!mttc)), "0.00")
        Else
          Totalttc = Total
        Endif
        If Error Then Totalttc = "0,00"
        If exo = False Then
          Utils.db.Exec("INSERT INTO " & Tab3 & " (code, nom, cp, ville, totf, tottc, anomalie) Values (&1, &2, &3,&4,&5,&6, &7)", Client!four, Client!fo_nom, "", "", Total, Totalttc, Utils.convBool(An))
        Else
          Utils.db.Exec("INSERT INTO " & Tab3 & " (code, nom, cp, ville, totf, tottc, anomalie) Values (&1, &2, &3,&4,&5,&6, &7)", Client!four, Client!fo_nom, "", "", Total, Total, Utils.convBool(An))
        Endif
      Endif
      Total = 0
      If exo = False Then
        Try Utils.db.Exec("INSERT INTO " & Tab4 & " (num, code, date, ht, ttc, anomalie) Values (&1, &2, &3, &4, &5, &6)", Client!numrecpt, Client!four, Client!ddate, Client!montant, Client!mttc, Client!anomalie)
      Else
        Try Utils.db.Exec("INSERT INTO " & Tab4 & " (num, code, date, ht, ttc, anomalie) Values (&1, &2, &3, &4, &5, &6)", Client!numrecpt, Client!four, Client!ddate, Client!montant, Client!montant, Client!anomalie)
      Endif
    Until Client.MoveNext()
  Endif
  Client = Utils.db.Exec("SELECT * FROM " & Tab3 & " order by code")
  If Client.Available Then
    Repeat
      Colbl.Add(Client!code, Client!code)
      Colbl.Item[0] = Client!code
      Colbl.Item[1] = Client!nom
      Colbl.Item[2] = Format$(Val(Utils.cpoint(Client!totf)), "0.00")
      Try Colbl.Item[3] = Format$(Val(Utils.cpoint(Client!tottc)), "0.00")
      If Error Then Colbl.Item[3] = "0,00"
      If Client!anomalie Then Colbl.Item[4] = "X"
    Until Client.MoveNext()
  Endif
  If IsNull(skey) Then
    If Colbl.Count > 0 Then
      Colbl.MoveFirst()
      Colbl.item.Selected = True
      Colbl_Click()
    Endif
  Else
    If Colbl.Count > 0 Then
      Colbl.MoveFirst()
      Repeat
        Colbl.item.Selected = True
        If Colbl.Item[0] = skey Then
          Colbl_Click()
          Break
        Endif
      Until Colbl.MoveNext()
    Endif
  Endif

End

Public Sub Colbl_Click()

  Dim Client As Result

  Tab4 = "Br"
  Coldetail.clear
  With Utils
    If Colbl.count > 0 Then
      Client = Utils.db.Exec("SELECT * FROM " & Tab4 & " where code = &1 order by num", Colbl.Item[0], "B", "F", 0)
      sclient = Colbl.Item[0]
      If Client.Available Then
        Repeat
          Coldetail.Add(Client!num, Client!num)
          Coldetail.Item[0] = Client!num
          Coldetail.Item[1] = .Cdate_Aff(Client!date)
          Coldetail.Item[2] = Format$(Val(.cpoint(Client!ht)), "0.00")
          Try Coldetail.Item[3] = Format$(Val(.cpoint(Client!ttc)), "0.00")
          If Client!anomalie Then Coldetail.Item[4] = "X"
        Until Client.MoveNext()
      Endif
    Endif
  End With

End

Public Sub Colbl_Keypress()

  Dim Client As Result

  Tab3 = "BRfm"
  If Key.code = Key.Delete And Colbl.Count <> 0 Then
    Utils.db.Exec("delete from " & Tab3 & " WHERE code = &1 ", sclient)
    Colbl.Clear
    Coldetail.Clear
    Client = Utils.db.Exec("SELECT * FROM " & Tab3 & " order by nom")
    If Client.Available Then
      Repeat
        Colbl.Add(Client!code, Client!code)
        Colbl.Item[0] = Client!code
        Colbl.Item[1] = Client!nom
        Colbl.Item[2] = Format$(Val(Utils.cpoint(Client!totf)), "0.00")
        Try Colbl.Item[3] = Format$(Val(Utils.cpoint(Client!tottc)), "0.00")
        If Error Then Colbl.Item[3] = "0,00"
      Until Client.MoveNext()
    Endif
    If Colbl.Count > 0 Then
      Colbl.MoveFirst()
      Colbl.item.Selected = True
      Colbl_Click()
    Endif
  Endif

End

Public Sub Coldetail_Activate()

  Dim hForm As ModifCom

  hForm = New ModifCom(Coldetail.Item[0], Colbl.current[0], Coldetail.Item[1], Coldetail.Item[4], "Reception")
  If hForm.IsLocked() = False Then
    hForm.Showmodal
    skey = Colbl.current[0]
    recup_bl()
    skey = ""
  Endif

End


Public Sub Coldetail_Click()

  Dim Rentcom As Result

  If Coldetail.Item = Null Then Return
  
  If Mouse.Right Then
    If Coldetail.count > 0 Then
      Rentcom = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabEntrecpt") & " where four = &1 and numrecpt = &2", Sclient, Coldetail.Item[0])
      If Rentcom.Available Then
        If Not IsNull(Rentcom!commentaire) Then
          Message.Info(Rentcom!commentaire)
          'Balloon.Warning((Rentcom!commentaire), Coldetail)
        Endif
        sclient2 = Coldetail.Item[0]
      Endif
    Endif
  Else
    sclient2 = Coldetail.Item[0]
  Endif

End

Public Sub Coldetail_Keypress()

  Dim Client As Result
  Dim Totalttc, totalht As String = "0"

  Tab4 = "Br"
  With Utils
    If Key.code = Key.Delete And Coldetail.Count <> 0 Then
      Utils.db.Exec("delete from " & Tab4 & " WHERE num = &1 ", sclient2)
      Client = Utils.db.Exec("SELECT * FROM " & Tab4 & " where code = &1 order by num", sclient)
      Coldetail.Clear
      If Client.Available Then
        Repeat
          Coldetail.Add(Client!num, Client!num)
          Coldetail.Item[0] = Client!num
          Coldetail.Item[1] = .Cdate_Aff(Client!date)
          Coldetail.Item[2] = Format$(Val(.cpoint(Client!ht)), "0.00")
          Try Coldetail.Item[3] = Format$(Val(.cpoint(Client!ttc)), "0.00")
          Try Totalht = Format$(Val(.cpoint(Totalht)) + Val(.cpoint(Client!ht)), "0.00")
          Try Totalttc = Format$(Val(.cpoint(Totalttc)) + Val(.cpoint(Client!ttc)), "0.00")
        Until Client.MoveNext()
      Endif
      Colbl.MoveFirst()
      Repeat
        Colbl.Item.Selected = True
        If Colbl.Item[0] = sclient Then
          If totalht <> 0 Then
            Colbl.Item[2] = Totalht
            Colbl.Item[3] = Totalttc
          Else
            Colbl.Current.Delete
          Endif
          Break
        Endif
      Until Colbl.MoveNext()
    Endif
    If Key.code = Key.Enter Then Coldetail_Activate()
  End With

End

'**********************************************************
'*  On controle si la date saisie est dans les bornes     *
'**********************************************************
Public Sub Quittedate()

  Dim dte2 As String
  Dim dte3 As String
  Dim ye As String

  Tab = "Fiches_Parametres"
  rResult = Utils.db.Exec("SELECT * FROM " & Tab & "")
  dtex = rResult!dteclec ' On recupere la date de fin d'exercice
  dte = rResult!dtepc
  dte = Utils.Cdate_aff(dte)
  dte3 = Right$(dte, 4) & Left$(dte, 2)
  dte2 = rResult!dteclec1
  dte2 = Utils.Cdate_aff(dte2)
  ye = Right$(dte2, 4)
  Ye = Val(Ye) + 1
  With utils
    datej.text = .Cdate_calc(datej.text)
    datej.Text = .Cdate_aff(datej.Text)
    b = 0
    If datej.Text = "00.00.0:00" Then
      datej.Text = Format$(Now, "dd.mm.yyyy")
      b = 1
      datej.SetFocus
    Else
      dte3 = rResult!dtepec
      dte3 = Right$(dte3, 4) & Left$(dte3, 2)
      If Right$(datej.text, 4) & Mid$(datej.text, 4, 2) < dte3 Then
        If son Then
          Music.Play
        Endif
        If Message.Warning("Attention ! La date saisie est inférieure au début de la période en cours.", "Ok") = 1 Then
          datej.SetFocus
          B = 1
        Endif
      Else
        If Right$(datej.text, 4) & Mid$(datej.text, 4, 2) > dte3 Then
          If son Then
            Music.Play
          Endif
          If Message.Warning("Attention ! La date saisie est supérieure à la période en cours.", "Ok") = 1 Then
            datej.SetFocus
            B = 1
          Endif
        Else
        Endif
      Endif
    Endif
    Try numecr = "numecriture"
  End With

End

Public Sub Button1_KeyPress()

  Button1_Click()

End

Public Sub Button1_Click()

  If chkfam = True Then
    Message.Warning("Traitement impossible ! La famille " & Famachat & " n'a pas de compte d'achat")
    Return
  Else
    Colbl.Clear
    Coldetail.Clear
    datej.text = Utils.Cdate_calc(datej.text)
    datej.Text = Utils.Cdate_aff(datej.Text)
    'Quittedate()
    If B <> 1 Then
      recup_bl()
      Libell.SetFocus
    Else
      b = 0
    Endif
  Endif

End

Public Sub Button5_Click()

  If Exist(filename) Then Try Kill filename
  Me.close

End

Public Sub Radiobutton1_Click()

  CodeFour.Background = &HD4D0C8& '&HF9F9BD&
  CodeFour.ReadOnly = True
  Colbl.clear
  Coldetail.clear

End

Public Sub Radiobutton2_Click()

  Dim Frmt As New String[]

  Frmt = Utils.FColr(Start.LocalSettings["/Coul/Znss"])
  If Start.LocalSettings["/Soc" & Start.Societe & "/Coul_fen"] Then CodeFour.Background = Val(Frmt[0])
  CodeFour.ReadOnly = False
  Colbl.clear
  Coldetail.clear
  CodeFour.SetFocus

End

Public Sub CodeFour_KeyPress()

  If Key.code = Key.enter Or Key.code = Key.return Or Key.code = Key.Tab Then
    rResult = Utils.db.Exec("select * from " & Cbase.Table("TabFour") & " where fo_code = &1", CodeFour.Text)
    If rResult.Available Then
      Button1.SetFocus()
    Else
      Message.Error("Ce fournisseur n'existe pas !")
      CodeFour.Select
      CodeFour.SetFocus
    Endif
  Endif

End

Public Sub Togglebutton1_Click()

  Dim MyForm As Trifours

  If Radiobutton2.Value = False Then Radiobutton2.Value = True
  Variables.bsel = False
  MyForm = New Trifours("ValidBR")
  MyForm.Showmodal()
  If Variables.Bsel = True Then
    CodeFour.Text = Variables.Cfour
  Else
    CodeFour.SetFocus
  Endif

End

Public Sub Gen_ecr(View As Boolean)

  Dim Tab As String
  Dim Tab0 As String
  Dim Tab1 As String
  Dim Tab5 As String
  Dim Tab6 As String
  Dim Tab7 As String
  Dim Tab10 As String
  Dim Tab11 As String
  Dim Txtva As String
  Dim P As Integer 'Flag pour lignes si pied de facture
  Dim Pge As Integer ' numero de page
  Dim ech As String
  Dim dureech As String
  Dim jours As String
  Dim finmois As Boolean
  Dim Teco As Float
  Dim Tart As String
  Dim Ligbl As Result
  Dim Imagewidth As Integer
  Dim Imageheight As Integer
  Dim nbfac As Integer
  Dim Apdf As Boolean = False
  Dim Mfacttc As Float = 0
  Dim NumeroBl As String
  Dim hFormc As GedC
  Dim numrecpts As String = ""
  Dim ccd As Calculdroit

  P = 31
  Pge = 1
  tart = 0
  nbfac = 1
  Totht = "0,00"
  Totttc = "0"
  Totalttc = "0"
  Brutht = "0"
  Remart = "0"
  Remmo = "0"
  Totalrem = "0"
  Teco = 0
  Imagewidth = 1000
  Imageheight = 500
  Tab = "Fiches_Parametres"
  Tab0 = "Fiches_Entrecpt"
  Tab1 = "Fiches_Ligrecpt"
  Tab2 = "Fiches_Societes"
  Tab4 = "Fiches_Echeances"
  Tab5 = "Fiches_Four"
  Tab6 = "Fiches_Art"
  Tab7 = "Fiches_Mo"
  Tab10 = "Totalisation"
  Tab11 = "Br"
  bchktva = True
  Ventilation()
  Filename = User.Home & "/tmp/BonReception.pdf"
  If Not Exist(User.home & "/BR") Then Try Mkdir User.home & "/BR"
  If Not View Then
    Try Hnew = Open User.home & "/BR/" & "Valbr" & Datej.Text & ".txt" For Write Create
    Print #Hnew, " "
    Print #Hnew, "*************************************   Liste des BR validés au " & Datej.Text & " *****************************************************"
    Print #Hnew, " "
    Print #Hnew, " Code                    Nom               Montant HT   Montant TTC    Libellé écriture          N° ecr. provisoire  N° ecr. définitive  "
    Print #Hnew, " "
    Print #Hnew, " "
  Endif
  Raz_Ventilation()
  If $soption = "B" Or $soption = "T" Then
    Utils.db.Exec("LOCK TABLES " & Tab & " WRITE, " & Tab0 & " WRITE, " & Tab1 & " WRITE, " & Tab2 & " WRITE, " & Tab4 & " WRITE, " & Tab5 & " WRITE, " & Tab6 & " WRITE, " & Tab7 & " WRITE, " & Tab10 & " WRITE, " & Tab11 & " WRITE," & Cbase.Table("TabTleg") & " WRITE, " & Cbase.Table("TabFam") & " WRITE, " & Cbase.Table("TabComptes") & " WRITE, " & Cbase.Table("TabMvt") & " WRITE, " & Cbase.Table("TabMvtM") & " WRITE, " & Cbase.Table("TabTvav") & " WRITE, " & Cbase.Table("TabHisFac") & " WRITE, " & "Fiches_Tvaac" & " Write, " & Cbase.Table("TabCPTdocs") & " write, " & Cbase.Table("TabFdocs") & " write, Fiches_ligcons WRITE, Fiches_ligregie WRITE, Fiches_regie WRITE ")
  Else
    Utils.db.Exec("LOCK TABLES " & Tab & " WRITE, " & Tab0 & " WRITE, " & Tab1 & " WRITE, " & Tab2 & " WRITE, " & Tab4 & " WRITE, " & Tab5 & " WRITE, " & Tab6 & " WRITE, " & Tab7 & " WRITE, " & Tab10 & " WRITE, " & Tab11 & " WRITE," & Cbase.Table("TabTleg") & " WRITE, " & Cbase.Table("TabFam") & " WRITE, " & Cbase.Table("TabComptes") & " WRITE, " & Cbase.Table("TabMvt") & " WRITE, " & Cbase.Table("TabMvtM") & " WRITE, " & Cbase.Table("TabTvav") & " WRITE, " & Cbase.Table("TabHisFac") & " WRITE, " & "Fiches_Tvaac" & " Write, " & Cbase.Table("TabCPTdocs") & " write, " & Cbase.Table("TabFdocs") & " write ")
  Endif
  Parametres()
  With Utils
    If Jnl Then
      Me.mouse = Mouse.Wait
      CblRslt = Utils.db.Exec("SELECT * FROM " & tab5 & " where fo_code = &1", Colbl.Item[0])
      CCli = CblRslt!fo_code
      nom = CblRslt!fo_nom
      ech = CblRslt!fo_cdech
      Exo = CblRslt!fo_exo
      Apdf = CblRslt!fo_copie
      If ech Then
        rResult = Utils.db.Exec("SELECT * FROM " & tab4 & " where num = &1", ech)
        If rResult.available Then
          dureech = rResult!duree
          jours = rResult!jours
          finmois = rResult!finmois
          ech = "1"
        Else
          ech = "0"
        Endif
      Else
        ech = "0"
      Endif
      If ech = "1" Then
        dateech2 = Utils.Calcech(dureech, jours, finmois, datej.Text)
      Endif
      Coldetail.MoveFirst()
      Coldetail.Item.Selected = True
      Edbr.Init()
      Repeat
        bchktva = True
        Numbl = Utils.db.Exec("SELECT * FROM " & tab0 & " where four = &1 and validee = &2 and numrecpt = &3 order by numrecpt", CodeFour.Text, False, Coldetail.Item[0])
        Try NumeroBl = numbl!numrecpt
        If Not Error Then
          Try Mfacttc = Mfacttc + numbl!montant
          Ligbl = Utils.db.Exec("SELECT * FROM " & tab1 & " left join  " & Cbase.Table("TabArt") & " on art_code = code where numrecpt = &1", numbl!numrecpt)
          If Ligbl.Count <> 0 Then
            Repeat
              Txtva = Ligbl!art_tva
              Txconv = Ligbl!art_txconv
              If $soption = "N" Then Brutht = Ligbl!prvt Else Brutht = Ligbl!paht
              totalht = Val(Brutht) * Val(Ligbl!qte)
              If $soption = "B" Or $soption = "T" Then    'rajout au montant ht des droits d'accise si besoin & maj du fichier régie
                If Ligbl!art_dra Then
                  ccd = New Calculdroit(Ligbl!art_dra, Ligbl!art_volm, Ligbl!art_deg, Ligbl!qte)
                  If ccd.drsurfac Then
                    totalht = Format(utils.totobs([totalht, Str(ccd.droit)]), "0.00")
                  Endif
                  creadra(ccd, Ligbl!art_code, Ligbl!qte, Ligbl!daterecpt, Ligbl!numrecpt, Ligbl!nligne, Ligbl!art_deg, Ligbl!art_dra)
                Endif
              Endif
              Fam = Ligbl!art_fam
              If Totttc = "" Then Totttc = "0"
              If totalht = "" Then totalht = "0"
              If Brutht = "" Then Brutht = "0"
              totht = Format$(Val(Utils.cpoint(totht)) + Val(Utils.cpoint(totalht)), "0.00")
              Maj_Totalisation()
            Until Ligbl.MoveNext()
          Endif

          If Not View Then
            If bchktva Then Utils.db.Exec("UPdate " & Tab0 & " set validee = &3 Where four = &1 and numrecpt = &2", Colbl.Item[0], numbl!numrecpt, 1)
          Endif

          numrecpts = numrecpts & "\n" & numbl!numrecpt
          'Edbr.Ed(numbl!numrecpt, Colbl.Item[0], datej.Text, coulfond, "ValidBR")

        Endif
        If $soption = "B" Or $soption = "T" Then
          Ligbl.MoveFirst
          totalconsigne(Ligbl!daterecpt, Ligbl!numrecpt, Ligbl!four)
        Endif
      Until Coldetail.MoveNext()
      Edbr.Ed(numrecpts, Colbl.Item[0], datej.Text, coulfond, "ValidBR")
      If Not View Then
        If Apdf Then
          'Keep a copy in fournisseur docs
          Copie.Dupli4(Filename, "", "BR" & Colbl.Item[0] & "_" & numerobl, datej.Text, Colbl.Item[0])
        Endif
        Mttc = Colbl.Item[2]
        If exo Then Totalttc = Colbl.Item[3]
        Utils.db.Exec("INSERT INTO " & Tab10 & "(compte, intitule, totalht, codetva) VALUES (&1, &2, &3, &4)", Colbl.Item[0], nom, Totalttc, 0)
        If bchktva Then
          Verif_solde()
          Maj_Compta()
          Variables.inumr = Numr
          Majnum()
          If Len(libel) > 30 Then libel = Left(libel, 30)
          Print #Hnew, Colbl.Item[0] & String$(10 - Len(Colbl.Item[0]), " ") & Colbl.Item[1] & String$(35 - Len(Colbl.Item[1]), " ") & Colbl.Item[2] & String$(15 - Len(Colbl.Item[2]), " ") & Colbl.Item[3] & String$(10 - Len(Colbl.Item[3]), " ") & libel & String(30 - Len(libel), " ") & "     " & Numr & String$(15 - Len(Str(Numr)), " ") & Numr2 & String$(15 - Len(Str(Numr2)), " ")
          Raz_Ventilation()
          Toteuros = 0
          'Endif
          Totalrem = 0
          Remart = 0
          'Until Colbl.MoveNext()
          Me.mouse = Mouse.Wait
          Utils.db.Exec("UNLOCK TABLES")
          Message.Info("Traitement terminé !")
          Close #Hnew
          Editeur.Prog_Editeur(User.home & "/BR/" & "Valbr" & Datej.Text & ".txt")
          If Start.LocalSettings["/Soc" & Start.Societe & "/Ged"] And Apdf Then
            Select Case Message.Question("Que souhaitez vous faire ? \n1- scanner la facture fournisseur\n2- Joindre un document\n3- Ne rien faire", "1", "2", "3")
              Case 1
                scanfacture()
              Case 2
                hFormc = New GedC(Numr, "Fac", CodeFour.text, " ")
                hFormc.Showmodal()
            End Select
          Endif
        Endif
      Else
        Utils.db.Exec("UNLOCK TABLES")
        Raz_Ventilation()
      Endif
    Else
      If son Then
        Music.Play
      Endif
      Message.Warning(" Impression impossible ! Veuillez saisir un code journal dans les parametres Svp !", "Ok")
    Endif
    Utils.db.Exec("UNLOCK TABLES")
  End With
  Me.Mouse = Mouse.Arrow
  Colbl.Clear
  Coldetail.Clear
  Button1_Click()

End

'**********************************************************
'*                  Gestion de la GED                     *
'**********************************************************
Public Sub scanfacture()

  Dim hForm As Gged

  NmFic &= "/" & Ccli
  hForm = New Gged(Ccli, "Fac", Ccli, "")
  hForm.Showmodal()

End

Private Function FileFilter(Optional All As Boolean = False) As String[]

  Dim filter As New String[]

  filter.Add("*.*")
  Return filter

End

'**********************************************************
'*                   Recup parametres                     *
'**********************************************************
Public Sub Parametres()

  Tab = "Fiches_Parametres"
  rResult = Utils.db.Exec("SELECT * FROM " & Tab & " ")
  If rResult.Available Then
    Jnl = rResult!jrnal5
  Endif

End

'**********************************************************
'*      Creation table temporaire pour totalisation       *
'**********************************************************
Public Sub Ventilation()

  Dim Tab5 As String

  Tab5 = "Totalisation"
  'Utils.db.Exec("LOCK TABLES " & Tab5 & " WRITE")
  Utils.db.Exec("DROP TABLE IF EXISTS  Totalisation ")
  Utils.db.Exec("CREATE TABLE " & Tab5 &
    "(compte Char(8) NOT NULL," &
    "intitule Char(40)," &
    "totalht Char(25)," &
    "totaltva Char(25)," &
    "codetva Char(2)," &
    "PRIMARY KEY (compte,codetva))" & Utils.db.Engine())

End

Public Sub Raz_Ventilation()

  Dim Tab5 As String

  Tab5 = "Totalisation"
  Utils.db.Exec("Truncate " & Tab5 & "")

End

'**********************************************************
'*                   Maj Totalisation                     *
'**********************************************************

Public Sub Maj_Totalisation()

  Dim Mtva As String
  Dim Totht As String
  Dim Tottva As String
  Dim Remise As String
  Dim Tab3 As String
  Dim Tab4 As String
  Dim Tab5 As String
  Dim rrResult As Result

  Tab = "Fiches_Fam"
  Tab5 = "Totalisation"
  Tab3 = "Fiches_Comptes"
  Tab4 = "Fiches_Tvaac"
  TotTva = "O.OO"
  With utils
    ' On recupere le compte achat et le code TVa de la famille
    rResult = Utils.db.Exec("SELECT * FROM " & Tab & " Where code_fam = &1", Fam)
    If rResult.Available Then
      cpt = rResult!compt3_fam
      Ctva = rResult!cdtva_fam
      cptRem = rResult!cptrem_fam
    Endif
    ' On recupere les données du compte achat de la famille
    rResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " Where compte_cc = &1", cpt)
    If rResult.Available Then
      Intit = rResult!intitule_cc
    Endif
    'On recupere le compte de TVA et son taux de TVA
    If exo = False Then
      rResult = Utils.db.Exec("SELECT * FROM " & Tab4 & " Where code_tva = &1", Ctva)
      If rResult.Available Then
        cpttva = rResult!cc_tva
        Ttva = rResult!taux_tva
      Endif
      rResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " Where compte_cc = &1", cpttva)
      If rResult.Available Then
        IntitTva = rResult!intitule_cc
        'On calcule le montant de la TVA
        Mtva = ((Val(Utils.cpoint(Totalht)) * Val(Utils.cpoint(Ttva)) / 100) * Txconv)
        If IsNull(Totalttc) Then Totalttc = "0"
        Totalttc = Val(Utils.cpoint(Totalttc)) + Val(Utils.cpoint(Totalht)) * Txconv + Val(Utils.cpoint(Mtva))
      Else
        Message.Error("Le code tva " & Ctva & " n'existe pas dans la table des Tva sur achat.")
        bchktva = False
        Return
      Endif
    Else
      Totalttc = Val(Utils.cpoint(Totalht)) * Txconv
    Endif
    'Si ce n'est pas un compte TVA on regarde si le compte existe deja dans la table temporaire
    If Left$(cpt, 4) <> "4456" Then
      rrResult = Utils.db.Exec("SELECT * FROM " & Tab5 & " Where compte = &1 AND codetva = &2", cpt, 0)
    Else
      'Sinon on recupere le compte TVA correspondant au taux
      If exo = False Then rrResult = Utils.db.Exec("SELECT * FROM " & Tab5 & " Where compte = &1 and codetva = &2", cpt, Ctva)
    Endif
    'Si le compte existe dans la table temporaire
    If rrResult.Available Then
      Totht = Format$(Val(.cpoint(rrResult!totalht)) + Val(.cpoint(totalht)), "0.00")
      If exo = False Then TotTva = (Val(.cpoint(rrResult!totaltva)) + Val(.cpoint(Mtva)))
      'Si ce n'est pas un compte TVA on met a jour sans le code TVA
      If Left$(cpt, 4) <> "4456" Then
        Utils.db.Exec("UPdate " & Tab5 & " set compte = &1, intitule = &2, totalht = &3, totaltva =&4 Where compte = &1 and codetva = &5", cpt, Intit, Totht, Left$(.cpoint(TotTva), 25), 0)
      Else
        'Si c'est un compte TVA on met a jour avec le code TVA
        If exo = False Then Utils.db.Exec("UPdate " & Tab5 & " set compte = &1, intitule = &2, totalht = &3, totaltva =&4 Where compte = &1 and codetva = &5", cpt, Intit, Totht, Left$(.cpoint(TotTva), 25), Ctva)
      Endif
    Else
      'Si le compte n'existe pas dans la table temporaire
      Totht = Format$(Val(.cpoint(totalht)), "0.00")
      'Si ce n'est pas un compte TVA on crée avec un code TVA a zéro
      If Left$(cpt, 4) <> "4456" Then
        Utils.db.Exec("INSERT INTO " & Tab5 & "(compte, intitule, totalht, totaltva, codetva) VALUES (&1, &2, &3, &4, &5)", cpt, Intit, Totht, Left$(.cpoint(Mtva), 25), 0)
      Else
        'Sinon on crée avec le code TVA
        If exo = False Then Utils.db.Exec("INSERT INTO " & Tab5 & "(compte, intitule, totalht, totaltva, codetva) VALUES (&1, &2, &3, &4, &5)", cpt, Intit, Totht, Left$(.cpoint(Mtva), 25), Ctva)
      Endif
    Endif
    If exo = False Then
      rrResult = Utils.db.Exec("SELECT * FROM " & Tab5 & " Where compte = &1 and codetva = &2", cpttva, Ctva)
      If rrResult.Available Then
        If exo = False Then TotTva = Format$(Val(.cpoint(rrResult!totaltva)) + Val(.cpoint(Mtva)), "0.00")
        Utils.db.Exec("UPdate " & Tab5 & " set compte = &1, intitule =&2, totalht=&3, totaltva =&4, codetva = &5 Where compte = &1 and codeTva = &5", cpttva, Intittva, Totht, Left$(.cpoint(Tottva), 25), Ctva)
      Else
        Utils.db.Exec("INSERT INTO " & Tab5 & "(compte, intitule, totalht, totaltva, codetva) VALUES (&1, &2, &3, &4, &5)", cpttva, Intittva, Totht, Left$(.cpoint(Mtva), 25), Ctva)
      Endif
    Endif
    Totht = 0
    Remise = 0
  End With

End

Public Sub Verif_solde()

  Dim hResult As Result
  Dim sCompte As String
  Dim sTotalD As String = "0"
  Dim sTotalC As String = "0"
  Dim sdif As Float

  With utils
    hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("Totalisation") & " order by compte")
    If hResult.Available Then
      Repeat
        If Left$(hResult!compte, 3) = "401" Then
          sTotalD = hResult!totalht
          If IsNull(sTotalD) Then sTotalD = "0"
        Else
          If Left$(hResult!compte, 3) = "445" Then
            If exo = False Then sTotalC = Val(.cpoint(sTotalC)) + Val(.cpoint(hResult!totaltva))
          Else
            sTotalC = Val(.cpoint(sTotalC)) + Val(.cpoint(hResult!totalht))
          Endif
          sCompte = hResult!compte
        Endif
      Until hResult.MoveNext()
      hResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("Totalisation") & " Where compte = &1", sCompte)
      If Val(.cpoint(sTotalD)) < Val(.cpoint(sTotalC)) Then
        sDif = Val(.cpoint(sTotalC)) - Val(.cpoint(sTotalD))
        sDif = Val(.cpoint(hResult!totalht)) - sDif
        Utils.db.Exec("UPDATE " & Cbase.Table("Totalisation") & " set totalht = &2 Where compte = &1 ", sCompte, sDif)
      Else
        If Val(.cpoint(sTotalD)) > Val(.cpoint(sTotalC)) Then
          sDif = Val(.cpoint(sTotalD)) - Val(.cpoint(sTotalC))
          sDif = Val(.cpoint(hResult!totalht)) + sDif
          Utils.db.Exec("UPDATE " & Cbase.Table("Totalisation") & " set totalht = &2 Where compte = &1 ", sCompte, sDif)
        Endif
      Endif
    Endif
  End With

End

'**********************************************************
'*                   Maj comptabilité                     *
'**********************************************************
Public Sub Maj_Compta()

  Dim cpt As String
  Dim coll As String
  Dim collectif As String
  Dim Mtc As Float
  Dim Mtd As Float
  Dim Sld As Float
  Dim Valid As Integer
  Dim Prov As Integer
  Dim Tresor As Integer
  Dim pointee As Integer
  Dim lettree As Integer
  Dim cloturee As Integer
  Dim relance As Integer
  Dim rrResult As Result
  Dim Tmvt As String

  Tmvt = "Fiches_Mvt"
  Tab2 = "Totalisation"
  Tab3 = "Fiches_Comptes"
  Valid = 1
  Prov = 0
  Tresor = 0
  pointee = 0
  lettree = 0
  cloturee = 0
  relance = 0
  numecr = "numecriture"
  numr = Ecritures(numecr)
  numr = numr + 1
  numecr = "numecriture2"
  numr2 = Ecritures(numecr)
  numr2 = numr2 + 1
  With Utils
    rResult = Utils.db.Exec("SELECT * FROM " & Tab2 & "")
    If rResult.Available Then
      Repeat
        collectif = ""
        cpt = rResult!compte
        Intit = rResult!intitule
        If Left$(cpt, 3) = "401" Then
          rrResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " Where compte_cc = &1", cpt)
          coll = rrResult!coll_cc
          collectif = "1"
          If IsNull(Libell.Text) Then
            If Val(.cpoint(Mttc)) > 0 Then
              Libel = "Facture " & Intit & " " & numr
            Else
              Libel = "Avoir " & Intit & " " & numr
            Endif
          Else
            libel = Libell.Text
          Endif
          libel = Left$(libel, 50)
          If rResult!totalht <> "" And Val(.cpoint(rResult!totalht)) > 0 Then
            Mtc = Val(.cpoint(rResult!totalht))
            Mtd = 0
          Else
            Mtd = Val(.cpoint(rResult!totalht))
            Mtc = 0
          Endif
          Utils.db.Exec("INSERT INTO " & Tmvt & "(jour, numero, compte, collectif, intitule, dte, numdoc, numlot, libelle, montantd, montantc, validee, provisoire, tresorerie, pointee, lettree, cloturee, relance, numerodef, dateech) VALUES (&1, &2, &3, &4, &5, &6, &7, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17}, &{18}, &{19})", Jnl, numr, coll, collectif, Intit, .Cdate_Dbase(Datej.Text), numr, Libel, Abs(Mtd), Abs(Mtc), Valid, Prov, Tresor, pointee, lettree, cloturee, relance, numr2, dateech2)
          rrResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " Where compte_cc = &1", coll)
          If rrResult!solde = "" Then
            Sld = Mtc - Mtd
          Else
            Sld = rrResult!solde + Mtc - Mtd
          Endif
          Utils.db.Exec("UPdate " & Tab3 & " set solde = &2 Where compte_cc = &1", coll, Sld)
          collectif = ""
        Endif
        If Left$(cpt, 3) <> "401" And Left$(cpt, 3) <> "445" Then
          If Left$(rResult!compte, 3) <> "609" Then
            If Val(.cpoint(rResult!totalht)) > 0 Then
              Mtd = Val(.cpoint(rResult!totalht))
              Mtc = 0
            Else
              Mtc = Val(.cpoint(rResult!totalht))
              Mtd = 0
            Endif
          Else
            If Val(Mttc) > 0 Then
              If Val(.cpoint(rResult!totalht)) > 0 Then
                Mtc = Val(.cpoint(rResult!totalht))
                Mtd = 0
              Else
                Mtd = Val(.cpoint(rResult!totalht))
                Mtc = 0
              Endif
            Else
              If Val(.cpoint(rResult!totalht)) > 0 Then
                Mtc = Val(.cpoint(rResult!totalht))
                Mtd = 0
              Else
                Mtd = Val(.cpoint(rResult!totalht))
                Mtc = 0
              Endif
            Endif
          Endif
        Endif
        If exo = False Then
          If Left$(cpt, 3) = "445" Then
            If rResult!totaltva <> "" And Val(.cpoint(rResult!totaltva)) > 0 Then
              Mtd = Val(.cpoint(rResult!totaltva))
              Mtc = 0
            Else
              Mtc = Val(.cpoint(rResult!totaltva))
              Mtd = 0
            Endif
          Endif
        Endif
        If IsNull(Libell.Text) Then
          If Val(.cpoint(Mttc)) > 0 Then
            Libel = "Facture " & Intit & " " & numr
          Else
            Libel = "Avoir " & Intit & " " & numr
          Endif
        Else
          libel = Libell.Text
        Endif
        Try libel = Left$(libel, 50)
        Mtd = Abs(mtd)
        Mtc = Abs(Mtc)
        Utils.db.Exec("INSERT INTO " & Tmvt & "(jour, numero, compte, intitule, dte, dateech, numdoc, numlot, libelle, montantd, montantc, validee, provisoire, tresorerie, pointee, lettree, cloturee, relance, numerodef) VALUES (&1, &2, &3, &4, &5, &6, &7, &7, &8, &9, &{10}, &{11}, &{12}, &{13}, &{14}, &{15}, &{16}, &{17}, &{18})", Jnl, numr, Cpt, Intit, .Cdate_Dbase(Datej.Text), .Cdate_Dbase(dateech2), numr, Libel, Mtd, Mtc, Valid, Prov, Tresor, Pointee, lettree, Cloturee, Relance, numr2)
        rrResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " Where compte_cc = &1", cpt)
        If rrResult!solde = "" Then
          Sld = Mtc - Mtd
        Else
          Sld = rrResult!solde + Mtc - Mtd
        Endif
        Utils.db.Exec("UPdate " & Tab3 & " set solde = &2 Where compte_cc = &1", cpt, Sld)
        Mtd = 0
        Mtc = 0
        sld = 0
      Until rResult.MoveNext()
    Endif
  End With
  Sha1Calc.CalcSha1(Tmvt, numr)

End

'*****************************************************
'*  Récuperation du dernier numéro d'écriture        *
'*****************************************************
Public Function Ecritures(numecr As String) As String

  Dim Params As Result
  Dim Tab As String
  Dim nro As String

  Tab = "Fiches_Parametres"
  Params = Utils.db.Exec("SELECT " & numecr & " FROM " & Tab & " ")
  If Params.Available Then
    If IsNull(Params["" & numecr & ""]) Then
      nro = 0
    Else
      nro = Params["" & numecr & ""]
    Endif
  Endif
  Return nro

End

'************************************************
'*  Mise a jour du dernier numéro d'écriture    *
'************************************************
Public Sub Majnum()

  Dim Tab As String

  Tab = "Fiches_Parametres"
  Utils.db.Exec("UPDATE " & Tab & " set numecriture = &1, numecriture2 = &2", numr, numr2)

End

'**********************************************************
'*      Suppression Bon après édition de facture          *
'**********************************************************
Public Sub Bl_Sup()

  Dim Entbn As String
  Dim Ligbn As String

  Entbn = "Fiches_Entrecpt"
  Ligbn = "Fiches_Ligrecpt"
  Utils.db.Exec("DELETE FROM " & Entbn & " where numbl = &1", Bonl!num)
  Utils.db.Exec("DELETE FROM " & Ligbn & " where numrecptl = &1", Bonl!num)

End

Public Sub Button9_Click()

  Dim Tab As String
  Dim Params As Result

  Tab = "Fiches_Parametres"
  Params = Utils.db.Exec("SELECT jrnal5 FROM " & Tab & " ")
  If Not IsNull(Params!jrnal5) Then
    If RadioButton2.value Then
      If Colbl.Count <> 0 Then
        Gen_ecr(False)
      Else
        Message.Warning("Veuillez lancer votre traitement avant de generer l'ecriture SVP ! ")
      Endif
    Else
      Message.Warning("Ce traitement ne peut se faire que pour un fournisseur. ! ")
    Endif
  Else
    Message.Warning("Génération impossible le journal d'achat n'est pas renseigné dans les paramètres !")
  Endif

End

Public Sub Button2_Click()

  Dim Tab As String
  Dim Params As Result

  Tab = "Fiches_Parametres"
  Params = Utils.db.Exec("SELECT jrnal5 FROM " & Tab & " ")
  If Not IsNull(Params!jrnal5) Then
    If RadioButton2.value Then
      If Colbl.Count <> 0 Then
        Gen_ecr(True)
      Else
        Message.Warning("Veuillez lancer votre traitement avant de visualiser SVP ! ")
      Endif
    Else
      Message.Warning("Ce traitement ne peut se faire que pour un fournisseur. ! ")
    Endif
  Else
    Message.Warning("Génération impossible le journal d'achat n'est pas renseigné dans les paramètres !")
  Endif

End

'***********************************
'*        On gère l' arrondi       *
'***********************************
Public Function ard(Puttc As String) As String

  If Not PuTTc Then PuTTc = "0,00"
  If ardi = "0,05" Then
    If Right$(Puttc) Like "[34567]*" Then
      Puttc = Left$(Puttc, (Len(Puttc) - 1)) & "5"
    Else
      Puttc = Round(Val(Puttc), -1)
      If typeL = "A" Then Puttc = Format$(Puttc, nbdec)
    Endif
  Endif

  If ardi = "0,10" Then
    Puttc = Round(Val(Puttc), -1)
    If typeL = "A" Then Puttc = Format$(Puttc, nbdec)
  Endif

  If ardi = "0,50" Then
    If Abs(Val(Puttc)) <= Abs(Val(Left$(Puttc, (Len(Puttc) - 2)) & 25)) Then
      Puttc = Left$(Puttc, (Len(Puttc) - 2)) & "00"
    Else
      If Abs(Val(Puttc)) <= Abs(Val(Left$(Puttc, (Len(Puttc) - 2)) & 75)) Then
        Puttc = Left$(Puttc, (Len(Puttc) - 2)) & "50"
      Endif
      If Abs(Val(Puttc)) >= Abs(Val(Left$(Puttc, (Len(Puttc) - 2)) & 76)) Then
        Puttc = Round(Val(Puttc))
        If typeL = "A" Then Puttc = Format$(Puttc, nbdec)
      Endif
    Endif
  Endif

  If ardi = "1,00" Then
    Puttc = Round(Val(Puttc))
    If typeL = "A" Then Puttc = Format$(Puttc, nbdec)
  Endif
  Return Puttc

End

Public Sub Button16_Click()

  Me.Close

End

Public Sub Datej_DblClick()

  If DateChooser1.visible = False Then
    DateChooser1.visible = True
  Else
    DateChooser1.Visible = False
  Endif

End

Public Sub Datej_KeyPress()

  If Key.code = Key.Escape Then
    If DateChooser1.Visible = True Then DateChooser1.Visible = False
  Endif
  If Key.code = Key.F2 Then
    If DateChooser1.Visible = True Then
      DateChooser1.Visible = False
    Else
      DateChooser1.Visible = True
    Endif
  Endif
  If Key.code = Key.Return Or If Key.code = Key.Enter Then
    datej.text = Utils.Cdate_calc(datej.text)
    datej.Text = Utils.Cdate_aff(datej.Text)
  Endif

End

Public Sub DateChooser1_Activate()

  Datej.text = Format$(DateChooser1.Value, "dd.mm.yyyy")
  DateChooser1.Visible = False

End
'*******************************traitement sur les options****************************************
Private Sub creadra(ccd As Calculdroit, nart As String, qte As String, dte As Date, nbl As String, nlig As String, degre As Float, code As String)
  
  Dim res As Result
  
  utils.db.Begin
  res = utils.db.Create("Fiches_ligregie")
  res!dtmouv = dte
  res!num = nbl
  res!numlig = nlig
  res!type = "E"
  res!codeart = nart
  res!coderegie = code
  res!qte = qte
  res!volume = ccd.vol
  res!degres = degre
  res!volumeap = ccd.volap
  res!cloture = False
  res.Update
  utils.db.Commit
  If ccd.suspendu Then $bvign = True

End

Private Sub totalconsigne(dte As Date, numbl As String, numfr As String)
  
  Dim res, respar, rescons As Result
  Dim bloc As String
  Dim tot As Float
  
  bloc = Format(dte, "dd.mm.yyyy") & numbl & numfr
  respar = utils.db.Exec("SELECT * FROM Fiches_Parametres")
  res = utils.db.Exec("SELECT SUM(montant) AS montant FROM Fiches_ligcons WHERE bloc=&1 AND numlig<>'D'", bloc)
  If Not IsNull(res!montant) Then
    tot = res!montant
  Endif
  res = utils.db.Exec("SELECT SUM(montant) AS montant FROM Fiches_ligcons WHERE bloc=&1 AND numlig='D'", bloc)
  If Not IsNull(res!montant) Then
    tot = tot + res!montant
  Endif
  If tot <> 0 Then
    rescons = utils.db.Exec("SELECT intitule_cc FROM Fiches_Comptes WHERE compte_cc = &1", respar!consfou)
    utils.db.Begin
    res = utils.db.Edit("Totalisation", "compte=&1", respar!consfou)
    If Not res.Available Then
      res = utils.db.Create("Totalisation")
      res!compte = respar!consfou
      res!intitule = rescons!intitule_cc
      res!totalht = "0"
    Endif
    res!totalht = utils.totobs([res!totalht, Str(tot)])
    res!totaltva = "0"
    res!codetva = "."
    res.Update
    utils.db.Commit
    Totalttc = utils.totobs([Totalttc, Str(tot)])
  Endif
End

'**********************************************
'*     Affichage de la documentation Html     *
'**********************************************
Public Sub Button7_Click()

  Doc.Open("Br")

End
