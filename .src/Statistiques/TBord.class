' Gambas class file

Private son As Integer = Start.Son
Private dte1 As String
Private dte2 As String
Private value As Float[]
Private TotM As Integer
Private nb As Integer = 0
Private Periode As String
Private Mat As String = Start.LocalSettings["/Soc" & Start.Societe & "/Materiel"]

Public Sub _new()

  Dim rResult As Result

  Me.Center
  rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabParam") & "")
  dte2 = Format$(Now, "dd.mm.yyyy")
  dte1 = Format$(DateAdd(DateAdd(Now, gb.Year, -1), gb.Month, 1), "01.mm.yyyy")
  Label28.Text = "Progression des CA mensuels pour la p√©riode du  " & dte1 & " au " & dte2
  Periode = dte1 & " au " & dte2
  Music.Load(Variables.Musique)
  Son = Variables.son
  Traitement()

End

Public Sub Traitement()

  Dim Tab As String
  Dim Tab2 As String
  Dim Tab3 As String
  Dim Tab4 As String
  Dim Tab5 As String
  Dim rResult As Result
  Dim N1Result As Result
  Dim Total As Float
  Dim Brut As Float
  Dim Remise As Float
  Dim Remmo As Float
  Dim Remart As Float
  Dim MargeArt As Float
  Dim MargeMo As Float
  Dim MargePart As Float
  Dim MargePmo As Float
  Dim Totca As Float
  Dim N As Float = 0
  Dim Dte As Date
  Dim type As String

  Tab = "Fiches_HistoFac"
  Tab2 = "Total"
  Tab3 = "Fiches_Bl"
  Tab4 = "Fiches_HistoFacM"
  Tab5 = "Fiches_BlM"
  value = New Float[]
  With Utils
    Me.Mouse = Mouse.Wait
    Utils.db.Exec("DROP TABLE IF EXISTS  Total")
    Utils.db.Exec("CREATE TABLE " & Tab2 &
      "(brutfac Decimal(12,2)," &
      "rmfac Decimal(12,2)," &
      "totfac Decimal(12,2)," &
      "marge_art Decimal(12,2)," &
      "marge_mo Decimal(12,2)," &
      "margepart Decimal(12,2)," &
      "margepmo Decimal(12,2)," &
      "date Datetime," &
      "nb integer , " &
      "PRIMARY KEY (date))" & Utils.db.Engine())
    If dte1 <> "" Or Left$(dte1, 2) = "00" Or dte2 <> "" Or Left$(dte2, 2) = "00" Then
      If Mat = 0 Then
        rResult = Utils.db.Exec("SELECT * FROM " & Tab & " where datefac >= &1 and datefac <= &2 order by datefac", .Cdate_Dbase(dte1), .Cdate_Dbase(dte2))
      Else
        rResult = Utils.db.Exec("SELECT * FROM " & Tab & " where datefac >= &1 and datefac <= &2 union SELECT * FROM " & Tab4 & " where datefac >= &1 and datefac <= &2 order by datefac", .Cdate_Dbase(dte1), .Cdate_Dbase(dte2))
      Endif
      If rResult.Available Then
        Repeat
          Dte = rResult!datefac
          If Not IsNull(rResult!remmofac) Then
            Try Remmo = Val(rResult!remmofac)
            If Error Then Remmo = rResult!remmofac
          Endif
          If Not IsNull(rResult!remartfac) Then
            Try Remart = Val(rResult!remartfac)
            If Error Then Remart = rResult!remartfac
          Endif
          Remise = Remart + Remmo
          If Not IsNull(rResult!totfac) Then
            Total = Val(.cpoint(rResult!totfac))
            Brut = Total + Remise
          Endif
          If Not IsNull(rResult!marge_art) Then
            Try MargeArt = rResult!marge_art
            If Error Then MargeArt = 0
            Try MargePart = (MargeArt / Total) * 100
          Endif
          If Not IsNull(rResult!marge_mo) Then
            Try MargeMo = rResult!marge_mo
            If Error Then MargeMo = 0
            Try MargePmo = (MargeMo / Total) * 100
          Endif
          N1Result = Utils.db.Exec("SELECT * FROM " & Tab2 & " where MONTH(date) = MONTH(&1)", Dte)
          If N1Result.Available Then
            Total = Total + N1Result!totfac
            Brut = Brut + N1Result!brutfac
            Remise = Remise + N1Result!rmfac
            If Not IsNull(N1Result!marge_art) Then
              MargeArt = MargeArt + N1Result!marge_art
              Try MargePart = (MargeArt / Total) * 100
            Endif
            If Not IsNull(N1Result!marge_mo) Then
              MargeMo = MargeMo + N1Result!marge_mo
              Try MargePmo = (MargeMo / Total) * 100
            Endif
            nb = N1Result!nb + 1
            Utils.db.Exec("UPdate " & Tab2 & " set brutfac = &1, rmfac = &2, totfac = &3, marge_art = &4, margepart = &5, marge_mo = &6, margepmo = &7, nb = &9 Where MONTH(date) = MONTH(&8)", .PointBase(Brut), .PointBase(Remise), .PointBase(Total), .PointBase(MargeArt), .PointBase(MargePart), .PointBase(MargeMo), .PointBase(MargePmo), Dte, nb)
          Else
            nb = 1
            Utils.db.Exec("INSERT INTO " & Tab2 & "(brutfac, rmfac, totfac, marge_art, margepart, marge_mo, margepmo, date, nb) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9)", .PointBase(Brut), .PointBase(Remise), .PointBase(Total), .PointBase(MargeArt), .PointBase(MargePart), .PointBase(MargeMo), .PointBase(MargePmo), Dte, nb)
          Endif
          Remart = 0
          Remmo = 0
          Total = 0
          Brut = 0
          Remise = 0
          MargeArt = 0
          MargePart = 0
          MargeMo = 0
          MargePmo = 0
          nb = 0
        Until rResult.MoveNext()
      Endif
      If Mat = 0 Then
        rResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " where dtefac >= &1 and dtefac <= &2 and type = &3 and imp = &4 order by dtefac", .Cdate_Dbase(dte1), .Cdate_Dbase(dte2), "F", 1)
      Else
        rResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " where dtefac >= &1 and dtefac <= &2 and type = &3 and imp = &4 union SELECT * FROM " & Tab5 & " where dtefac >= &1 and dtefac <= &2 and type = &3 and imp = &4 order by dtefac", .Cdate_Dbase(dte1), .Cdate_Dbase(dte2), "F", 1)
      Endif
      If rResult.Available Then
        Repeat
          Dte = rResult!dtefac
          If Not IsNull(rResult!remmobl) Then
            Remmo = rResult!remmobl
          Endif
          If Not IsNull(rResult!remartbl) Then
            Remart = rResult!remartbl
          Endif
          Remise = Remise + Remart + Remmo
          If Not IsNull(rResult!totalht) Then
            Total = Val(.cpoint(rResult!totalht))
            Brut = Total + Remise
          Endif
          If Not IsNull(rResult!marge_art) Then
            MargeArt = rResult!marge_art
            Try MargePart = (MargeArt / Total) * 100
          Endif
          If Not IsNull(rResult!marge_mo) Then
            MargeMo = rResult!marge_mo
            Try MargePmo = (MargeMo / Total) * 100
          Endif
          N1Result = Utils.db.Exec("SELECT * FROM " & Tab2 & " where MONTH(date) = MONTH(&1)", Dte)
          If N1Result.Available Then
            Total = Total + N1Result!totfac
            Brut = Brut + N1Result!brutfac
            Remise = Remise + N1Result!rmfac
            If Not IsNull(N1Result!marge_art) Then
              MargeArt = MargeArt + N1Result!marge_art
              MargePart = (MargeArt / Total) * 100
            Endif
            If Not IsNull(N1Result!marge_mo) Then
              MargeMo = MargeMo + N1Result!marge_mo
              MargePmo = (MargeMo / Total) * 100
            Endif
            nb = N1Result!nb + 1
            Utils.db.Exec("UPdate " & Tab2 & " set brutfac = &1, rmfac = &2, totfac = &3, marge_art = &4, margepart = &5, marge_mo = &6, margepmo = &7, nb = &9 Where MONTH(date) = MONTH(&8)", .PointBase(Brut), .PointBase(Remise), .PointBase(Total), .PointBase(MargeArt), .PointBase(MargePart), .PointBase(MargeMo), .PointBase(MargePmo), Dte, nb)
          Else
            nb = 1
            Utils.db.Exec("INSERT INTO " & Tab2 & "(brutfac, rmfac, totfac, marge_art, margepart, marge_mo, margepmo, date, nb) VALUES (&1, &2, &3, &4, &5, &6, &7, &8, &9)", .PointBase(Brut), .PointBase(Remise), .PointBase(Total), .PointBase(MargeArt), .PointBase(MargePart), .PointBase(MargeMo), .PointBase(MargePmo), Dte, nb)
          Endif
          Remart = 0
          Remmo = 0
          Total = 0
          Brut = 0
          Remise = 0
          MargeArt = 0
          MargePart = 0
          MargeMo = 0
          MargePmo = 0
        Until rResult.MoveNext()
      Endif
    Else
      If son Then
        Music.Play
      Endif
      message.Warning("Veuillez saisir une date SVP !", "Ok")
    Endif
  End With
  nb = 0
  MargeArt = 0
  MargePart = 0
  MargeMo = 0
  MargePmo = 0
  rResult = Utils.db.Exec("SELECT * FROM " & Tab2 & " ")
  If rResult.Available Then
    TotM = 12
    value.Resize(TotM + 1)
    rResult.MoveFirst()
    Repeat
      n = n + 1
      value.Resize(n + 1)
      value[n] = Val(Utils.cpoint(rResult!totfac))
      nb = nb + rResult!nb
      Margeart = MargeArt + rResult!marge_art
      MargeMo = MargeMo + rResult!marge_mo
      Margepart = MargepArt + rResult!margepart
      MargepMo = MargepMo + rResult!margepmo
      Totca = Totca + rResult!brutfac
    Until rResult.MoveNext()
    value.Resize(TotM + 1)
    If TotM > 12 Then Totm = 12
    Draw_Chart()
    Mrgart.Text = Format$(Margeart, "0.00")
    Mrgmo.Text = Format$(Margemo, "0.00")
    TMrgart.Text = Format$(Margeart / Totca * 100, "0.00") & " %"
    TMrgmo.Text = Format$(Margemo / Totca * 100, "0.00") & " %"
    Totmrg.Text = Format$(Margemo + Margeart, "0.00")
    Totmarge.Text = Format$((Margemo + Margeart) / Totca * 100, "0.00") & " %"
    Caht.Text = Format$(Totca, "0.00")
    Panier.Text = Format$(Totca / nb, "0.00")
  Endif
  n = 0
  rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabBl") & " where totalht is not NULL order by type")
  If rResult.Available Then
    type = rResult!type
    Repeat
      If type = rResult!type Then Total = Total + rResult!totalht
      If type <> rResult!type Then
        Aff_Mois(n, type, total)
        n = 0
        Total = 0
      Endif
      Inc n
      type = rResult!type
    Until rResult.MoveNext()
    Aff_Mois(n, type, total)
    Tdocs.Text = Format$(Val(Utils.cpoint(Tcom.text)) + Val(Utils.cpoint(Tbl.text)) + Val(Utils.cpoint(Tfac.text)), "0.00")
  Endif

  Me.Mouse = Mouse.Default

End

Public Sub Aff_Mois(n As Integer, type As String, total As Float)

  If Type = "P" Then
    Tpro.Text = Format$(Total, "0.00")
    Npro.Text = n
  Endif
  If Type = "D" Then
    Tdev.Text = Format$(Total, "0.00")
    Ndev.Text = n
  Endif
  If Type = "C" Then
    Tcom.Text = Format$(Total, "0.00")
    Ncom.Text = n
  Endif
  If Type = "B" Then
    Tbl.Text = Format$(Total, "0.00")
    Nbl.Text = n
  Endif
  If Type = "F" Then
    Tfac.Text = Format$(Total, "0.00")
    Nfac.Text = n
  Endif

End

Public Sub Draw_Chart()

  Dim i As Integer

  Dim skala_1 As Integer
  Dim skala_2 As Integer
  Dim rResult As Result
  Dim distance_x As Float
  Dim distance_y As Float
  Dim Tot As Float
  Dim width_draw As Integer
  Dim colors As Integer[]
  Dim bottom As Integer
  Dim top As Integer
  Dim sumdata As Float = 0
  Dim maxdata As Float = 0
  Dim mois As String
  Dim devises_short As String = ""
  Dim devises As String = ""
  
  rResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabParam") & "")
  If rResult Then
    devises = rResult!devise
    devises_short = Left(rResult!devise, 1)
  Endif
  If IsNull(devises) Then
    devises = "Euros"
    devises_short = "E"
  Endif

  Mois = Mid$(Periode, 4, 2)
  colors = New Integer[]
  colors.Resize(totM + 1)
  For i = 1 To totM
    If Start.LocalSettings["/Soc" & Start.Societe & "/Prxdec"] Then
      value[i] = value[i] / 100000
    Else
      value[i] = value[i] / 1000
    Endif
    sumdata = sumdata + value[i]
    If value[i] > maxdata Then maxdata = value[i]
  Next
  drwchart.Clear

  draw.Begin(drwchart)

  skala_1 = drwchart.ClientH / 11 ' r√©glage hauteur
  distance_y = drwchart.ClientH - skala_1
  bottom = distance_y + 8 'r√©glage pied
  For i = 0 To (10 * (Floor(maxdata / 10) + 1)) Step (Floor(maxdata / 10) + 1)
    draw.ForeGround = color.black
    draw.Text(i & " K" & devises_short, 0, distance_y)
    draw.Line(60, distance_y + 8, drwchart.ClientWidth, distance_y + 8)
    top = distance_y + 8
    maxdata = i
    distance_y = distance_y - skala_1
  Next

  skala_2 = (drwchart.ClientW - 30) \ TotM
  distance_x = skala_2 + 30 'r√©glage horizontal
  width_draw = skala_2 / 2
  For i = 1 To TotM
    draw.LineWidth = 1
    draw.ForeGround = color.Black
    draw.Text(Mois, distance_x - (width_draw / 2) - 4, drwchart.ClientH - 14)
    draw.Line(distance_x - (width_draw / 2), 0, distance_x - (width_draw / 2), drwchart.ClientH - skala_1 + 8)
    draw.LineWidth = width_draw
    draw.ForeGround = color.RGB(i * 100, i * 10, i * 50)
    colors[i] = draw.ForeGround
    If value[i] > 0 Then
      tot = ((value[i] / maxdata) * (bottom - top))
      draw.Line(distance_x - (width_draw / 2), bottom, distance_x - (width_draw / 2), bottom - tot)
    Endif 
    distance_x = distance_x + skala_2
    Mois = Val(mois) + 1
    If Val(Mois) > 12 Then Mois = "01"
    Mois = Format$(Mois, "00")
  Next
  Wait 0.1
  DRAW.End

End

Public Sub Button1_Click()

  Me.close

End
