' Gambas class file

'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publiés par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'----------------------------------------------------------------------------
'################################################
'# nom du fichier           : VisFam.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 07/05/2006
'# Impression du hit parade
'################################################

total As Integer
value As Float[]
Dtn0 As String
Dtn1 As String
Tri As String
sens As String
Sc As String
Filename As String
son As Integer = Start.Son
PosX As Integer
PosY As Integer
Coulfond As New String[]

Public Sub _New(Hitniv As StatFam, Tot As Integer, Soc As String, Sn As Integer, dte1 As String, dte2 As String)

  Dim Frmt As New String[]

  Frmt = Utils.FColr(Start.LocalSettings["/Coul/Fnets"])
  Coulfond = Utils.Coulfd()
  Utils.Observers(Me)
  son = Sn
  Total = Tot
  Dtn0 = dte1
  Dtn1 = dte2
  Sc = Soc
  value = New Float[]
  Me.center
  With Liste
    .Columns.count = 9
    .Columns[0].Alignment = 1
    .Columns[0].Width = 80
    .Columns[1].Alignment = 1
    .Columns[1].Width = 80
    .Columns[2].Width = 230
    .Columns[3].Width = 104
    .Columns[4].Width = 104
    .Columns[5].Width = 104
    .Columns[6].Width = 104
    .Columns[7].Width = 80
    .Columns[8].Width = 10
    .Columns[0].Text = "N° Ligne"
    .Columns[1].Text = "code"
    .Columns[2].Text = "Désignation"
    .Columns[2].Alignment = 1
    .Columns[3].Text = "Brut ht"
    .Columns[3].Alignment = 3
    .Columns[4].Text = "Remises"
    .Columns[4].Alignment = 3
    .Columns[5].Text = "Net ht"
    .Columns[5].Alignment = 3
    .Columns[6].Text = "Quantité"
    .Columns[6].Alignment = 3
    .Columns[7].Text = "% Ratio"
    .Columns[7].Alignment = 3
    Tri = "codefam"
    Sens = "asc"
    Affichage()
  End With

End

Public Sub Affichage()

  Dim Tab3 As String
  Dim Tab4 As String
  Dim N As Float
  Dim rResult As Result
  Dim Totl As Float
  Dim Totbrut, totrem, totnet, totqte As Float = 0

  Tab3 = "Total"
  Tab4 = "Fiches_Fam" & Sc
  If Bcode.value = True Or If Bnom.value = True Then
    rResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " order by " & Tri & " " & Sens & "")
  Else
    rResult = Utils.db.Exec("SELECT * FROM " & Tab3 & " order by abs(lpad(" & Tri & ", 12, ' ')) " & Sens & "")
  Endif
  value.Resize(Total + 1)
  With Liste
    .Clear
    Sens_Aff()
    If rResult.Available Then
      Repeat
        Totl = Totl + rResult!totalht
      Until rResult.MoveNext()
      If Totl <> 0 Then
        rResult.MoveFirst()
        Repeat
          n = n + 1
          value.Resize(n + 1)
          If IsNull(rResult!codeFam) Then
            .Add("Divers", "Divers")
          Else
            .Add(rResult!codeFam, rResult!codeFam)
          Endif
          .Item[0] = String$(5 - Len(Str(n)), "0") & Str(n)
          .Item[1] = rResult!codeFam
          .Item[2] = rResult!designFam
          .Item[3] = Format$(rResult!Brutht, "0.00")
          Totbrut = totbrut + rResult!Brutht
          .Item[4] = Format$(rResult!Remise, "0.00")
          Totrem = totrem + rResult!Remise
          .Item[5] = Format$(rResult!totalht, "0.00")
          Totnet = totnet + rResult!totalht
          .Item[6] = Format$(rResult!qte, "0.000")
          Totqte = totqte + rResult!qte
          .Item[7] = Format$(rResult!totalht / Totl * 100, "0.00")
          value[n] = Val(.Item[7])
        Until rResult.MoveNext()
        value.Resize(total + 1)
        If Total > 40 Then Total = 40
        .Add(" ", " ")
        .Add("  ", "  ")
        .Item[2] = "Total CA des familles"
        .Item[3] = Format$(Totbrut, "0.00")
        .Item[4] = Format$(Totrem, "0.00")
        .Item[5] = Format$(totnet, "0.00")
        .Item[6] = Format$(Totqte, "0.000")
        Draw_Chart
      Else
        Message.Info("Aucune donnée à traiter !")
      Endif
    Endif
  End With

End

Public Sub Sens_Aff()

  If sens = "asc" Then
    sens = "desc"
  Else
    Sens = "asc"
  Endif

End

Public Sub Bcode_Click()

  Tri = "codeFam"
  Affichage()

End

Public Sub Bnom_Click()

  Tri = "designFam"
  Affichage()

End

Public Sub Bbrut_Click()

  Tri = "Brutht"
  Affichage()

End

Public Sub Brem_Click()

  Tri = "Remise"
  Affichage()

End

Public Sub Bnet_Click()

  Tri = "totalht"
  Affichage()

End

Public Sub Bqte_Click()

  Tri = "qte"
  Affichage()

End

'************************************************************
'*      Gestion de l'histogramme. Routine de Yudi Astira    *
'************************************************************
Public Sub Draw_Chart()

  Dim i As Integer

  Dim skala_1 As Integer
  Dim skala_2 As Integer

  Dim distance_x As Float
  Dim distance_y As Float

  Dim width_draw As Integer
  Dim tot As Integer
  Dim colors As Integer[]
  Dim bottom As Integer
  Dim sumdata As Integer

  colors = New Integer[]
  colors.Resize(total + 1)

  For i = 1 To total
    sumdata = sumdata + value[i]
  Next

  If sumdata = 0 Then sumdata = 1

  For i = 1 To total
    value[i] = (value[i] / sumdata) * 10
  Next

  drwchart.Clear

  draw.Begin(drwchart)

  skala_1 = drwchart.ClientH / 11
  distance_y = drwchart.ClientH - skala_1
  bottom = distance_y + 8
  For i = 0 To 100 Step 10
    draw.Foreground = color.black
    draw.Text(i, 0, distance_y)
    draw.Line(20, distance_y + 8, drwchart.ClientWidth, distance_y + 8)
    distance_y = distance_y - skala_1
  Next

  'draw.Line(30, 0, 30, drwchart.ClientH)
  Wait 0.01
  skala_2 = (drwchart.ClientW - 30) / Total
  distance_x = skala_2 + 30
  width_draw = skala_2 / 2

  For i = 1 To Total
    draw.LineWidth = 1
    draw.Foreground = color.Black
    draw.Text(i, distance_x - (width_draw / 2) - 4, drwchart.ClientH - 14)
    draw.Line(distance_x - (width_draw / 2), 0, distance_x - (width_draw / 2), drwchart.ClientH - skala_1 + 8)
    draw.LineWidth = width_draw
    draw.Foreground = color.RGB(i * 100, i * 10, i * 50)
    colors[i] = draw.Foreground
    If value[i] <> 0 Then
      tot = skala_1 * value[i] - 30
      draw.Line(distance_x - (width_draw / 2), bottom, distance_x - (width_draw / 2), bottom - skala_1 - tot)
    Endif
    distance_x = distance_x + skala_2
  Next

  DRAW.End

End

Public Sub Button2_Click()

  Dim p As Integer
  Dim code As String
  Dim intitule As String
  Dim Pvht As String
  Dim Rm As String
  Dim Net As String
  Dim qte As String
  Dim Ratio As String
  Dim PvhtT As Float
  Dim RmT As Float
  Dim NetT As Float
  Dim qteT As Float
  Dim pdf As Chistoriques

  p = 1
  PvhtT = 0
  RmT = 0
  NetT = 0
  qteT = 0
  posx = 2
  Shell "cd " & User.Home & ""
  Filename = User.Home & "/tmp/HistoArt.pdf"
  Me.Mouse = Mouse.Wait
  If Liste.Count Then
    pdf = New Chistoriques("Portrait", "mm", "A4")
    pdf.Open()
    pdf.AliasNbPages()
    pdf.Entete("Impression des statistiques famille")
    pdf.Level0F(dtn0, dtn1)
    pdf.Level1F()
    posy = 32
    Liste.MoveFirst
    Repeat
      Liste.Item.Selected = True
      If Liste.Current[0] <> " " Then
        If Liste.Current[0] <> "  " Then
          code = Liste.Current[1]
          intitule = Liste.Current[2]
          Pvht = Liste.Current[3]
          Rm = Liste.Current[4]
          Net = Liste.Current[5]
          qte = Liste.Current[6]
          Ratio = Liste.Current[7]
          PvhtT = PvhtT + Val(Pvht)
          RmT = RmT + Val(Rm)
          NetT = NetT + Val(Net)
          pdf.level2F(code, intitule, pvht, rm, net, qte, ratio, posY)
          posy += 5
          If PosY >= 283 Then
            pdf.Footer()
            pdf.Entete("Impression des statistiques famille")
            pdf.Level0F(dtn0, dtn1)
            pdf.Level1F()
            posy = 32
          Endif
        Endif
      Endif
    Until Liste.MoveNext()
    pdf.Lines(PosY)
    posy += 5
    pdf.Level4F(PosY)
    posy += 8
    pdf.level5F(Format$(pvhtt, "0.00") & " ", Format$(rmt, "0.00") & " ", Format$(nett, "0.00") & " ", PosY)
    pdf.Footer()
    pdf.Output(Filename, False)
    Visualiseur.Prog(Filename)
  Endif
  Me.Mouse = Mouse.Pointing

End

Public Sub Button1_Click()

  If Exist(filename) Then Try Kill filename
  Me.close

End
