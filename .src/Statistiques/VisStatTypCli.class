' Gambas class file

'
' Gambas class file
'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publiés par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'----------------------------------------------------------------------------
'################################################
'# nom du fichier           : VisStatTypCli.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 20/11/2008
'# Chiffre d'affaire par type client
'################################################

Public total As Integer
Public value As Float[]
Public Dtn0 As String
Public Dtn1 As String
Public Tri As String
Public sens As String
CoulZns As Integer ' Variable pour la couleur du background des zones de saisie et des columnviews
CoulZnaf As Integer ' Variable pour la couleur du background des columnviews
CoulFc As Integer ' Variable pour la couleur du focus
PosY As Integer
Filename As String
son As Integer = Start.Son
Coulfond As New String[]

Public Sub _New(Hitniv As StatTypCli, Soc As String, Sn As Integer, dte1 As String, dte2 As String)

  Dim Tab As String
  Dim Frmt As New String[]

  Utils.Observers(Me)
  Frmt = Utils.FColr(Start.LocalSettings["/Coul/Znaff"])
  CoulZnaf = Val(Frmt[0])
  Frmt = Utils.FColr(Start.LocalSettings["/Coul/Focus"])
  Coulfc = Val(Frmt[0])
  Frmt = Utils.FColr(Start.LocalSettings["/Coul/Znss"])
  CoulZns = Val(Frmt[0])
  Frmt = Utils.FColr(Start.LocalSettings["/Coul/Fnets"])
  Coulfond = Utils.Coulfd()
  Tab = "Total"
  son = Sn
  Dtn0 = dte1
  Dtn1 = dte2
  Me.center
  With Liste
    .Columns.count = 7
    .Columns[0].Width = 80
    .Columns[1].Width = 250
    .Columns[2].Width = 120
    .Columns[3].Width = 120
    .Columns[4].Width = 120
    .Columns[5].Width = 120
    .Columns[6].Width = 120
    .Columns[0].Text = "Code"
    .Columns[0].Alignment = 1
    .Columns[1].Text = "Intitulé"
    .Columns[1].Alignment = 1
    .Columns[2].Text = "Brut ht"
    .Columns[2].Alignment = 3
    .Columns[3].Text = "remise"
    .Columns[3].Alignment = 3
    .Columns[4].Text = "Net ht"
    .Columns[4].Alignment = 3
    .Columns[5].Text = "Net N-1"
    .Columns[5].Alignment = 3
    .Columns[6].Text = "% N/N-1"
    .Columns[6].Alignment = 3
    Tri = "cdtypclifac"
    Sens = "desc"
    Affichage()
  End With

End

Public Sub Affichage()

  Dim Tab As String
  Dim rResult As Result
  Dim Totl As Float
  Dim Pvht As Float
  Dim Rm As Float
  Dim Net As Float
  Dim htn1 As Float

  Tab = "Total"
  With Liste
    .clear
    Sens_Aff()
    If Bnom.value = True Then
      rResult = Utils.db.Exec("SELECT * FROM " & Tab & " order by " & Tri & " " & Sens & "")
    Else
      rResult = Utils.db.Exec("SELECT * FROM " & Tab & " order by lpad(" & Tri & ", 12, ' ') " & Sens & "")
    Endif
    If rResult.Available Then
      Repeat
        Totl = Totl + rResult!totfac
      Until rResult.MoveNext()
      rResult.MoveFirst()
      Repeat
        .Add(rResult!cdtypclifac, rResult!cdtypclifac)
        .Item[0] = rResult!cdtypclifac
        .Item[1] = rResult!nmtypclifac
        .Item[2] = Format$(rResult!brutfac, "0.00")
        .Item[3] = Format$(rResult!rmfac, "0.00")
        .Item[4] = Format$(rResult!totfac, "0.00")
        Try .Item[5] = Format$(rResult!totfacn1, "0.00 ")
        If Not IsNull(rResult!totfacn1) Then
          If Val(Utils.cpoint(rResult!totfacn1)) > 0 Then .Item[6] = Format$(((rResult!totfac - rResult!totfacn1) * 100) / rResult!totfacn1, "00.00")
        Endif
        Pvht = Pvht + rResult!brutfac
        Rm = rm + rResult!rmfac
        Net = net + rResult!totfac
        Try htn1 = htn1 + rResult!totfacn1
      Until rResult.MoveNext()
      Brutht.Text = Format$(Pvht, "0.00")
      Remises.Text = Format$(Rm, "0.00")
      NetHT.Text = Format$(Net, "0.00")
      Netnn.Text = Format$(htn1, "0.00")
      Try Netnn2.Text = Format$(((net - htn1) * 100) / htn1, "00.00")
    Endif
  End With

End

Public Sub Sens_Aff()

  If sens = "asc" Then
    sens = "desc"
  Else
    Sens = "asc"
  Endif

End

Public Sub Bcode_Click()

  Tri = "cdtypclifac"

  Affichage()

End

Public Sub Bnom_Click()

  Tri = "nmtypclifac"
  Affichage()

End

Public Sub Bbrut_Click()

  Tri = "brutfac"
  Affichage()

End

Public Sub Brem_Click()

  Tri = "rmfac"
  Affichage()

End

Public Sub Bnet_Click()

  Tri = "totfac"
  Affichage()

End

Public Sub Bnet2_Click()

  Tri = "totfacn1"
  Affichage()

End

Public Sub Button2_Click()

  Dim p As Integer
  Dim code As String
  Dim intitule As String
  Dim Pvht As String
  Dim Pvhtt As Float
  Dim Rm As String
  Dim rmt As Float
  Dim Net As String
  Dim nett As Float
  Dim htn1 As String
  Dim nn1 As String
  Dim Totn1 As Float
  Dim Totnn1 As Float
  Dim pdf As Chistoriques

  rmt = 0
  NetT = 0
  Totn1 = 0
  totnn1 = 0
  Shell "cd " & User.Home & ""
  Filename = User.Home & "/tmp/StatTypcli.ps"
  Me.Mouse = Mouse.Wait
  If Liste.Count Then
    pdf = New Chistoriques("Portrait", "mm", "A4")
    pdf.Open()
    pdf.AliasNbPages()
    pdf.Entete("Impression du CA par type client")
    pdf.Level0F(dtn0, dtn1)
    pdf.Level1C()
    posy = 32
    Liste.MoveFirst
    Repeat
      Liste.Item.Selected = True
      code = Liste.Current[0]
      intitule = Liste.Current[1]
      Pvht = Liste.Current[2]
      Rm = Liste.Current[3]
      Net = Liste.Current[4]
      htn1 = Liste.Current[5]
      If IsNull(htn1) Then htn1 = "0"
      nn1 = Liste.Current[6]
      Totn1 = Totn1 + Val(htn1)
      If IsNull(nn1) Or If IsNull(Val(nn1)) Then nn1 = "0"
      Totnn1 = Totnn1 + Val(nn1)
      Pvhtt = Pvhtt + Val(Pvht)
      rmt = rmt + Val(Rm)
      NetT = NetT + Val(Net)
      pdf.level2C(code, intitule, pvht, rm, net, htn1, nn1, PosY)
      posy += 5
      If p >= 40 Then
        pdf.Entete("Impression du CA par type client")
        pdf.Level0F(dtn0, dtn1)
        pdf.Level1C()
        posy = 32
      Endif
    Until Liste.MoveNext()
    pdf.Lines(PosY)
    posy += 5
    pdf.Level4C(PosY)
    posy += 8
    pdf.Level5c(Format$(pvhtt, "0.00"), Format$(rmt, "0.00"), Format$(nett, "0.00"), Format$(Totn1, "0.00"), Totnn1, PosY)
    pdf.Footer()
    pdf.Output(Filename, False)
    Visualiseur.Prog(Filename)
  Endif
  Me.Mouse = Mouse.Pointing

End


Public Sub Button1_Click()

  If Exist(filename) Then Try Kill filename
  Me.close

End
