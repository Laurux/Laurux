' Gambas module file

Private dte1 As Date
Private dte2 As String
Private dte3 As String

'******************
'*   On calcule   *
'******************

Public Sub Calc_stock(Art As String, art2 As String)

  Dim ArtResult As Result
  Dim res As Result
  Dim MvtexpResult As Result
  Dim qte_art As Float = 0
  Dim com_art As Float
  Dim Tab3 As String = "Fiches_HisInvT"
  Dim dte3 As String

  ' On initialise nos données

  qte_art = 0
  date_ex()
  ' On commence le travail
  With Utils
    ' On selectionne les articles stockés
    If Calcstock.Cbx.Value Then
      ArtResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabArt") & "  where art_code = &1 and art_stocke = &2", Art, 1)
    Else
      If Calcstock.Cbx2.Value Then
        ArtResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabArt") & "  where art_casier >= &1 and art_casier <= &2 and art_stocke = &3", Art, Art2, 1)
      Else
        If IsNull(Art) Then
          ArtResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabArt") & "  where art_stocke = &1 order by CAST(art_code AS char)", 1)
        Endif
      Endif
    Endif
    If ArtResult.Available Then
      Utils.db.Exec("LOCK TABLES " & Cbase.Table("TabArt") & " WRITE, " & Cbase.Table("TabBl") & " WRITE, " & Cbase.Table("TabLigbl") & " WRITE, " & Cbase.Table("TabBlM") & " Write, " & Cbase.Table("TabLigblM") & " WRITE, " & Cbase.Table("TabHisFac") & " WRITE, " & Cbase.Table("TabHisLigFac") & " WRITE, " & Cbase.Table("TabHisFacm") & " WRITE, " & Cbase.Table("TabHisLigFacm") & " WRITE, " & Cbase.Table("TabMvtexp") & " WRITE, " & Cbase.Table("TabEntrecpt") & " WRITE, " & Cbase.Table("TabLigrecpt") & " WRITE, " & Cbase.Table("TabHEntTck") & "  WRITE, " & Cbase.Table("TabHLigTck") & "  WRITE, " & Cbase.Table("TabSdepots") & " WRITE, " & tab3 & " write, Fiches_Mvtexpdc WRITE ")
      Repeat
        'On initialise la quantité avec le stock de départ
        If qte_art = 0 Then Try qte_art = ArtResult!art_stkdep
        If Error Then qte_Art = 0
        ' On regarde si inventaire tournant
        MvtexpResult = Utils.db.Exec("SELECT * FROM  Fiches_HisInvT WHERE inv_code = &1 and inv_date >= &2 order by inv_date desc", ArtResult!art_code, dte2)
        If MvtexpResult.Available Then
          dte2 = Format(MvtexpResult!inv_date, "yyyymmdd")
          qte_art = MvtexpResult!inv_qtestock
        Else
          dte2 = Format(dte1, "yyyymmdd")
        Endif
        ' Puis on sélectionne tous les BL et les factures
        res = Utils.db.Exec( 
        "SELECT" &
            " <s qte_ligbl * -1 as qte" &
          " FROM" &
            " Fiches_Ligbl JOIN Fiches_Bl ON num_ligbl = numbl" &
          " WHERE" &
            " datebl >= &1 And (type = 'B' OR type = 'F') AND code_ligbl=&2 AND typel_ligbl = 'A'" &
        " UNION(SELECT" &
            " <s qte_ligbl * -1 as qte" &
          " FROM" &
            " Fiches_LigblM JOIN Fiches_BlM ON num_ligbl=numbl" &
          " WHERE" &
            " datebl >= &1 and (type = 'B' OR type = 'F') AND code_ligbl=&2 AND typel_ligbl = 'A')" &
        " UNION(SELECT" &
            " <s qte_ligfac * -1 as qte" &
          " FROM" &
            " Fiches_HistoFac JOIN Fiches_HistoLigfac ON num_ligfac=numfac" &
          " WHERE" &
            " datefac >= &1 AND code_ligfac=&2 AND typel_ligfac = 'A')" &
        " UNION(SELECT" &
            " <s qte_ligfac * -1 as qte" &
          " FROM" &
            " Fiches_HistoFacM JOIN Fiches_HistoLigfacM ON num_ligfac=numfac" &
          " WHERE" &
            " datefac >= &1 AND code_ligfac=&2 AND typel_ligfac = 'A')" &  
        " UNION(SELECT" &
            " <s qte * &3 as qte" &
          " FROM" &
            " Fiches_Ligrecpt" &
          " WHERE" &
            " daterecpt>= &1 AND code=&2)" &
        " UNION(SELECT" &
            " SUM(<n qtep - <n qtem ) as qte" &
          " FROM" &
            " Fiches_Mvtexp" &
          " WHERE" &
            " daterecpt>=&1 AND code=&2)" &
        " UNION(SELECT" &
            " SUM(<n qtep  - <n qtem ) as qte" &
          " FROM" &
            " Fiches_Mvtexpdc WHERE daterecpt>=&1 AND code=&2)" & 
        " UNION(SELECT" &
            " SUM(CASE WHEN type='S' THEN <n qte * -1 ELSE <n qte END) AS qte" &
          " FROM" &
            " Fiches_Sdepots" &
          " WHERE" &
            " code='01' AND date >= &1 AND cart=&2)", dte2, ArtResult!art_code, ArtResult!art_txconv)
        If res.Available Then
          res.MoveFirst
          Repeat
            If Not IsNull(res!qte) Then qte_art += res!qte
          Until res.MoveNext()
        Endif

        ' On refait la meme chose avec les historiques de caisse
'        dte3 = Left$(dte2, 4) & "-" & Mid$(dte2, 5, 2) & "-" & Right$(dte2, 2)
'        HistResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabHEntTck") & " WHERE left(date,10) >= &1", dte3)
'        If HistResult.Available Then
'          Repeat
'            LigHistResult = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabHLigTck") & " WHERE numero = &1 and code = &2 and type = &3", HistResult!numero, ArtResult!art_code, "A")
'            If LigHistResult.Available Then
 '             Repeat
  '              qtecaisse = qtecaisse + Val(LigHistresult!qte)
   '           Until LigHistResult.MoveNext()
'            Endif
 '         Until HistResult.MoveNext()
  '      Endif
        ' Idem avec les mouvements de stock exceptionnels
 
        ' On met à jour la base
'        qte_art += qteachat - qtebl - qteblm - qtefac - qtefacm - qtecaisse - qtedepot - qtemvt
        Utils.db.Exec("UPdate  " & Cbase.Table("TabArt") & "  SET  art_qte = &2 where art_code = &1", ArtResult!art_code, qte_art)
        qte_Art = 0

        ' Et on passe à l'article suivant
      Until ArtResult.MoveNext()
      Utils.db.Exec("UNLOCK TABLES")
    Endif
  End With

End

'*******************************************
'* On récupère la date de début d'exercice *
'*******************************************
Public Sub date_ex()

  Dim rResult As Result
  Dim Tab As String

  Tab = "Fiches_Parametres"
  rResult = Utils.db.Exec("SELECT * FROM " & Tab & "")
  dte1 = rResult!dteinv
  If IsNull(dte1) Then dte1 = rResult!dteclec1
  dte2 = Format$(dte1, "yyyymmdd")
Catch
  message.Error(Error.Text & " " & Error.where)

End


