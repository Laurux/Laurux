' Gambas class file

Inherits ButtonBox
Export
Create Static
'variables publics
Public dte As New LDate
'variables privées
Private $value As Float
Private $text As String
Private $textesc As String
Private $nbdec As String
Private $reg As String
Private $regp As Boolean = False
Private $numerique As Boolean = False
Private $date As Boolean = False
Private $regex As New RegExp
'constantes prédéfinies
Public Const num As String = "-?[0-9]*[,.]?[0-9]*"       'saisie d'un numérique avec ,
Public Const chaine As String = "[^%^_]*"                 'saisie d'une chaine en excluant les caractéres spéciaux de recherche BD (a compléter et vérifier)
Public Const mail As String = "[a-zA-Z0-9_.+-]+@?[a-zA-Z0-9.-]*"     'saisie d'une adresse mail peut certainement s'améliorer
Public Const dts As String = "[0-9]{1,2}[./-]?[0-9]{0,2}[./-]?[0-9]{0,4}"
' a compléter si autre idées par ex : saisie des comptes client ...
'comme les paterns sont parfois un peu difficiles à trouver et à mettre au point il serait peut être bien de les mettres en constantes ?
' il ne faut pas mettre de caractéres obligatoires dans les paterns par ex dans mail @{1} ne fonctionne pas.
'propriétés
Property Value As Float
Property numerique As Boolean
Property Dat As Boolean
Property nbdec As String
Property reg As String
Property MaxLenght As Integer
Property Text As String



Public Sub _new()

  Dim obs As Observer
  
  obs = New Observer(Me) As "butb"
  Me.Picture = Picture["icon:/16/clear"]
  $reg = chaine
  $regex.Compile($reg)
  $textesc = Me.Editor.Text

End

'gestion des évenements
Public Sub butb_click()

  If Me.Enabled = False Or Me.ReadOnly Then Return
  $value = 0
  Me.Clear

End

Public Sub butb_keypress()

  Select Case Key.Code
    Case Key.Esc
      $text = $textesc
      Me.Editor.Text = $textesc
    
    Case Key.F2
      If $date And Me.Enabled Or Not Me.ReadOnly Then
        Me.Editor.Text = LDateC.Select(dte).L
        $text = Me.Editor.Text
      Endif
      
  End Select

End

Public Sub butb_DblClick()
  
  If $date And Me.Enabled Or Not Me.ReadOnly Then
    Me.Editor.Text = LDateC.Select(dte).L
    $text = Me.Editor.Text
  Endif
  
End

Public Sub butb_change()

  Dim x As Integer
  
  If IsNull(Me.Editor.Text) Then
    $text = ""
    $value = 0
    Return
  Endif
  Try $regex.Exec(Me.Editor.Text)
  If Error Then 
    Me.Editor.Text = $text
    Return
  Endif
  x = Me.Pos
  Me.Editor.Text = $regex.Text
  If Me.Editor.Text Match "." And $numerique Then Me.Editor.Text = Replace(Me.Editor.Text, ".", ",")
  Me.pos = x
  $text = Me.Editor.Text
  
End

Public Sub butb_gotfocus()

  If $numerique And $value <> 0 Then
    Me.Editor.Text = Str($value)
  Endif
  $text = Me.Editor.Text
  $textesc = Me.Editor.Text

End

Public Sub butb_lostfocus()

  If $numerique Then
    If IsNull(Me.Editor.Text) Or Val($text) = Null Then
      $text = "0"
      Me.Editor.Text = "0"
      $textesc = "0"
      $value = 0
    Else
      $value = Val($text)
      If Not IsNull($nbdec) Then
        $text = Format($value, frm())
        Me.Editor.Text = $text
        $textesc = $text
      Endif
    Endif
  Endif
  If $date Then
    If Not IsNull(Me.Editor.Text) Then
      dte.L = Me.Editor.Text
      Me.Editor.Text = dte.L
      $text = dte.L
      $textesc = dte.L
    Endif
  Endif

End

Private Function frm() As String
  
  Dim i As Integer
  Dim ch As String
  
  If Val($nbdec) = 0 Then Return "0"
  ch = "0."
  For i = 1 To Val($nbdec)
    ch &= "0"
  Next
  Return ch
End

Private Function Value_Read() As Float

  If $numerique Then
    Return $value
  Else
    Return 0
  Endif

End
'proprietés
Private Sub Value_Write(Value As Float)

  If $numerique Then
    If IsNull(value) Then $value = 0 Else $value = Value
    If IsNull($nbdec) Then $text = Str($value) Else $text = Format($value, frm())
    Me.Editor.Text = $text
  Endif

End

Private Function Text_Read() As String

  Return Me.Editor.Text

End

Private Sub Text_Write(Value As String)

  If $numerique Then
    If IsNumber(value) Then
      $value = Val(value)
    Else
      $value = 0
    Endif
    If Not IsNull($nbdec) Then $text = Format($value, frm()) Else $text = value
    Me.Editor.Text = $text
    Return
  Endif
  If $date Then
    $text = LDate(value).L
    Me.Editor.Text = $text
    $value = 0
    Return
  Endif
  
  Me.Editor.Text = value
  
End

Private Function numerique_Read() As Boolean

  Return $numerique

End

Private Sub numerique_Write(Value As Boolean)

  If $numerique <> Value And Not $regp Then
    If value Then $reg = num Else $reg = chaine
    $regex.Compile($reg)
  Endif
  $numerique = value
  If $numerique Then $date = False
  If $numerique And Val($text) <> Null Then
    $value = Val($text)
    Me.Editor.Text = $text
  Endif

End

Private Function Dat_Read() As Boolean

  Return $date

End

Private Sub Dat_Write(Value As Boolean)

  If $numerique And value Then $value = 0
  If value Then $numerique = False
  If $date <> value And Not $regp Then
    If value Then $reg = dts Else $reg = chaine
    $regex.Compile($reg)
  Endif
  If $date And $text Then 
    dte.L = $text
    Me.Editor.Text = dte.L
    $text = dte.L
  Endif
  $date = value
  
End

Private Function nbdec_Read() As String

  Return $nbdec

End

Private Sub nbdec_Write(Value As String)

  $nbdec = value
  If $numerique And Val($text) <> Null Then
    $value = Val($text)
    If IsNull($nbdec) Then $text = Str($value) Else $text = Format($value, frm())
    Me.Editor.Text = $text
  Endif

End


Private Function reg_Read() As String

  Return $reg

End

Private Sub reg_Write(Value As String)

  $reg = value
  $regp = True
  $regex.Compile($reg)

End

Private Function MaxLenght_Read() As Integer

  Return Me.Editor.Value

End

Private Sub MaxLenght_Write(Value As Integer)

  Me.Editor.MaxLength = value

End

'fonctions publics
Public Sub Select(Optional start As Integer, length As Integer)
  
  If Start = 0 And length = 0 Then
    Me.Editor.SelectAll
    Return
  Endif
  
  Me.Editor.Select(start, length)
  
End

Public Sub Unselect()

  Me.Editor.Unselect

End
