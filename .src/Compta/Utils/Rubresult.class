' Gambas class file

'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publiés par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'----------------------------------------------------------------------------
'################################################
'# nom du fichier           : Rubresult.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 20/09/2006
'# Gestion des rubriques des comptes de resultat, SIG et Bilan
'################################################
'

Private son As Integer = Start.Son

Public Sub _New()

  Utils.Observers(Me)
  Me.Center

  Music.Load(Start.Musique)
  Colcol.Columns.count = 5
  Colcol.Columns[0].Width = 60
  Colcol.Columns[1].Alignment = Align.TopLeft
  Colcol.Columns[1].Width = 500
  Colcol.Columns[2].Width = 50
  Colcol.Columns[3].Width = 50
  Colcol.Columns[2].Alignment = Align.Center
  Colcol.Columns[3].Alignment = Align.Center
  Colcol.Columns[0].Text = "code"
  Colcol.Columns[1].Text = "Intitulé"
  Colcol.Columns[2].Text = "type"
  Colcol.Columns[3].Text = "Détail"
  Colcol.Columns[4].Text = "P"
  numrub.SetFocus
  numrub.Select

End

Public Sub Form_Open()

  Dim rResult As Result
  Dim Tab As String
  
  Colcol.Visible = True
  BcrSelect.Visible = False

  Tab = "Fiches_Rubriques"
  rResult = Utils.db.Exec("SELECT * FROM " & Tab & " order by numrub")
  If rResult.Available Then
    Repeat
      Colcol.add(rResult!numrub, rResult!numrub)
      Colcol.Item[1] = rResult!intitule
      Colcol.Item[2] = rResult!type
      Colcol.Item[3] = rResult!detail
      Colcol.Item[4] = rResult!num
    Until rResult.MoveNext()
  Endif
Catch
  message.Error(Error.Text & " " & Error.where)

End

Public Sub colcol_Click()

  numrub.text = Colcol.Current[0]
  intitule.text = Colcol.Current[1]
  typeL.Text = Colcol.Current[2]
  Det.Text = Colcol.Current[3]
  Prod.Text = Colcol.Current[4]
  numrub.SetFocus
  numrub.Select
  'If Left$(numrub.Text, 1) = "S" Then
  'Prod.Enabled = True
  'Else
  'Prod.Enabled = False
  'endif

End

Public Sub CleanChamps()

  numrub.Clear
  intitule.Clear
  typeL.clear
  Det.Clear

End

Public Sub Refresh()

  Colcol.Clear
  form_Open()

End

Public Sub Lib_KeyPress()

  If Key.code = Key.enter Or Key.code = Key.return Or Key.code = Key.Tab Then
    Select Case Last.tag

      Case 1
        If numrub.Text Then
          Rubman()
          intitule.SetFocus
          intitule.Select
          Stop Event
        Else
          intitule.Text = Utils.Remplace(intitule.Text)
          numrub.SetFocus
          numrub.Select
        Endif
      Case 2
        typeL.SetFocus
        typeL.Select
        Stop Event
      Case 3
        Det.SetFocus
        Det.Select
        Stop Event
      Case 4
        Button2.SetFocus
        Stop Event

    End Select
  Endif

  If key.code = key.F1 Then
    Button4_Click()
    Stop Event
  Endif

End

Public Sub Btn_KeyPress()

  Select Case Last.tag

    Case 3
      Button2_Click()

  End Select

End

Public Sub Btn_Click()

  Select Case Last.tag

    Case 1
      Button4_Click()

    Case 2
      Button1_Click()

    Case 3
      Button2_Click()

    Case 4
      Me.Close

    Case 5
      If Message.Question("Importer le paramétrage va écraser l'ancien. OK ?", "Oui", "Non") = 1 Then
        Button5_Click()
      Endif
  End Select

End

'****************************************************
'*      Gestion du focus. Routine de Charlie Reinl  *
'****************************************************
Public Sub Lib_GotFocus()

  With Utils
    .SetEditColor(Me, Last)
  End With

End

Public Sub Button1_Click()

  Dim Tab As String

  Tab = "Fiches_Rubriques"
  If numrub.Text <> "" Then
    If son Then
      Music.Play
    Endif
    If Message.Question("Etes vous sur de vouloir effacer cet enregistrement", "Oui", "Non") = 1 Then
      Utils.db.Exec("DELETE FROM " & Tab & " WHERE numrub =&1", colcol.Current[0])
      Refresh()
      CleanChamps()
    Endif
  Endif

End

Public Sub Button2_Click()

  Dim rResult As Result
  Dim Tab As String
  Dim sKey As String

  Tab = "Fiches_Rubriques"
  If numrub.Text <> "" Then
    intitule.Text = Utils.Remplace(intitule.Text)
    rResult = Utils.db.Exec("SELECT * FROM " & Tab & " WHERE numrub= &1", numrub.Text)
    If Not rResult.Available Then
      Utils.db.Exec("INSERT INTO " & Tab & "(numrub,intitule, type, detail, num) VALUES ( &1, &2, &3, &4, &5)", numrub.Text, intitule.Text, UCase$(typeL.Text), UCase$(Det.Text), UCase$(Prod.Text))
      sKey = Numrub.Text
    Else
      Utils.db.Exec("UPdate  " & Tab & "  SET  numrub = &1, intitule = &2, type = &3, detail = &4, num = &5 WHERE numrub = &1", numrub.Text, intitule.Text, UCase$(typeL.Text), UCase$(Det.Text), UCase$(Prod.Text))
      sKey = Colcol.Current.Key
    Endif
    Refresh()
    Cleanchamps()
    Colcol.MoveTo(sKey)
    Colcol.Item.Selected = True
    Colcol.Item.EnsureVisible
  Else
    If son Then
      Music.Play
    Endif
    Message.Warning("Veuillez saisir un code SVP !", "Ok")
  Endif
  numrub.SetFocus
  numrub.Select

End

Public Sub Button3_Click()

  Me.Close()

End

'********************************************
'* On controle si la rubrique existe        *
'********************************************
Public Sub Rubman()

  Dim Rubs As Result
  Dim tab As String

  Tab = "Fiches_Rubriques"
  If numrub.Text Then
    Rubs = Utils.db.Exec("SELECT * FROM " & Tab & " where numrub = &1", numrub.Text)
    If Rubs.Available Then
      numrub.Text = Rubs!numrub
      intitule.text = Rubs!intitule
      typeL.Text = Rubs!type
      Det.Text = Rubs!detail
    Endif
  Endif

End

'********************************************
'* On importe les données du fichier texte  *
'********************************************
Public Sub Button5_Click()

  BcrSelect.Visible = True
  Colcol.Visible = False
  BcrSelect.Raise()

End

Public Sub BcrSelect_Activate()

  Dim hfil As File
  Dim Lig As String
  Dim sKey As String
  Dim iPos As Integer
  Dim x As Integer
  Dim rResult As Result
  Dim Tab As String
  Dim type As String
  Dim detail As String
  Dim num, numrub2, intitule2 As String
  Dim Compt1, Compt2 As String
  Dim Amort As Boolean
  Dim Path As String
  
  BcrSelect.Hide()
  BcrSelect.Visible = False
  Colcol.Visible = True
  Path = BcrSelect.SelectedPath
  
  If Not Exist(Path & "/Bcr.txt") Or Not Exist(Path & "/Bcr.txt") Then
    Message.Error("Impossible de Trouver les fichiers Bcr.txt et/ou Bcrcpt.txt!\nVérifier le répertoire selectionné: " & Path)
    Return
  Endif

  Tab = "Fiches_Rubriques"
  Utils.db.Exec("Truncate " & Tab & "")
  Utils.db.Exec("DROP TABLE IF EXISTS  " & Tab & "")
  Utils.db.EXEC("CREATE TABLE " & Tab &
    "(numrub Char(8) NOT NULL," &
    "intitule VARCHAR(70)," &
    "type Char(2)," &
    "detail Char(2)," &
    "num Char(2)," &
    "PRIMARY KEY (numrub))" & Utils.db.Engine())
  HFil = Open Path & "/Bcr.txt" For Read
  Me.Mouse = Mouse.Wait
  While Not Eof(hFil)
    Line Input #hFil, Lig
    For x = 1 To 5
      iPos = InStr(Lig, ";")
      sKey = Left$(Lig, iPos - 1)
      Lig = Mid$(Lig, iPos + 1)
      Select Case x
        Case 1
          numrub2 = skey
        Case 2
          intitule2 = skey
        Case 3
          type = skey
        Case 4
          detail = skey
        Case 5
          num = skey
      End Select
    Next
    rResult = Utils.db.Exec("SELECT * FROM " & Tab & " WHERE numrub= &1", numrub2)
    If Not rResult.Available Then
      Utils.db.Exec("INSERT INTO " & Tab & "(numrub,intitule, type, detail, num) VALUES ( &1, &2, &3, &4, &5)", numrub2, intitule2, type, detail, num)
    Else
      Utils.db.Exec("UPdate  " & Tab & "  SET  numrub = &1, intitule = &2, type = &3, detail = &4, num = &5 WHERE numrub = &1", numrub2, intitule2, type, detail, num)
    Endif
  Wend
  Close #HFil
  Tab = "Fiches_RubCompt"
  Utils.db.Exec("Truncate " & Tab & "")
  Utils.db.Exec("DROP TABLE IF EXISTS  " & Tab & "")
  Utils.db.EXEC("CREATE TABLE " & Tab &
    "(numrub Char(8) NOT NULL," &
    "compte1 Char(8) NOT NULL," &
    "compte2 Char(8)," &
    "amortissement TINYINT(1)," &
    "PRIMARY KEY (numrub, compte1))" & Utils.db.Engine())
  HFil = Open Path & "/Bcrcpt.txt" For Read
  While Not Eof(hFil)
    Line Input #hFil, Lig
    For x = 1 To 4
      iPos = InStr(Lig, ";")
      sKey = Left$(Lig, iPos - 1)
      Lig = Mid$(Lig, iPos + 1)
      Select Case x
        Case 1
          numrub2 = skey
        Case 2
          Compt1 = skey
        Case 3
          Compt2 = skey
        Case 4
          Amort = skey
      End Select
    Next
    rResult = Utils.db.Exec("SELECT * FROM " & Tab & " WHERE numrub= &1 and compte1 = &2", numrub2, Compt1)
    If Not rResult.Available Then
      Utils.db.Exec("INSERT INTO " & Tab & " (numrub,compte1, compte2, amortissement) VALUES ( &1, &2, &3, &4)", numrub2, Compt1, Compt2, Amort)
    Else
      Utils.db.Exec("UPdate  " & Tab & "  SET  numrub = &1, compte1 = &2, compte2 = &3, amortissement = &4 WHERE numrub = &1 and compte1 = &2", numrub2, Compt1, Compt2, Amort)
    Endif
  Wend
  Close #Hfil
  Colcol.Clear
  Form_Open()
  Me.Mouse = Mouse.Default
  If son Then
    Music.Play
  Endif
  Message.Info("Importation terminée.", "Ok")

End

'*******************
'* On imprime      *
'*******************
Public Sub Button4_Click()

  Doc.Open("Rubs")

End
