' Gambas class file

'----------------------------------------------------------------------------
'

'
'Ce programme est un logiciel libre; Vous pouvez le redistribuer et/ou
'le modifier selon les termes de la GNU General PUBLIC License publiés par
'la Free Software Foundation.

'Ce programme est distribué sans garantie. Voyez la GNU General PUBLIC
'License pour plus de details.

'Vous devez lire la GNU General PUBLIC Licence.
'Si vous ne disposez pas d'un exemplaire, veuillez écrire
'à " The Free Software Foundation
'INC, 59 Temple place - Suite 33, Boston
'MA 02111-1307 USA
'----------------------------------------------------------------------------
'################################################
'# nom du fichier           : Extrait.class
'# Auteur                   : Jacky Tripoteau
'# date de création         : 01/11/2004
'# Visualisation des extraits de compte
'################################################
'

Private Ncode As Integer
Private TT As Float
Private TD As String
Private TC As String
Private DebHP As Float
Private CredHP As Float
Private TotSldHP As Float
Private DebP As Float
Private CredP As Float
Private TotSldP As Float
Private montantd As Float
Private montantc As Float
Private Mnt As Float
Private Mnt1 As Float
Private dte As New LDate
Private dte1 As New LDate
Private dte2 As New LDate
Private Txt As String
Private Tab0 As String
Private Tab1 As String
Private Tab2 As String
Private type As String
Private rrResult As Result
Private Cresult As Result
Private Compt As String
Private Centr As Boolean
Private jour As New LDate
Private Datj As LDate
Private intitule As String
Private son As Integer = Start.Son
Private b As Integer
Private Cloturee As Integer
Private tresr As Boolean
Private num As Integer
Private Tri As String
Private $Code As String
Private $Intitule As String
Private $type As String
Private $Org As String
Private sJournal As String
Private sNumero As String
Private bTri As Boolean = False
Private sTri As String
Public Bsel As Boolean = False
Public sCmpt As String
Public sDesg As String
Private $lstex As Listextcpt
Private $rpt As Report

'*************************
'* On initialise l'écran *
'*************************
Public Sub _New(scode As String, sintitule As String, stype As String, Org As String)

  Dim WidthCol As String
  Dim s As String
  ' [GB2:ARRD] Dim spl As String[9]
  Dim spl As New String[9]
  Dim ch As Chainage
  Dim obs As Observer
  
  ch = New Chainage([DteN0, dten1, cpt])
  obs = New Observer(dteN0) As "cmpt"
  obs = New Observer(dten1) As "cmpt"
  obs = New Observer(cpt) As "cmpt"

  sTri = "dte asc"
  Try WidthCol = Start.LocalSettings["/Soc" & Start.Societe & "/Col/LcolE"]
  $Code = scode
  $Intitule = sIntitule
  $type = stype
  $Org = Org
  Utils.Observers(Me)
  Music.Load(Start.Musique)
  Me.Center
  Tab0 = "Fiches_Mvt"
  colcli.Columns.count = 11
  If Not IsNull(WidthCol) Then
    WidthCol = Trim(WidthCol)
    If Right(WidthCol, 1) = ";" Then WidthCol = Left(WidthCol, Len(WidthCol) - 1)
    For Each s In Split(LCase(WidthCol), ";")
      spl = Scan(s, "*:*")
      Select Case Trim(spl[0])
        Case "col0"
          Try colcli.Columns[0].Width = spl[1]
        Case "col1"
          Try colcli.Columns[1].Width = Val(spl[1])
        Case "col2"
          Try colcli.Columns[2].Width = spl[1]
        Case "col3"
          Try colcli.Columns[3].Width = spl[1]
        Case "col4"
          Try colcli.Columns[4].Width = spl[1]
        Case "col5"
          Try colcli.Columns[5].Width = spl[1]
        Case "col6"
          Try colcli.Columns[6].Width = spl[1]
        Case "col7"
          Try colcli.Columns[7].Width = spl[1]
        Case "col8"
          Try colcli.Columns[8].Width = spl[1]
        Case "col9"
          Try colcli.Columns[9].Width = spl[1]
      End Select
    Next
  Else
    colcli.Columns[0].Width = 80
    colcli.Columns[1].Width = 90
    colcli.Columns[2].Width = 290
    colcli.Columns[3].Width = 100
    colcli.Columns[4].Width = 100
    colcli.Columns[5].Width = 100
    colcli.Columns[6].Width = 120
    colcli.Columns[7].Width = 70
    colcli.Columns[8].Width = 60
    colcli.Columns[9].Width = 60
  Endif
  colcli.Columns[0].Alignment = 4
  'colcli.Columns[0].Text = "Code"
  '  colcli.Columns[1].Text = ""
  '  colcli.Columns[2].Text = "Libellé"
  ' colcli.Columns[3].Text = "Document"
  colcli.Columns[4].Alignment = 2
  '  colcli.Columns[4].Text = "Débit"
  colcli.Columns[5].Alignment = 2
  'colcli.Columns[5].Text = "Crédit"
  colcli.Columns[6].Alignment = 2
  '  colcli.Columns[6].Text = "Solde"
  colcli.Columns[7].Alignment = 2
  '  colcli.Columns[7].Text = "Numéro"
  colcli.Columns[8].Alignment = 3
  '  colcli.Columns[8].Text = "Journal"
  colcli.Columns[9].Alignment = 3
  '  colcli.Columns[9].Text = "Lettrée"
  Tdate.Width = colcli.Columns[0].Width
  Tdate2.Width = colcli.Columns[1].Width
  Tlibelle.Width = colcli.Columns[2].Width
  Tdoc.Width = colcli.Columns[3].Width
  Tdebit.Width = colcli.Columns[4].Width
  Tcredit.Width = colcli.Columns[5].Width
  Tsolde.Width = colcli.Columns[6].Width
  Tnumero.Width = colcli.Columns[7].Width
  Tjournal.Width = colcli.Columns[8].Width
  Tlettree.Width = colcli.Columns[9].Width
  type = "C"
  compt = "0"
'  jour = Format$(Now, "dd.mm.yyyy")
  Ex1()
  If jour.Apres(dte2, True) Then
'  If Right$(jour, 4) & Mid$(jour, 4, 2) & Left$(jour, 2) > Right$(dteN1.Text, 4) & Mid$(dteN1.Text, 4, 2) & Left$(dteN1.Text, 2) Then
    Ex1()
    dteN0.Text = dteN1.Text
    dteN1.Text = jour.FinMois.l
  Else
    exo()
  Endif
  Clear()
  E0.Value = True
  dteN0.SetFocus
  dteN0.Select
  E0_Click()
  Ncode = 1
  If Org = "S" Then
    Select Case $type
      Case "C"
        Bclient_Click()
        Bclient.value = True
        Cpt.text = $Code
        compteman()
      Case "F"
        Bfournisseur_Click()
        Bfournisseur.Value = True
        Cpt.text = $Code
        compteman()
      Case "G"
        Bgestion_Click()
        Bgestion.Value = True
        Cpt.text = $Code
        compteman()
      Case "B"
        Bbilan_Click()
        Bbilan.Value = True
        Cpt.text = $Code
        compteman()
    End Select
  Endif

End

'*****************************************
'* On travaille avec l'exercice en cours *
'*****************************************
Public Sub Ex1()

  Dim rResult As Result
  Dim Tab As String

  Tab = "Fiches_Parametres"
  Tab2 = "Fiches_Comptes"
  With utils
    rResult = Utils.db.Exec("SELECT * FROM " & Tab & "")
    dte.G = DateAdd(rResult!dteclec, gb.Day, 1) ' On recupere la date de fin d'exercice
    dteN0.Text = dte.L
'    jour = Format$(Now, "dd.mm.yyyy")
'    If Right$(jour, 4) & Mid$(jour, 4, 2) & Left$(jour, 2) < Right$(dteN0.Text, 4) & Mid$(dteN0.Text, 4, 2) & Left$(dteN0.Text, 2) Then
    If jour.Avant(dte, True) Then
      Exo()
    Else
      dteN1.Text = jour.FinMois.L
      Tab = "Fiches_Mvt"
      clear()
      rrResult = Utils.db.Exec("SELECT compte_cc, intitule_cc, cent_cc FROM " & Tab2 & " WHERE type_cc = &1 order by cast(compte_cc AS char)", type)
      If rrResult.Available Then affichage()
      dte1.L = dteN0.Text
      dte2.L = dteN1.Text
    Endif
  End With
  detail.Value = False

End

'***********************************************************
'*     On travaille avec l'excercice en cours de bilan     *
'***********************************************************
Public Sub Exo()

  Dim rResult As Result
  Dim Tab As String

  Tab2 = "Fiches_Comptes"
  Tab = "Fiches_Parametres"
 
    rResult = Utils.db.Exec("SELECT * FROM " & Tab & "")
    dte2.G = rResult!dteclec
    dteN1.Text = dte2.L
    dte1.G = DateAdd(DateAdd(rResult!dteclec, gb.Month, -12), gb.Day, 1)
    dteN0.Text = dte1.L
    Tab = "Fiches_Mvt"
    clear()
    rrResult = Utils.db.Exec("SELECT compte_cc, intitule_cc, cent_cc  FROM " & Tab2 & " WHERE type_cc = &1 order by cast(compte_cc AS char)", type)
    If rrResult.Available Then affichage()
 
  detail.Value = False

End


'***************************************
'* On travaille avec l'excercice N -x  *
'***************************************
Public Sub nmoins_click()

  Dim rResult As Result
  Dim Tab As String

  Tab = "Fiches_Parametres"
    rResult = Utils.db.Exec("SELECT * FROM " & Tab & "")
    dte1.G = DateAdd(DateAdd(rResult[Last.tag], gb.Month, -12), gb.Day, 1)
    dteN0.Text = dte1.L
    dte2.G = rResult[Last.tag]
    dteN1.Text = dte2.L
    clear()
    affichage()
  detail.Value = False

End

Public Sub Button7_Click()

  Dim MyForm As TriComptes

  clear()
  Tri = "cast(compte_cc AS char)"
  MyForm = New TriComptes(Tri, Type, "", "")
  MyForm.Showmodal()
  If Comptabilite.Bsel = True Then
    Cpt.text = Comptabilite.sCmpt
    Nom.Text = Comptabilite.sDesg
    compteman()
  Endif
  Cpt.setfocus

End

'***********************
'* On gere nos touches *
'***********************
Public Sub cmpt_keypress()

  Dim hForm As Lettrage

  If key.code = key.F1 Then
    Button5_Click()
    Stop Event
  Endif

  If key.code = key.F2 Then
    Select Case Last.tag
      Case 3
        Button7_click()
        Stop Event
    End Select
  Endif

  If Key.code = key.F4 Then
    Select Case Last.tag

      Case 3
        hForm = New Lettrage(cpt.Text, type)
        hForm.Showmodal()
        Stop Event
    End Select
  Endif
  
End

Public Sub cpt_LostFocus()

  cpt_LF()
  If b = 0 Then compteman()
  If b <> 0 Then
    cpt.SetFocus
    cpt.Select
    b = 0
   Endif
   Stop Event
        
End

'****************************************************
'*      Gestion du focus. Routine de Charlie Reinl  *
'****************************************************
Public Sub Cmpt_GotFocus()

  With Utils
    .SetEditColor(Me, Last)
  End With

End

Public Sub cpt_LF()

  clear()
  If dte2.Avant(dte1, True) Then
    If son Then
      Music.Play
    Endif
    If Message.Warning("Attention ! Votre selection n'est pas possible.", "Ok") = 1 Then
      exo()
      DteN0.SetFocus
      dten0.Select
      Return
    Endif
  Endif
  If Bclient.Value And Left$(cpt.Text, 3) <> "411" Then
    Message.Warning("Le compte saisit n'est pas un compte client !")
    b = 1
  Else
    If Bfournisseur.Value And Left$(cpt.Text, 3) <> "401" Then
      Message.Warning("Le compte saisit n'est pas un compte fournisseur !")
      b = 1
    Else
      If Bgestion.Value And Left$(cpt.Text, 1) <> "6" And Bgestion.Value And Left$(cpt.Text, 1) <> "7" Then
        Message.Warning("Le compte saisit n'est pas un compte gestion !")
        b = 1
      Else
        If Bbilan.Value And Left$(cpt.Text, 1) <> "1" And Bbilan.Value And Left$(cpt.Text, 1) <> "2" And Bbilan.Value And Left$(cpt.Text, 1) <> "3" And Bbilan.Value And Left$(cpt.Text, 1) <> "4" And Bbilan.Value And Left$(cpt.Text, 1) <> "5" And Bbilan.Value And Left$(cpt.Text, 1) <> "8" And Bbilan.Value And Left$(cpt.Text, 1) <> "9" Then
          Message.Warning("Le compte saisit n'est pas un compte bilan !")
          b = 1
        Endif
      Endif
    Endif
  Endif
  Stop Event

End

Public Sub dteN0_LostFocus()

  dte1.L = dten0.Text
  dteN0.text = dte1.L

End

Public Sub dteN1_LostFocus()

  dte2.L = dteN1.Text
  dteN1.text = dte2.L

End

Public Sub Compdate()

  If son Then
    Music.Play
  Endif
  If Message.Warning(Txt, "Ok") = 1 Then
    If jour.Apres(dte1) Then 
'    If Right$(jour, 4) & Mid$(jour, 4, 2) & Left$(jour, 2) > Right$(dteN0.Text, 4) & Mid$(dteN0.Text, 4, 2) & Left$(dteN0.Text, 2) Then
      Ex1()
    Else
      exo()
    Endif
  Endif

End

Public Sub compdate2()

  If son Then
    Music.Play
  Endif
  If Message.Warning(Txt, "Ok") = 1 Then
    If jour.Avant(dte2, True)
'    If Right$(jour, 4) & Mid$(jour, 4, 2) & Left$(jour, 2) < Right$(dteN1.Text, 4) & Mid$(dteN1.Text, 4, 2) & Left$(dteN1.Text, 2) Then
      Ex1()
    Else
      exo()
    Endif
  Endif

End

'******************************************************************
'*  Recherche d'un compte lors d'une saisie manuelle      *
'******************************************************************
Public Sub compteman()

  Dim Cmpts As Result
  Dim Tab As String

  Tab = "Fiches_Comptes"
  Cmpts = Utils.db.Exec("SELECT  compte_cc, intitule_cc, cent_cc  FROM " & Tab & "  WHERE compte_cc like '" & cpt.Text & "%' and type_cc = &2", cpt.Text, type)
  If Cmpts.Available Then
    cpt.Text = Cmpts!compte_cc
    nom.Text = Cmpts!intitule_cc
    Compt = "5"
    affichage()
    b = 0
  Else
    If son Then
      Music.Play
    Endif
    message.Warning("Ce compte n'existe pas ou n'est pas du collectif selectionné!\n Verifiez votre saisie SVP !")
    b = 1
  Endif

End

'********************
'* On remet à zéro  *
'********************
Public Sub clear()

  Td = 0
  Tc = 0
  TT = 0
  nom.Text = ""
  dbHP.Text = "0.00"
  CdHP.Text = "0.00"
  SdHP.Text = "0.00"
  TotSldHP = 0
  dbP.Text = "0.00"
  CdP.Text = "0.00"
  TotSldP = 0
  SdP.Text = "0.00"
  TotD.Text = "0.00"
  TotC.Text = "0.00"
  solde.Text = "0.00"
  DebHp = 0
  CredHP = 0
  DebP = 0
  CredP = 0
  Necrit.Visible = False

End

'**************************
'* On affiche les données *
'**************************
Public Sub affichage()

  Dim rResult, presult As Result
  Dim tot As Float
  Dim Tabp As String = "Docs_Compta"
  Dim dt As LDate

  Tab1 = "Ctrln"
  With Utils
    Colcli.clear
    'IF cpt.Text <> "" THEN
    If Compt = "0" Then
      rrResult.MoveFirst
      cpt.Text = rrResult!compte_cc
      nom.Text = rrResult!intitule_cc
      Centr = rrResult!cent_cc
      If Centr = True Then
        Ctrl.Value = True
      Else
        Ctrl.value = False
      Endif
      Compt = ""
    Else
      rrResult.MoveFirst()
      Repeat
        If rrResult!compte_cc = cpt.Text Then
          nom.Text = rrResult!intitule_cc
          Break
        Endif
      Until rrResult.Movenext()
    Endif
    'ENDIF
    If rrResult.Available And Compt = "1" Then
      rrResult.MoveFirst
      cpt.Text = rrResult!compte_cc
      nom.Text = rrResult!intitule_cc
      Centr = rrResult!cent_cc
      Compt = ""
      If Centr = True Then
        Ctrl.Value = True
      Else
        Ctrl.value = False
      Endif
    Endif
    If rrResult.Available And Compt = "2" Then
      rrResult.Movenext
      If rrResult.Available Then
        cpt.Text = rrResult!compte_cc
        nom.Text = rrResult!intitule_cc
        Centr = rrResult!cent_cc
      Else
        rrResult.MoveLast
      Endif
      Compt = ""
      If Centr = True Then
        Ctrl.Value = True
      Else
        Ctrl.value = False
      Endif
    Endif

    If rrResult.Available And Compt = "3" Then
      rrResult.MovePrevious
      If rrResult.Available Then
        cpt.Text = rrResult!compte_cc
        nom.Text = rrResult!intitule_cc
        Centr = rrResult!cent_cc
      Else
        rrResult.MoveFirst
      Endif
      Compt = ""
      If Centr = True Then
        Ctrl.Value = True
      Else
        Ctrl.value = False
      Endif
    Endif

    If Compt = "4" Then
      rrResult.MoveLast
      cpt.Text = rrResult!compte_cc
      nom.Text = rrResult!intitule_cc
      Centr = rrResult!cent_cc
      Compt = ""
      If Centr = True Then
        Ctrl.Value = True
      Else
        Ctrl.value = False
      Endif
    Endif

    If Compt = "5" Then
      Compt = ""
      If Centr = True Then
        Ctrl.Value = True
      Else
        Ctrl.value = False
      Endif
    Endif

    If Enl.value = True Then
      $lstex = New Listextcpt(cpt.Text, DteN0.Text, dteN1.Text, "n", True, sTri)
      'rResult = Utils.db.Exec("SELECT * FROM " & Tab0 & " WHERE compte = &1 and lettree = &2  and validee = &3 order by &4", cpt.text, 0, 1, sTri)
    Else
      If El.value = True Then
        $lstex = New Listextcpt(cpt.Text, DteN0.Text, dteN1.Text, "o", True, sTri)
        'rResult = Utils.db.Exec("SELECT * FROM " & Tab0 & " WHERE compte = &1 and lettree = &2 and validee = &3 order by  &4", cpt.Text, 1, 1, sTri)
      Else
        If Toutes.value = True Then
          $lstex = New Listextcpt(cpt.Text, DteN0.Text, dteN1.Text, "t", True, sTri)
          'rResult = Utils.db.Exec("SELECT * FROM " & Tab0 & " WHERE compte = &1  and validee = &2 order by " & sTri & "", cpt.text, 1)
        Endif
      Endif
    Endif
    rResult = $lstex.resext

    If rResult.Available Then
      rResult.MoveFirst
      Repeat
        dt = New LDate(rResult!dte)
        If Ctrl.Value = False Or detail.Value = True Then
 '         If dt.Apres(dte2) and Then
'          If .Cdate_Comp(rResult!dte) >= .Cdate_dbase(dten0.Text) And .Cdate_Comp(rResult!dte) <= .Cdate_dbase(dten1.Text) Then
            pResult = Utils.db.Exec("SELECT * FROM " & Tabp & " WHERE code = &1", rResult!numero)
            Colcli.Add(rResult.Index, rResult.Index)
            If presult.Available Then
              Colcli.Item[0] = "* " & rResult!compte
            Else
              Colcli.Item[0] = "  " & rResult!compte
            Endif
            Colcli.Item[1] = dt.L
            Colcli.Item[2] = rResult!libelle
            Colcli.Item[3] = rResult!numdoc
            Colcli.Item[4] = Format$(rResult!montantd, "0.00")
            Colcli.Item[5] = Format$(rResult!montantc, "0.00")
            tot = tot + rResult!montantd - rResult!montantc
            Colcli.Item[6] = Format(Val(.cpoint(tot)), "0.00")
            Colcli.Item[7] = rResult!numero
            Colcli.Item[8] = rResult!jour
            If rResult!lettree And rResult!lettree <> "0" Then
              Print rResult!lettree
              Colcli.Item[9] = "*"
            Else
              Colcli.Item[9] = ""
            Endif
            Colcli.Item[10] = rResult!tresorerie
            DebP = DebP + rResult!montantd
            CredP = CredP + rResult!montantc
'          Else
'            If .Cdate_Comp(rResult!dte) <= .Cdate_dbase(dten0.Text) Then
'              DebHP = DebHP + rResult!montantd
 '             CredHP = CredHP + rResult!montantc
  '          Endif
'          Endif
        Else
          If dt.Apres(dte1) And dt.Avant(dte2) Then
 '         If .Cdate_Comp(rResult!dte) >= .Cdate_dbase(dten0.Text) And .Cdate_Comp(rResult!dte) <= .Cdate_dbase(dten1.Text) Then
            jour = rResult!jour
            Datj = dt.L
            montantd = rResult!montantd
            montantc = rResult!montantc
            centralisation()
          Endif
        Endif
      Until rResult.MoveNext()
    Endif
    Aff()
    montantd = 0
    montantc = 0
    Mnt = 0
    Mnt1 = 0
    'ENDIF
  End With
  dbHP.Text = Format$(DebHP, "0.00")
  CdHP.Text = Format$(CredHP, "0.00")
  TotSldHP = Val(dbHP.Text) - Val(CdHP.Text)
  SDHP.Text = Format$(TotSldHP, "0.00")
  dbP.Text = Format$(DebP, "0.00")
  CdP.Text = Format$(CredP, "0.00")
  TotSldP = Val(dbP.Text) - Val(CdP.Text)
  SDP.Text = Format$(TotSldP, "0.00")
  TotD.Text = Val(dbHP.Text) + Val(dbp.Text)
  TotD.Text = Format$(TotD.Text, "0.00")
  TotC.Text = Val(CdHP.Text) + Val(Cdp.Text)
  TotC.Text = Format$(TotC.Text, "0.00")
  solde.Text = Format$(Val(TotD.Text) - Val(TotC.Text), "0.00")
  Ncode = 1

End

'**************************************************
'* On récupere le solde des comptes centralisés   *
'**************************************************
Public Sub aff()

  Dim An As String

  If Centr = True And detail.Value = False Then Colcli.Clear
  With utils
    CResult = Utils.db.Exec("SELECT * FROM " & Tab1 & " WHERE compte = &1 Order by dte", cpt.text)
    If CResult.Available Then
      Repeat
        An = CResult!dte
        An = Right$(An, 2) & "." & Mid$(An, 5, 2) & "." & Left$(An, 4)
        Colcli.Add(CResult!dte, CResult!dte)
        Colcli.Item[0] = "   " & CResult!compte
        Colcli.Item[1] = An
        Colcli.Item[2] = " Centralisation"
        Colcli.Item[5] = Format$(CResult!montantd, "0.00")
        Colcli.Item[6] = Format$(CResult!montantc, "0.00")
        Colcli.Item[8] = CResult!jour
        DebP = DebP + CResult!montantd
        CredP = CredP + CResult!montantc
      Until CResult.MoveNext()
    Endif
  End With

End

'**************************************************
'*     Gestion de la centralisation si besoin     *
'**************************************************
Public Sub Centralisation()

  Dim $Mois As String
  Dim Libel As String
  Dim Jrs As Date
  Dim jrs1 As String

  Libel = "Centralisation"
  jrs = Date(Right$(Datj, 4), Format$(Val(Mid$(Datj, 4, 2)), "00"), 01)
  $Mois = Right$(Datj, 4) & Mid$(Datj, 4, 2)
  Jrs1 = finmois(jrs)
  Jrs1 = Right$(Datj, 4) & Format$(Val(Mid$(Datj, 4, 2)), "00") & Jrs1
  With utils
    CResult = Utils.db.Exec("SELECT * FROM " & Tab1 & " WHERE compte = &1 and mois = &2", cpt.Text, $Mois)
    If CResult.Available Then
      Mnt = montantd + cResult!montantd
      Mnt1 = montantc + cResult!montantc
      Utils.db.Exec("Update " & Tab1 & " set montantd = &2, montantc = &3, dte = &5 Where compte = &1 and mois = &4", cpt.Text, Mnt, Mnt1, $Mois, Jrs1)
    Else
      Utils.db.Exec("INSERT INTO " & Tab1 & "(compte,intitule,dte,libelle, montantd, montantc, jour, mois) VALUES (&1, &2, &3, '" & Libel & "', &5, &6, &7, &8)", cpt.Text, intitule, Jrs1, Jrs1, montantd, montantc, jour, $Mois)
    Endif
  End With

End

'****************************************
'*    Calcul du dernier jour du mois    *
'****************************************
Public Function finmois(Jrs As Date) As Integer

  Dim Jrs1 As Integer

  If Month(Jrs) < 12 Then
    Jrs1 = Day(Date(Year(Jrs), Month(Jrs) + 1, 1) - 1)
  Else
    Jrs1 = Day(Date(Year(Jrs) + 1, 1, 1) - 1)
  Endif
  Return Jrs1

End

'****************************************
'* Gestion du radiobutton "Centralisé"  *
'****************************************
Public Sub detail_Click()

  If Centr = False Then
    detail.Value = False
  Endif
  Raz()
  Affichage()

End
'***************************************
'*     On veut toutes les écritures    *
'***************************************

Public Sub Toutes_Click()

  If cpt.Text <> "" Then
    clear()
    affichage()
  Endif
  detail.Value = False

End

'***************************************************
'*     On ne veut que les écritures non lettrées   *
'***************************************************
Public Sub Enl_Click()

  If cpt.Text <> "" Then
    clear()
    affichage()
  Endif
  detail.Value = False

End

'***********************************************
'*     On ne veut que les écritures lettrées   *
'***********************************************
Public Sub El_Click()

  If cpt.Text <> "" Then
    clear()
    affichage()
  Endif
  detail.Value = False

End

'***************************************
'*     On ne veut les comptes clients  *
'***************************************
Public Sub Bclient_Click()

  Colcli.clear
  Clear()
  cpt.Text = ""
  cpt.Setfocus
  cpt.Select
  type = "C"
  rrResult = Utils.db.Exec("SELECT * FROM " & Tab2 & " WHERE type_cc = &1 order by cast(compte_cc AS char)", type)
  detail.Value = False
  If IsNull($Org) Then Button4_Click()

End

'***************************************
'*  On veut les comptes fournisseurs   *
'***************************************
Public Sub Bfournisseur_Click()

  Colcli.clear
  Clear()
  cpt.Text = ""
  cpt.Setfocus
  cpt.Select
  type = "F"
  rrResult = Utils.db.Exec("SELECT * FROM " & Tab2 & " WHERE type_cc = &1 order by cast(compte_cc AS char)", type)
  detail.Value = False
  Button4_Click()

End

'***************************************
'*    On veut les comptes de gestion   *
'***************************************
Public Sub Bgestion_Click()

  Colcli.clear
  Clear()
  cpt.Text = ""
  cpt.Setfocus
  cpt.Select
  type = "G"
  rrResult = Utils.db.Exec("SELECT * FROM " & Tab2 & " WHERE type_cc = &1 order by cast(compte_cc AS char)", type)
  detail.Value = False
  Button4_Click()

End

'***************************************
'*     On veut les comptes de bilan    *
'***************************************
Public Sub Bbilan_Click()

  Colcli.clear
  Clear()
  cpt.Text = ""
  cpt.Setfocus
  cpt.Select
  type = "B"
  rrResult = Utils.db.Exec("SELECT * FROM " & Tab2 & " WHERE type_cc = &1 order by cast(compte_cc AS char)", type)
  detail.Value = False
  Button4_Click()

End

'******************************************************
'* On veut les écritures de l'exo en cours de bilan   *
'******************************************************
Public Sub E0_Click()

  Ex1()
  detail.Value = False

End

'*********************************************
'* On veut les écritures de l'exo en cours   *
'*********************************************
Public Sub E1_Click()

  Exo()

End

'****************************************
 '*     On revient au premier compte     *
 '****************************************
Public Sub Button4_Click()

  clear()
  cpt.Text = ""
  Compt = "0"
  affichage()
  detail.Value = False

End
 
'****************************************
'*     On revient au compte précédent    *
'****************************************

Public Sub Button1_Click()

  clear()
  If cpt.Text = "" Then
    cpt.Text = ""
    Compt = "0"
  Else
    Compt = "3"
  Endif
  Raz()
  affichage()
  detail.Value = False

End

'****************************************
'*       On va au compte suivant        *
'****************************************
Public Sub Button2_Click()

  clear()
  If cpt.Text = "" Then
    cpt.Text = ""
    Compt = "1"
  Else
    Compt = "2"
  Endif
  affichage()
  detail.Value = False

End

'****************************************
'*        On va au dernier compte       *
'****************************************

Public Sub Button3_Click()

  clear()
  cpt.Text = ""
  Compt = "4"
  affichage()
  detail.Value = False

End

Public Sub Form_KeyPress()

  If Key.code = key.F11 Then
    Appel_saisie()
    Affichage()
    Stop Event
  Endif
  If Key.code = key.F12 Then
    Appel_Tresor()
    Affichage()
    Stop Event
  Endif

End

'****************************************
'*      On remet les zones a blanc      *
'****************************************

Public Sub Raz()

  Colcli.Clear
  dbP.Text = ""
  CdP.Text = "" = 0
  DebP = 0
  CredP = 0
  DebHp = 0
  CredHp = 0

End

Public Sub Tdate_MouseDown()

  If btri Then
    sTri = "dte asc"
  Else
    sTri = "dte desc"
  Endif
  affichage()
  btri = Not btri

End

Public Sub Tlibelle_MouseDown()

  If btri Then
    sTri = "libelle asc"
  Else
    sTri = "libelle desc"
  Endif
  affichage()
  btri = Not btri

End

Public Sub Tdoc_MouseDown()

  If btri Then
    sTri = "numdoc asc"
  Else
    sTri = "numdoc desc"
  Endif
  affichage()
  btri = Not btri

End

Public Sub Tnumero_MouseDown()

  If btri Then
    sTri = "numero asc"
  Else
    sTri = "numero desc"
  Endif
  affichage()
  btri = Not btri

End

Public Sub Tdebit_MouseDown()

  If btri Then
    sTri = "montantd asc"
  Else
    sTri = "montantd desc"
  Endif
  affichage()
  btri = Not btri

End

Public Sub Tcredit_MouseDown()

  If btri Then
    sTri = "montantc asc"
  Else
    sTri = "montantc desc"
  Endif
  affichage()
  btri = Not btri

End

Public Sub Tjournal_MouseDown()

  If btri Then
    sTri = "jour asc"
  Else
    sTri = "jour desc"
  Endif
  affichage()
  btri = Not btri

End

Public Sub Tlettree_MouseDown()

  If btri Then
    sTri = "lettree asc"
  Else
    sTri = "lettree desc"
  Endif
  affichage()
  btri = Not btri

End

Public Sub Colcli_Click()

  Dim rDoc As Result

  If Me.mouse = Mouse.Right Then
    rDoc = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabCPTdocs") & " where doc2 like \"%" & Colcli.Item[7] & "%\" and doc2 like \"%" & Replace$(Colcli.Item[0], "* ", "") & "%\"")
    If Not rDoc.Available Then rDoc = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabCPTdocs") & " where doc2 like \"%" & Colcli.Item[7] & "%\"")
    If rDoc.Available Then
      Repeat
        Desktop.Open(rDoc!doc)
      Until rDoc.MoveNext()
    Endif
  Else
    Colcli.Sorted = True
  Endif

End

Public Sub Colcli_KeyPress()

  If Key.code = Key.enter Or Key.code = Key.return Then
    Colcli_Activate()
  Endif

End

Public Sub Colcli_Activate()

  Dim Mvt, Mvt2 As Result
  Dim TabM As String
  Dim modif As Boolean = True

  TabM = "Fiches_Mvt"
  If IsNull($Org) Then
    If E0.Value Or If E1.Value Then
      If Ctrl.value = False Then
        num = Colcli.current[7]
        sJournal = Colcli.current[8]
        sNumero = Colcli.current[7]
        If num <> 0 Then
          mvt = $lstex.litleres(num)
        Else
          Return
        Endif
 '       Mvt = Utils.db.Exec("SELECT * FROM " & tabM & " where numero = &1 ", Num)
        If Mvt!cloturee = True Then
          cloturee = 1
          Necrit.Visible = False
          If son Then
            Music.Play
          Endif
          Try Message.Error("Modification impossible, cette écriture est cloturée")
          Modif = False
        Else
          Mvt2 = Utils.db.Exec("SELECT * FROM " & Cbase.Table("TabMvt") & "  WHERE numero = &1 and left(compte,2) = &2", sNumero, "51")
          If Mvt2.Available Then
            If Mvt2!pointee = True Then
              cloturee = 1
              Necrit.Visible = False
              If son Then
                Music.Play
              Endif
              Try Message.Error("Modification impossible, cette écriture est pointée")
              modif = False
            Endif
          Endif
          If modif Then
            cloturee = 0
            Necrit.Visible = True
          Endif
        Endif
      Else
        Necrit.Visible = False
        If son Then
          Music.Play
        Endif
        Try Message.Error("Modification impossible, cette écriture est centralisée")
      Endif
    Else
      Necrit.Visible = False
      If son Then
        Music.Play
      Endif
      Try Message.Error("La modification des écritures d'un exercice cloturé est impossible !")
    Endif
  Endif

End

'*********************************************
'           On modifie l'écriture            *
'*********************************************
Public Sub Necrit_Click()

  Dim hForm As Saisecrit
  Dim hForm2 As Tresor

  If Journaux.visible = False Then
    tresr = Colcli.Current[10]
    If Cloturee = 0 Then
      If tresr = False Then
        hForm = New Saisecrit(num, Me.Parent, True)
        Try hForm.Showmodal()
      Else
        hForm2 = New Tresor(num)
        Try hForm2.Showmodal()
      Endif
      clear()
      affichage()
    Else
      If Son Then
        Music.Play
      Endif
      Message.Delete("Vous ne pouvez pas modifier une écriture cloturée !")
    Endif
  Endif

End

Public Sub Appel_Saisie()

  Dim hForm As Saisecrit

  hForm = New Saisecrit("")
  Try hForm.Showmodal()

End

Public Sub Appel_Tresor()

  Dim hForm As Tresor

  hForm = New Tresor("")
  Try hForm.Showmodal()

End

'*************************
'*   On affiche la doc   *
'*************************
Public Sub Button5_Click()

  Doc.Open("Visextraits")

End

'***********************
'*  Michto ! On sort   *
'***********************
Public Sub Button6_Click()

  Start.LocalSettings["/Soc" & Start.Societe & "/Col/LcolE"] = "col0:" & Colcli.Columns[0].Width & ";" & "col1:" & Colcli.Columns[1].Width & ";" & "col2:" & Colcli.Columns[2].Width & ";" & "col3:" & Colcli.Columns[3].Width & ";" & "col4:" & Colcli.Columns[4].Width & ";" & "col5:" & Colcli.Columns[5].Width & ";" & "col6:" & Colcli.Columns[6].Width & ";" & "col7:" & Colcli.Columns[7].Width & ";" & "col8:" & Colcli.Columns[8].Width & ";" & "col9:" & Colcli.Columns[9].Width
  Start.LocalSettings.Save
  Me.Close

End

'****************************Edition******************************

Public Sub butedit_Click()
  
  Dim ressoc, res As Result
  Dim vb, vb1 As ReportVBox
  Dim hb As ReportHBox
  Dim lab As ReportLabel
  Dim coul As Integer
  Dim totd, totc, sld As Float
  Dim Filename As String
  Dim prt As New Printer
  Dim pgb As ProgBar
  
  pgb = New ProgBar("Edition en cours", 0)
  pgb.Show
  Filename = User.Home & "/tmp/Extrait.pdf"
  prt.OutputFile = Filename
  
  If IsNull($lstex.resext) Then Return
  Try $lstex.resext.MoveFirst
  If Not $lstex.resext.Available Then Return
  coul = Val("&H" & Hex(Start.R) & Hex(Start.G) & Hex(Start.B))
  $rpt = New Report
  vb = New ReportVBox($rpt)
  vb.Fixed = True
  vb.Autoresize = True
'  vb.Border = ReportBorder(
  lab = New ReportLabel(vb)
  lab.Height = "7mm"
  lab.Text = "Impression des extraits de compte au " & Format$(Now, "dd.mm.yyyy")
  lab.Alignment = Align.Center
  lab.BackGround = ReportBrush.Color(coul)
  lab.Font = Font["Serif,Bold,Italic,+2"]
  hb = New ReportHBox(vb)
  hb.Expand = True
  hb.Autoresize = True

  ressoc = Utils.db.Exec("SELECT * FROM Fiches_Societes")
  If ressoc.Available Then
    vb1 = New ReportVBox(hb)
    vb1.Expand = True
    lab = New ReportLabel(vb1)
    lab.Text = ressoc!type_sc & " " & ressoc!int_sc
    lab.Font = font["Serif,Bold,+1"]
    lab = New ReportLabel(vb1)
    lab.Text = ressoc!adr1_sc
    lab.Font = font["Serif,-1"]
    lab = New ReportLabel(vb1)
    lab.Text = ressoc!adr2_sc
    lab.Font = font["Serif,-1"]
    lab = New ReportLabel(vb1)
    lab.Text = ressoc!cp_sc & " " & ressoc!burdis_sc
    lab.Font = font["Serif,-1"]
    lab = New ReportLabel(vb1)
    lab.Text = ressoc!tel_sc
    lab.Font = font["Serif,-1"]
    lab = New ReportLabel(vb1)
    lab.Text = ressoc!email_sc
    lab.Font = font["Serif,-1"]
    lab = New ReportLabel(vb1)
    lab.Text = ressoc!site
    lab.Font = font["Serif,-1"]
  Endif
  If Bclient.Value Or Bfournisseur.Value Then
    vb1 = New ReportVBox(hb)
    If Bclient.Value Then
      res = utils.db.Exec("SELECT * FROM Fiches_Cli WHERE cli_code=&1", cpt.Text)
      ajouadr(vb1, res!cli_rs_soc, res!cli_nom & " " & res!cli_pnm, res!cli_adr1, res!cli_adr2, res!cli_cd_ptl & " " & res!cli_ville) 
    Endif
    If Bfournisseur.Value Then
      res = utils.db.Exec("SELECT * FROM Fiches_Four WHERE fo_code=&1", cpt.Text)
      ajouadr(vb1, res!fo_rs_soc, res!fo_nom & " " & res!fo_pnm, res!fo_adr1, res!fo_adr2 & res!fo_cd_ptl & " " & res!fo_ville)
    Endif
    
  Endif
  hb = New ReporthBox(vb)
  hb.Border = ReportBorder["Top:1pt #000000;Bottom:1pt #000000;Left:1pt #000000;Right:1pt #000000"]
  hb.Height = "5mm"
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "5mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = "Date"
  lab.Alignment = Align.Center
  
  lab = New ReportLabel(hb)
  lab.Expand = True
  lab.Height = "5mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = "libelle"
  lab.Alignment = Align.Center
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "5mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = "Debit"
  lab.Alignment = Align.Center
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "5mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = "Credit"
  lab.Alignment = Align.Center
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "5mm"
  lab.Text = "Solde"
  lab.Alignment = Align.Center
  
  $lstex.resext.MoveFirst
  
  Repeat
    totd += $lstex.resext!montantd
    totc += $lstex.resext!montantc
    sld = totd - totc
    ajoulign(sld)
  Until $lstex.resext.MoveNext()
  
  hb = New ReporthBox($rpt)
  hb.Border = ReportBorder["Top:1pt #000000;Bottom:1pt #000000;Left:1pt #000000;Right:1pt #000000"]
  hb.Height = "5mm"
  
  lab = New ReportLabel(hb)
  lab.Expand = True
  lab.Height = "5mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = "TOTAL "
  lab.Alignment = Align.Center
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "5mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = Format(totd, "0.00")
  lab.Alignment = Align.Right
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "5mm"
  lab.Border = ReportBorder["Right:1pt #000000"]
  lab.Text = Format(totc, "0.00")
  lab.Alignment = Align.Right
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "5mm"
  lab.Text = Format(sld, "0.00")
  lab.Alignment = Align.Right
  
  $rpt.Print(prt)
  Visualiseur.Prog_Editeur(Filename)
  pgb.Close
  
End

Private Sub ajoulign(sld As Float)
  
  Dim lab As ReportLabel
  Dim hb As ReportHBox
  
  hb = New ReporthBox($rpt)
  hb.Height = "4mm"
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "4mm"
  lab.Font = font["Serif,-2"]
  lab.Text = LDate($lstex.resext!dte).L
  lab.Alignment = Align.Left
  lab.Border = ReportBorder["Right:1pt #000000"]
  
  lab = New ReportLabel(hb)
  lab.Expand = True
  lab.Height = "4mm"
  lab.Font = font["Serif,-2"]
  lab.Text = $lstex.resext!libelle
  lab.Alignment = Align.Left
  lab.Border = ReportBorder["Right:1pt #000000"]
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "4mm"
  lab.Font = font["Serif,-2"]
  lab.Text = Format($lstex.resext!montantd, "0.00")
  lab.Alignment = Align.Right
  lab.Border = ReportBorder["Right:1pt #000000"]
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "4mm"
  lab.Font = font["Serif,-2"]
  lab.Text = Format($lstex.resext!montantc, "0.00")
  lab.Alignment = Align.Right
  lab.Border = ReportBorder["Right:1pt #000000"]
  
  lab = New ReportLabel(hb)
  lab.Width = "30mm"
  lab.Height = "4mm"
  lab.Font = font["Serif,-2"]
  lab.Text = Format(sld, "0.00")
  lab.Alignment = Align.Right
  
End


Private Sub ajouadr(vb1 As ReportVBox, rs As String, nom As String, adr1 As String, adr2 As String, ville As String)
  
  Dim lab As ReportLabel
  
  lab = New ReportLabel(vb1)
  lab.Text = rs & " " & nom
  
  lab = New ReportLabel(vb1)
  lab.text = adr1
   
  lab = New ReportLabel(vb1)
  lab.text = adr2
   
  lab = New ReportLabel(vb1)
  lab.text = ville
   
  lab = New ReportLabel(vb1)
  lab.text = "Du : " & dten0.Text & " au : " & dten1.Text
   
End
